{"version":3,"sources":["serviceWorker.ts","redux/reducers/gamePhase.tsx","redux/reducers/players.tsx","redux/reducers/dices.tsx","redux/reducers/dicesSelected.tsx","redux/reducers/loading.tsx","helpers/getItem.tsx","redux/reducers/diceSize.tsx","redux/reducers/combinations.tsx","redux/reducers/playerMove.tsx","redux/reducers/tableSize.tsx","redux/reducers/drawerOpened.tsx","redux/reducers/playerPoints.tsx","helpers/calcBonus.tsx","redux/getStateFromStorage.tsx","redux/defaultState.tsx","helpers/toString.tsx","helpers/setItem.tsx","redux/createStore.tsx","redux/subscriptions.tsx","helpers/themeProviderHOC.tsx","components/Drawer/DrawerStyled.tsx","components/MainLayout/MainLayoutParts.tsx","helpers/replaceKeysInObject.tsx","helpers/getType.tsx","helpers/conditionalCSS.tsx","components/TopMenu/Heading.tsx","components/TopMenu/AppBarStyled.tsx","components/TopMenu/MenuButton/MenuButton.tsx","components/TopMenu/MenuButton/MenuButtonConnected.tsx","components/TopMenu/TopMenu.tsx","components/Drawer/RestartGameButton/DialogContentStyled.tsx","components/Drawer/RestartGameButton/WarningIconStyled.tsx","components/Drawer/DrawerListItemStyled.tsx","components/Drawer/DrawerListItem.tsx","components/Drawer/DrawerListDivider.tsx","redux/actions/restartGameThunk.tsx","helpers/visibilityHOC.tsx","components/Drawer/RestartGameButton/RestartGameButtonConnected.tsx","components/Drawer/RestartGameButton/RestartGameButton.tsx","components/Drawer/ChangeTableSizeButton/ChangeTableSizeButtonConnected.tsx","components/Drawer/ChangeTableSizeButton/ChangeTableSizeButton.tsx","components/Drawer/ThemeToggler.tsx","components/Drawer/DiceSizeChanger/DiceSizeChangerButtonsWrapper.tsx","components/Drawer/DiceSizeChanger/DiceSizeChangerConnected.tsx","components/Drawer/DiceSizeChanger/DiceSizeChanger.tsx","components/Drawer/DrawerConnected.tsx","components/Drawer/Drawer.tsx","components/MainLayout/MainLayoutConnected.tsx","components/MainLayout/useGlobalStyles.tsx","components/MainLayout/MainLayout.tsx","components/StartGameButton/StartGameButtonConnected.tsx","components/PlayersSelection/Buttons/ButtonsWrapper.tsx","components/PlayersSelection/Buttons/CancelStartGameButtonConnected.tsx","redux/actions/nextTurnThunk.tsx","components/PlayersSelection/Buttons/StartGameButtonConnected.tsx","components/PlayersSelection/PlayersList/PlayersListPaper.tsx","components/PlayersSelection/PlayersList/PlayersListConnected.tsx","components/PlayersSelection/PlayersList/PlayersList.tsx","components/PlayersSelection/AddPlayer/DialogContentStyled.tsx","components/PlayersSelection/AddPlayer/AddPlayerConnected.tsx","helpers/makeId.tsx","components/PlayersSelection/AddPlayer/AddPlayer.tsx","components/PlayersSelection/Buttons/ResetToDefaultPlayersButtonConnected.tsx","components/PlayersSelection/PlayersSelection.tsx","components/Dices/Dice/DiceInner.tsx","components/Dices/Dice/DiceDot.tsx","components/Dices/Dice/DiceWrapper.tsx","components/Dices/Dice/Dice.tsx","components/Dices/DicesWrapper/DicesWrapper.tsx","components/Dices/DicesConnected.tsx","components/Dices/Dices.tsx","components/DicesActions/RollDiceButton/RollDiceButtonStyled.tsx","components/DicesActions/RollDiceButton/CasinoIconStyled.tsx","components/DicesActions/RollDiceButton/RollDiceButtonTip.tsx","components/DicesActions/RollDiceButton/RollDiceButton.tsx","helpers/random.tsx","components/DicesActions/RollDiceButton/RollDiceButtonConnected.tsx","redux/actions/generateRandomDicesThunk.tsx","components/DicesActions/ResetDicesButton/ResetDicesButtonConnected.tsx","components/DicesActions/ResetDicesButton/ResetDicesButton.tsx","components/DicesActions/DicesActionsWrapper.tsx","components/DicesActions/DicesActions.tsx","components/Rules/Heading.tsx","components/Rules/Paragraph.tsx","components/Rules/TableCellNoWrap.tsx","components/Rules/Rules.tsx","components/StartGameButton/StartGameButtonWrapper.tsx","components/CombinationsContainer/TablePartsStyled/TableCellStyled.tsx","helpers/checkMatch.tsx","helpers/uniq.tsx","helpers/css.tsx","components/CombinationsContainer/Combination/CellContent/Empty.tsx","components/CombinationsContainer/Combination/CellContent/Button.tsx","components/CombinationsContainer/Combination/CellContent/Matched.tsx","components/CombinationsContainer/Combination/CellContent/Bonus.tsx","helpers/inArray.tsx","helpers/defineWorkEnding.tsx","components/CombinationsContainer/Combination/CombinationConnected.tsx","redux/actions/saveCombinationThunk.tsx","components/CombinationsContainer/Combination/Combination.tsx","helpers/renderPoints.tsx","helpers/renderBonus.tsx","components/CombinationsContainer/TablePartsStyled/Table.tsx","redux/selectors/makePlayersSelector.tsx","redux/selectors/makePlayerMoveSelector.tsx","components/CombinationsContainer/TableHeader.tsx","components/CombinationsContainer/Combination/CombinationWrapper.tsx","redux/selectors/makeGetTotalsSelector.tsx","helpers/calcTotals.tsx","components/CombinationsContainer/TableFooter.tsx","redux/selectors/combinationsSelector.tsx","redux/selectors/tableSizeSelector.tsx","redux/selectors/noMovesSelector.tsx","helpers/isMoveAvailable.tsx","components/CombinationsContainer/CombinationsContainer.tsx","components/EndOfGame/parts/DialogStyled.tsx","components/EndOfGame/parts/DialogContentStyled.tsx","components/EndOfGame/parts/DialogTitleStyled.tsx","components/EndOfGame/parts/DialogActionsStyled.tsx","components/EndOfGame/parts/DialogContentColumn.tsx","components/EndOfGame/parts/DialogContentNameRow.tsx","components/EndOfGame/parts/DialogContentTotalRow.tsx","components/EndOfGame/EndOfGameStats.tsx","components/EndOfGame/parts/GoHomeButton.tsx","components/EndOfGame/parts/DialogTipStyled.tsx","components/EndOfGame/EndOfGameConnected.tsx","components/EndOfGame/EndOfGame.tsx","components/App/AppConnected.tsx","components/App/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","GamePhases","Constants","gamePhaseDefaultState","gamePhase","PRE_GAME","changeGamePhase","type","CHANGE_GAME_PHASE","entry","playersDefaultState","id","name","dicesDefaultState","resetDices","RESET_DICES","dicesSelectedDefaultState","unselectAllDices","UNSELECT_ALL_DICES","getItem","key","parse","item","localStorage","JSON","Combination","isBonus","combination","BONUS","combinationsDefaultState","title","ONE","max","TWO","THREE","FOUR","FIVE","SIX","EQUAL_3","EQUAL_4","SMALL_STRAIGHT","BIG_STRAIGHT","TWO_PAIR","FULL_HOUSE","THE_YACHT","CHANCE","MAX_POSSIBLE_POINTS","reduce","prev","curr","TableSizes","playerMoveDefaultState","tableSizeDefaultState","MEDIUM","calcBonus","state","playerId","bonus","Object","keys","isNaN","parseInt","playerPointsDefaultState","players","dices","dicesSelected","loading","diceSize","combinations","playerMove","tableSize","drawerOpened","playerPoints","e","console","error","defaultState","toString","obj","stringify","toJSON","setItem","value","middleware","thunk","reducers","combineReducers","ADD_PLAYER","update","$push","REMOVE_PLAYER","$splice","findIndex","RESET_PLAYERS","GENERATE_RANDOM_DICES","UPDATE_DICES","SELECT_DICE","diceIndex","index","indexOf","length","SET_LOADING","INCREASE_DICE_SIZE","DECREASE_DICE_SIZE","INCREASE_SHOT","shot","NEXT_TURN","RESET_PLAYER_MOVE","TOGGLE_TABLE_SIZE","TOGGLE_DRAWER_OPENED","SAVE_COMBINATION","points","$merge","$set","RESET_PLAYER_POINTS","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","subscribe","getState","subscriptions","Component","useStyles","makeStyles","spacing","toolbar","mixins","transitions","create","easing","duration","createStyles","drawerHeader","drawer","width","paper","overflowX","paperClose","borderRight","drawerOpen","transition","sharp","enteringScreen","drawerClose","leavingScreen","DrawerStyled","open","onClose","children","className","cx","classes","variant","Divider","List","Wrapper","styled","props","theme","minHeight","marginBottom","marginLeft","Push","height","Footer","display","alignItems","padding","Inner","replaceKeysInObject","what","withWhat","modifyValue","resObject","map","call","getType","maxWidth","ThemeContext","createContext","conditionalCSS","params","returnObject","forEach","param","Array","isArray","condition","css","Heading","Typography","component","palette","color","AppBarStyled","AppBar","zIndex","MenuButton","IconButton","edge","fontSize","common","black","white","marginRight","MenuButtonConnected","connect","toggleDrawerOpened","flag","onClick","TopMenu","Toolbar","DialogContentStyled","DialogContent","minWidth","justifyContent","WarningIconStyled","WarningIcon","yellow","A700","DrawerListItemStyled","ListItem","whiteSpace","DrawerListItem","icon","button","ListItemIcon","ListItemText","primary","DrawerListDivider","top","bottom","restProps","marginTop","restartGameThunk","dispatch","visibilityHOC","hidden","RestartGameButtonConnected","restartGameAction","IN_PLAY","useState","setOpen","closeModal","style","Dialog","DialogTitle","DialogActions","Button","ChangeTableSizeButtonConnected","toggleSize","SMALL","onChange","Checkbox","checked","ThemeToggler","Consumer","toggleTheme","Switch","DiceSizeChangerButtonsWrapper","ButtonGroup","size","DiceSizeChangerConnected","increaseDiceSize","decreaseDiceSize","disabled","DrawerConnected","drawerOpenedConnector","_","LayoutWrapper","LayoutFooter","useGlobalStyles","grey","background","margin","boxSizing","backgroundColor","MainLayout","CssBaseline","StartGameButtonConnected","PLAYERS_SELECTION","ButtonsWrapper","CancelStartGameButtonConnected","startIcon","nextTurnThunk","move","player","PlayersListPaper","Paper","PlayersListConnected","removePlayer","ListItemAvatar","Avatar","ListItemSecondaryAction","paddingTop","paddingBottom","AddPlayerConnected","addPlayer","replace","c","r","Math","random","setDisabled","inputValue","setInputValue","onSubmit","preventDefault","trim","Input","fullWidth","autoFocus","currentTarget","ResetToDefaultPlayersButtonConnected","resetPlayers","equal","PlayersSelection","DiceInner","roll","selected","rest","flexWrap","borderRadius","transitionDuration","$delay","transform","boxShadow","DiceDot","filled","$wrapWidth","transitionProperty","DiceWrapper","flexGrow","dots","1","2","3","4","5","6","array9","Dice","i","DicesWrapper","DicesConnected","selectDice","dice","RollDiceButtonStyled","Fab","CasinoIconStyled","CasinoIcon","RollDiceButtonTip","textTransform","red","A100","fontWeight","delay","timer","rand","min","floor","RollDiceButtonConnected","generateRandomDices","randDices","setLoading","shuffleUp","d","Date","now","setTimeout","onMouseUp","onMouseDown","clearTimeout","onMouseLeave","ResetDicesButtonConnected","DicesActionsWrapper","DicesActions","useTheme","Paragraph","paragraph","TableCellNoWrap","TableCell","Rules","Table","TableBody","TableRow","StartGameButtonWrapper","TableCellStyled","heading","noPadding","centered","active","activeColor","textAlign","position","borderLeft","borderTopRightRadius","borderTopLeftRadius","resultsMap","maxPoints","checkMatch","combinationType","a","sequence","values","sort","seq","Set","seqString","matches","filter","count","split","counts","x","number","successResult","seqCopy","shift","pop","b","sorted","iU","undefined","stretch","right","left","align","vertical","horizontal","Empty","content","Matched","Bonus","alt","fontStyle","inArray","arr","defineWorkEnding","n","calculated","calc","CombinationConnected","activePlayerId","existingCombination","saveCombinationThunk","saveCombination","isMoveAvailable","_isBonus","matched","matching","strike","save","strikeOut","renderPoints","isNegative","sign","renderBonus","AsDiv","MaterialTable","TableHead","MaterialTableHead","MaterialTableBody","TableFooter","MaterialTableFooter","borderTop","borderBottom","lineHeight","MaterialTableRow","makePlayersSelector","createSelector","makePlayerMoveSelector","TableHeader","playersSelector","useSelector","playerMoveSelector","CombinationWrapper","makeGetTotalsSelector","totals","calcTotals","getTotalsSelector","combinationsSelector","tableSizeSelector","isMoveAvailableSelector","noMoreShots","matchesCount","noMoves","isInPlayerPoints","CombinationsContainer","Tooltip","placement","enterDelay","border","root","DialogStyled","DialogTitleStyled","shape","text","hint","DialogActionsStyled","DialogContentColumn","flex","DialogContentNameRow","h6","typography","DialogContentTotalRow","h2","EndOfGameStats","GoHomeButton","useDispatch","DialogTipStyled","subtitle2","borderBottomLeftRadius","borderBottomRightRadius","EndOfGameConnected","AppConnected","App","setTheme","myTheme","createMuiTheme","overrides","MuiAppBar","colorPrimary","Provider","newPaletteType","document","body","ThemeProvider","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e76b0bfc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\nexport enum GamePhases {\n  PRE_GAME = 'preGame',\n  PLAYERS_SELECTION = 'playersSelection',\n  IN_PLAY = 'inPlay',\n}\n\nexport interface GamePhaseState {\n  gamePhase: GamePhases\n}\n\nexport const gamePhaseDefaultState: GamePhaseState = {\n  gamePhase: GamePhases.PRE_GAME,\n}\n\nenum Constants {\n  CHANGE_GAME_PHASE = 'CHANGE_GAME_PHASE',\n}\n\ninterface Entry {\n  gamePhase: GamePhases\n}\n\ntype GamePhaseActionReturn = ActionWithEntry<Constants, Entry>\n\nexport type ChangeGamePhase = (gamePhase: Entry['gamePhase']) => GamePhaseActionReturn\n\nexport const changeGamePhase: ChangeGamePhase = (gamePhase) => ({\n  type: Constants.CHANGE_GAME_PHASE,\n  entry: {\n    gamePhase,\n  },\n})\n\nexport const gamePhase: Reducer<GamePhases, GamePhaseActionReturn> = (state = gamePhaseDefaultState.gamePhase, { type, entry }) => {\n  switch (type) {\n    case Constants.CHANGE_GAME_PHASE: {\n      return entry.gamePhase\n    }\n    default:\n      return state\n  }\n}\n","import { makeId } from '../../helpers/makeId'\nimport { ActionWithEntry } from '../../helpers/types'\nimport { Action, Reducer } from 'redux'\nimport update from 'immutability-helper'\n\nexport interface Player {\n  id: string\n  name?: string\n}\n\nexport interface PlayersState {\n  players: Player[]\n}\n\nexport type PlayersTotals = {\n  [playerId: string]: number\n}\n\nexport const playersDefaultState: Player[] = [\n  {\n    id: '1d777e55-8009-45e7-81b6-2651ad80399c',\n    name: 'Давид',\n  },\n  {\n    id: '7e4f7e04-6611-43b0-b847-60256f527519',\n    name: 'Варечка',\n  },\n]\n\nenum Constants {\n  ADD_PLAYER = 'ADD_PLAYER',\n  REMOVE_PLAYER = 'REMOVE_PLAYER',\n  RESET_PLAYERS = 'RESET_PLAYERS',\n}\n\ntype PlayersActionReturn = ActionWithEntry<Constants, Player>\n\nexport type AddPlayer = (name: Player['name']) => PlayersActionReturn\n\nexport const addPlayer: AddPlayer = (name) => ({\n  type: Constants.ADD_PLAYER,\n  entry: {\n    id: makeId(),\n    name,\n  },\n})\n\nexport type RemovePlayer = (id: Player['id']) => PlayersActionReturn\n\nexport const removePlayer: RemovePlayer = (id) => ({\n  type: Constants.REMOVE_PLAYER,\n  entry: {\n    id,\n  },\n})\n\nexport const resetPlayers = (): Action => ({\n  type: Constants.RESET_PLAYERS,\n})\n\nexport const players: Reducer<Player[], PlayersActionReturn> = (state = playersDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.ADD_PLAYER: {\n      return update(state, {\n        $push: [entry],\n      })\n    }\n    case Constants.REMOVE_PLAYER:\n      return update(state, {\n        $splice: [[state.findIndex(({ id }) => id === entry.id), 1]],\n      })\n    case Constants.RESET_PLAYERS:\n      return playersDefaultState\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\nexport type Dices = number[]\n\nexport interface DicesState {\n  dices: Dices\n}\n\nexport const DICES_COUNT = 5\n\nenum Constants {\n  GENERATE_RANDOM_DICES = 'GENERATE_RANDOM_DICES',\n  UPDATE_DICES = 'UPDATE_DICES',\n  RESET_DICES = 'RESET_DICES',\n}\n\ntype DicesActionReturn = ActionWithEntry<Constants, Dices>\n\nexport const dicesDefaultState: Dices = [-1, -1, -1, -1, -1]\n\ntype GenerateRandomDices = (dices: Dices) => DicesActionReturn\n\nexport const generateRandomDices: GenerateRandomDices = (dices) => ({\n  type: Constants.GENERATE_RANDOM_DICES,\n  entry: dices,\n})\n\ntype ResetDices = () => DicesActionReturn\n\nexport const resetDices: ResetDices = () => ({\n  type: Constants.RESET_DICES,\n  entry: [],\n})\n\nexport const dices: Reducer<Dices, DicesActionReturn> = (state = dicesDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.GENERATE_RANDOM_DICES:\n    case Constants.UPDATE_DICES:\n      // TODO: find out WTF ?? why just \"return entry\" is not working\n      return [...entry]\n    case Constants.RESET_DICES:\n      return [...dicesDefaultState]\n    default:\n      return state\n  }\n}\n","import { Dices } from './dices'\nimport { ActionWithEntry } from '../../helpers/types'\nimport { Action, Reducer } from 'redux'\nimport update from 'immutability-helper'\n\nexport interface DicesSelectedState {\n  dicesSelected: Dices\n}\n\nenum Constants {\n  SELECT_DICE = 'SELECT_DICE',\n  UNSELECT_ALL_DICES = 'UNSELECT_ALL_DICES',\n}\n\ntype DicesSelectedActionReturn = ActionWithEntry<Constants, Dices>\n\nexport const dicesSelectedDefaultState: Dices = []\n\nexport type SelectDice = (diceIndex: number) => DicesSelectedActionReturn\n\nexport const selectDice: SelectDice = (diceIndex) => ({\n  type: Constants.SELECT_DICE,\n  entry: [diceIndex],\n})\n\nexport type UnselectAllDices = () => Action\n\nexport const unselectAllDices: UnselectAllDices = () => ({\n  type: Constants.UNSELECT_ALL_DICES,\n})\n\nexport const dicesSelected: Reducer<Dices, DicesSelectedActionReturn> = (state = dicesSelectedDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.SELECT_DICE: {\n      const diceIndex = entry[0]\n      const index = state.indexOf(diceIndex)\n      if (index !== -1) {\n        return update(state, { $splice: [[index, 1]] })\n      }\n      return state.length === 4 ? state : update(state, { $push: [diceIndex] })\n    }\n    case Constants.UNSELECT_ALL_DICES:\n      return [...dicesSelectedDefaultState]\n    default:\n      return state\n  }\n}\n","import { ActionWithEntry } from '../../helpers/types'\nimport { Reducer } from 'redux'\n\ntype Loading = boolean\n\nexport interface LoadingState {\n  loading: Loading\n}\n\nenum Constants {\n  SET_LOADING = 'SET_LOADING',\n}\n\ntype LoadingActionReturn = ActionWithEntry<Constants, Loading>\n\nexport const loadingDefaultState: Loading = false\n\nexport type SetLoading = (flag: Loading) => LoadingActionReturn\n\nexport const setLoading: SetLoading = (flag) => ({\n  type: Constants.SET_LOADING,\n  entry: flag\n})\n\nexport const loading: Reducer<Loading, LoadingActionReturn> = (state = loadingDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.SET_LOADING: {\n      return entry\n    }\n    default:\n      return state\n  }\n}\n","import { State } from '../redux/defaultState'\n\n/**\n * Get item from localStorage\n */\nexport const getItem = (key: keyof State | 'theme', parse = true) => {\n  const item = localStorage.getItem(key)\n\n  return parse ? JSON.parse(item!) : item\n}\n","import { ActionWithEntry, ThunkAction } from '../../helpers/types'\nimport { Reducer } from 'redux'\n\nexport type DiceSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n\nconst increaseDecreaseStep = 1\nexport const minDiceSize: DiceSize = 1\nexport const maxDiceSize: DiceSize = 9\n\nexport interface DiceSizeState {\n  diceSize: DiceSize\n}\n\nenum Constants {\n  INCREASE_DICE_SIZE = 'INCREASE_DICE_SIZE',\n  DECREASE_DICE_SIZE = 'DECREASE_DICE_SIZE'\n}\n\ntype DiceSizeReturn = ActionWithEntry<Constants, DiceSize>\n\nexport const diceSizeDefaultState: DiceSize = 5\n\nexport type DiceSizeThunk = ThunkAction\n\nexport const increaseDiceSize: DiceSizeThunk = () => (dispatch, getState) => {\n  const { diceSize } = getState()\n  if (diceSize < maxDiceSize) {\n    dispatch<DiceSizeReturn>({\n      type: Constants.INCREASE_DICE_SIZE,\n      entry: (diceSize + increaseDecreaseStep as DiceSize),\n    })\n  }\n}\n\nexport const decreaseDiceSize: DiceSizeThunk = () => (dispatch, getState) => {\n  const { diceSize } = getState()\n  if (diceSize > minDiceSize) {\n    dispatch<DiceSizeReturn>({\n      type: Constants.DECREASE_DICE_SIZE,\n      entry: (diceSize - increaseDecreaseStep as DiceSize),\n    })\n  }\n}\n\nexport const diceSize: Reducer<DiceSize, DiceSizeReturn> = (state = diceSizeDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.INCREASE_DICE_SIZE:\n    case Constants.DECREASE_DICE_SIZE:\n      return entry\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\nimport { DICES_COUNT } from './dices'\n\nexport enum Combination {\n  ONE = 1,\n  TWO,\n  THREE,\n  FOUR,\n  FIVE,\n  SIX,\n  BONUS = 'bonus',\n  SMALL_STRAIGHT = 'smallStraight',\n  BIG_STRAIGHT = 'bigStraight',\n  TWO_PAIR = 'twoPair',\n  FULL_HOUSE = 'fullHouse',\n  THE_YACHT = 'theYacht',\n  CHANCE = 'chance',\n  EQUAL_3 = 'equal_3',\n  EQUAL_4 = 'equal_4',\n}\n\nexport type EMPTY_CELL = '—'\n\nexport const EMPTY_CELL: EMPTY_CELL = '—'\n\nexport const BONUS_CONDITION = 63\n\nexport const BONUS_POINTS = 35\n\nexport const isBonus = (combination: Combination) => combination === Combination.BONUS\n\nexport interface CombinationInfo {\n  name: string\n  title: string\n  combination: Combination\n  max: number\n}\n\nexport interface CombinationsState {\n  combinations: CombinationInfo[]\n}\n\ntype CombinationsReturn = ActionWithEntry<{}, CombinationInfo[]>\n\nexport const combinationsDefaultState: CombinationInfo[] = [\n  {\n    name: 'Единицы',\n    title: 'Сумма всех костей, на которых выпали 1',\n    combination: Combination.ONE,\n    max: Combination.ONE * DICES_COUNT,\n  },\n  {\n    name: 'Двойки',\n    title: 'Сумма всех костей, на которых выпали 2',\n    combination: Combination.TWO,\n    max: Combination.TWO * DICES_COUNT,\n  },\n  {\n    name: 'Тройки',\n    title: 'Сумма всех костей, на которых выпали 3',\n    combination: Combination.THREE,\n    max: Combination.THREE * DICES_COUNT,\n  },\n  {\n    name: 'Четверки',\n    title: 'Сумма всех костей, на которых выпали 4',\n    combination: Combination.FOUR,\n    max: Combination.FOUR * DICES_COUNT,\n  },\n  {\n    name: 'Пятерки',\n    title: 'Сумма всех костей, на которых выпали 5',\n    combination: Combination.FIVE,\n    max: Combination.FIVE * DICES_COUNT,\n  },\n  {\n    name: 'Шестёрки',\n    title: 'Сумма всех костей, на которых выпали 6',\n    combination: Combination.SIX,\n    max: Combination.SIX * DICES_COUNT,\n  },\n  {\n    name: 'Бонус',\n    title: 'Если игрок набирает по крайней мере 63 очков (по три кости с каждым числом) в верхней секции, он получает бонус в виде 35 очков',\n    combination: Combination.BONUS,\n    max: BONUS_POINTS,\n  },\n  {\n    name: 'Сэт', // [sum]\n    title: 'Три Одинаковых: Три кости, на которых выпали одинаковые значения. В очки записывается сумма этих трёх костей',\n    combination: Combination.EQUAL_3,\n    max: Combination.SIX * 3,\n  },\n  {\n    name: 'Карэ', // [sum]\n    title: 'Четыре Одинаковых: Четыре кости, на которых выпали одинаковые значения. В очки записывается сумма этих четырёх костей',\n    combination: Combination.EQUAL_4,\n    max: Combination.SIX * 4,\n  },\n  {\n    name: 'Младший стрит', // [25]\n    title: 'Любые четыре последовательных числа (1, 2, 3, 4 или 2, 3, 4, 5 или 3, 4, 5, 6). Записывается 25 очков',\n    combination: Combination.SMALL_STRAIGHT,\n    max: 25,\n  },\n  {\n    name: 'Старший стрит', // [30]\n    title: 'Пять последовательных чисел (1, 2, 3, 4, 5 или 2, 3, 4, 5, 6). Записывается 30 очков',\n    combination: Combination.BIG_STRAIGHT,\n    max: 30,\n  },\n  {\n    name: 'Две пары', // [25]\n    title: 'Две пары любых одинаковых костей. Записывается 25 очков',\n    combination: Combination.TWO_PAIR,\n    max: 25,\n  },\n  {\n    name: 'Фул Хаус', // [30]\n    title: 'Пара и тройка любых одинаковых костей. Записывается 30 очков',\n    combination: Combination.FULL_HOUSE,\n    max: 30,\n  },\n  {\n    name: 'Яхта', // [50]\n    title: 'Пять костей, на которых выпали одинаковые значения. Записывается 50 очков',\n    combination: Combination.THE_YACHT,\n    max: 50,\n  },\n  {\n    name: 'Шанс', // [sum]\n    title: 'Записывается сумма всех выпавших костей',\n    combination: Combination.CHANCE,\n    max: Combination.SIX * 5,\n  },\n]\n\nexport const MAX_POSSIBLE_POINTS = combinationsDefaultState.reduce(\n  (prev, curr) => prev + curr.max,\n  0,\n)\n\nexport const combinations: Reducer<CombinationInfo[], CombinationsReturn> = (\n  state = combinationsDefaultState,\n) => state\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\nenum Constants {\n  NEXT_TURN = 'NEXT_TURN',\n  INCREASE_SHOT = 'INCREASE_SHOT',\n  RESET_PLAYER_MOVE = 'RESET_PLAYER_MOVE',\n}\n\ntype Move = [string, number]\n\nexport interface PlayerMoveState {\n  playerMove: Move\n}\n\nexport const MAX_SHOT_COUNT = 3\n\ntype PlayerMoveActionReturn = ActionWithEntry<Constants, Move>\n\nexport const playerMoveDefaultState: PlayerMoveState['playerMove'] = ['', 0]\n\ntype NextTurn = (move: Move) => PlayerMoveActionReturn\n\nexport const nextTurn: NextTurn = (move) => ({\n  type: Constants.NEXT_TURN,\n  entry: move,\n})\n\ntype IncreaseShot = () => PlayerMoveActionReturn\n\nexport const increaseShot: IncreaseShot = () => ({\n  type: Constants.INCREASE_SHOT,\n  entry: playerMoveDefaultState,\n})\n\ntype ResetPlayerMove = () => PlayerMoveActionReturn\n\nexport const resetPlayerMove: ResetPlayerMove = () => ({\n  type: Constants.RESET_PLAYER_MOVE,\n  entry: playerMoveDefaultState,\n})\n\nexport const playerMove: Reducer<Move, PlayerMoveActionReturn> = (state = playerMoveDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.INCREASE_SHOT: {\n      const { 0: playerId, 1: shot } = state\n      return [playerId, shot + 1]\n    }\n    case Constants.NEXT_TURN:\n      return entry\n    case Constants.RESET_PLAYER_MOVE:\n      return entry\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry, ThunkAction } from '../../helpers/types'\n\nenum Constants {\n  TOGGLE_TABLE_SIZE = 'TOGGLE_TABLE_SIZE'\n}\n\nexport enum TableSizes {\n  MEDIUM = 'medium',\n  SMALL = 'small',\n}\n\ntype TableSizeReturnType = ActionWithEntry<Constants, TableSizeState['tableSize']>\n\nexport interface TableSizeState {\n  tableSize: TableSizes\n}\n\nexport const tableSizeDefaultState: TableSizeState['tableSize'] = TableSizes.MEDIUM\n\nexport type ToggleSize = ThunkAction\n\nexport const toggleSize: ToggleSize = () => (dispatch, getState) => {\n  const { tableSize } = getState()\n  dispatch<TableSizeReturnType>({\n    type: Constants.TOGGLE_TABLE_SIZE,\n    entry: (tableSize === TableSizes.SMALL) ? TableSizes.MEDIUM : TableSizes.SMALL,\n  })\n}\n\nexport const tableSize: Reducer<TableSizeState['tableSize'], TableSizeReturnType> = (state = tableSizeDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.TOGGLE_TABLE_SIZE: {\n      return entry\n    }\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\ntype DrawerOpened = boolean\n\nexport interface DrawerOpenedState {\n  drawerOpened: DrawerOpened\n}\n\nenum Constants {\n  TOGGLE_DRAWER_OPENED = 'TOGGLE_DRAWER_OPENED',\n}\n\ntype DrawerOpenedActionReturn = ActionWithEntry<Constants, DrawerOpened>\n\nexport const drawerOpenedDefaultState: DrawerOpened = false\n\nexport type ToggleDrawerOpened = (flag: boolean) => DrawerOpenedActionReturn\n\nexport const toggleDrawerOpened: ToggleDrawerOpened = (flag) => ({\n  type: Constants.TOGGLE_DRAWER_OPENED,\n  entry: flag,\n})\n\nexport const drawerOpened: Reducer<DrawerOpened, DrawerOpenedActionReturn> = (state = drawerOpenedDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.TOGGLE_DRAWER_OPENED: {\n      return entry\n    }\n    default:\n      return state\n  }\n}\n","import { Action, Reducer } from 'redux'\nimport { Combination } from './combinations'\nimport { ActionWithEntry, Parameters } from '../../helpers/types'\nimport { Player } from './players'\nimport { CheckMatch } from '../../helpers/checkMatch'\nimport update from 'immutability-helper'\nimport { calcBonus } from '../../helpers/calcBonus'\n\nexport type Points = {\n  [key in Combination]?: number\n}\n\nexport interface PlayerPoints {\n  [playerId: string]: Points\n}\n\nexport interface PlayerPointsState {\n  playerPoints: PlayerPoints\n}\n\nenum Constants {\n  SAVE_COMBINATION = 'SAVE_COMBINATION',\n  RESET_PLAYER_POINTS = 'RESET_PLAYER_POINTS',\n}\n\nexport const playerPointsDefaultState: PlayerPoints = {}\n\nexport type SaveCombinationParams = Parameters<SaveCombination>\n\nexport type SaveCombinationReturn = ReturnType<SaveCombination>\n\ntype SaveCombination = (\n  playerId: Player['id'],\n  combination: Combination,\n  points: ReturnType<CheckMatch>['points'],\n) => ActionWithEntry<Constants, {\n  playerId: SaveCombinationParams[0],\n  combination: SaveCombinationParams[1],\n  points: SaveCombinationParams[2],\n}>\n\nexport const saveCombination: SaveCombination = (playerId, combination, points) => ({\n  type: Constants.SAVE_COMBINATION,\n  entry: {\n    points,\n    combination,\n    playerId,\n  },\n})\n\ntype ResetPlayerPoints = () => Action\n\nexport const resetPlayerPoints: ResetPlayerPoints = () => ({\n  type: Constants.RESET_PLAYER_POINTS,\n})\n\nexport const playerPoints: Reducer<PlayerPoints, SaveCombinationReturn> = (\n  state = playerPointsDefaultState,\n  { type, entry },\n) => {\n  switch (type) {\n    case Constants.SAVE_COMBINATION:\n      const { playerId, combination, points } = entry\n\n      state = update(state, state[playerId] ? {\n        [playerId]: {\n          $merge: {\n            [combination]: points,\n          },\n        },\n      } : {\n        $merge: {\n          [playerId]: {\n            [combination]: points,\n          },\n        },\n      })\n\n      return update(state, {\n        [playerId]: {\n          [Combination.BONUS]: {\n            $set: calcBonus(state, playerId),\n          },\n        },\n      })\n    case Constants.RESET_PLAYER_POINTS:\n      return update(playerPointsDefaultState, {})\n    default:\n      return state\n  }\n}\n","import { PlayerPoints } from '../redux/reducers/playerPoints'\nimport { BONUS_CONDITION, BONUS_POINTS } from '../redux/reducers/combinations'\n\nexport const calcBonus = (state: PlayerPoints, playerId: keyof PlayerPoints): number => {\n  const bonus = Object.keys(state[playerId]).reduce((prev, curr) => (\n    // @ts-ignore FIXME typings!!!\n    isNaN(parseInt(curr, 10)) ? prev : prev + state[playerId][curr]\n  ), 0)\n\n  return bonus >= BONUS_CONDITION ? BONUS_POINTS : (BONUS_CONDITION - bonus) * -1\n}\n","import { gamePhaseDefaultState } from './reducers/gamePhase'\nimport { playersDefaultState } from './reducers/players'\nimport { dicesDefaultState } from './reducers/dices'\nimport { dicesSelectedDefaultState } from './reducers/dicesSelected'\nimport { getItem } from '../helpers/getItem'\nimport { loadingDefaultState } from './reducers/loading'\nimport { diceSizeDefaultState } from './reducers/diceSize'\nimport { combinationsDefaultState } from './reducers/combinations'\nimport { playerMoveDefaultState } from './reducers/playerMove'\nimport { tableSizeDefaultState } from './reducers/tableSize'\nimport { drawerOpenedDefaultState } from './reducers/drawerOpened'\nimport { playerPointsDefaultState } from './reducers/playerPoints'\n\nexport let gamePhase = gamePhaseDefaultState.gamePhase\nexport let players = playersDefaultState\nexport let dices = dicesDefaultState\nexport let dicesSelected = dicesSelectedDefaultState\nexport let loading = loadingDefaultState\nexport let diceSize = diceSizeDefaultState\nexport let combinations = combinationsDefaultState\nexport let playerMove = playerMoveDefaultState\nexport let tableSize = tableSizeDefaultState\nexport let drawerOpened = drawerOpenedDefaultState\nexport let playerPoints = playerPointsDefaultState\n\ntry {\n  gamePhase = getItem('gamePhase', false) || gamePhase\n  players = getItem('players') || players\n  dices = getItem('dices') || dices\n  dicesSelected = getItem('dicesSelected') || dicesSelected\n  loading = getItem('loading') || loading\n  diceSize = getItem('diceSize') || diceSize\n  combinations = getItem('combinations') || combinations\n  playerMove = getItem('playerMove') || playerMove\n  tableSize = getItem('tableSize') || tableSize\n  drawerOpened = getItem('drawerOpened') || drawerOpened\n  playerPoints = getItem('playerPoints') || playerPoints\n} catch (e) {\n  console.error(e)\n}\n","import { GamePhaseState } from './reducers/gamePhase'\nimport { PlayersState } from './reducers/players'\nimport { DicesState } from './reducers/dices'\nimport { DicesSelectedState } from './reducers/dicesSelected'\nimport {\n  gamePhase,\n  players,\n  dices,\n  dicesSelected,\n  loading,\n  diceSize,\n  combinations,\n  playerMove,\n  tableSize,\n  drawerOpened,\n  playerPoints,\n} from './getStateFromStorage'\nimport { LoadingState } from './reducers/loading'\nimport { DiceSizeState } from './reducers/diceSize'\nimport { CombinationsState } from './reducers/combinations'\nimport { PlayerMoveState } from './reducers/playerMove'\nimport { TableSizeState } from './reducers/tableSize'\nimport { DrawerOpenedState } from './reducers/drawerOpened'\nimport { PlayerPointsState } from './reducers/playerPoints'\n\nexport interface State\n  extends GamePhaseState, PlayersState, DicesState, DicesSelectedState,\n    LoadingState, DiceSizeState, CombinationsState,\n    PlayerMoveState, TableSizeState, DrawerOpenedState, PlayerPointsState {\n}\n\nexport const defaultState: State = {\n  gamePhase,\n  players,\n  dices,\n  dicesSelected,\n  loading,\n  diceSize,\n  combinations,\n  playerMove,\n  tableSize,\n  drawerOpened,\n  playerPoints,\n}\n","export const toString = (obj: any): string => (\n  JSON.stringify(obj.toJSON ? obj.toJSON() : obj)\n)\n","import { State } from '../redux/defaultState'\n\nexport const setItem = (key: keyof State | 'theme', value: string) => (\n  localStorage.setItem(key, value)\n)\n","import thunk from 'redux-thunk'\nimport { applyMiddleware, combineReducers, compose, createStore, Reducer, Store } from 'redux'\nimport { defaultState, State } from './defaultState'\nimport { gamePhase } from './reducers/gamePhase'\nimport { subscriptions } from './subscriptions'\nimport { players } from './reducers/players'\nimport { dices } from './reducers/dices'\nimport { dicesSelected } from './reducers/dicesSelected'\nimport { loading } from './reducers/loading'\nimport { diceSize } from './reducers/diceSize'\nimport { combinations } from './reducers/combinations'\nimport { playerMove } from './reducers/playerMove'\nimport { tableSize } from './reducers/tableSize'\nimport { drawerOpened } from './reducers/drawerOpened'\nimport { playerPoints } from './reducers/playerPoints'\n\nconst middleware = [thunk]\n\nconst reducers: Reducer<State> = combineReducers<State>({\n  players,\n  gamePhase,\n  dices,\n  dicesSelected,\n  loading,\n  diceSize,\n  combinations,\n  playerMove,\n  tableSize,\n  drawerOpened,\n  playerPoints,\n})\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middleware),\n)\n\nexport const store: Store<State> = createStore(reducers, defaultState, enhancer)\n\nsubscriptions(store)\n","import { Store, Unsubscribe } from 'redux'\nimport { State } from './defaultState'\nimport { toString } from '../helpers/toString'\nimport { setItem } from '../helpers/setItem'\n\ntype Subscriptions = (store: Store<State>) => Unsubscribe\n\nexport const subscriptions: Subscriptions = ({ subscribe, getState }) => subscribe(() => {\n  const {\n    gamePhase, players, dices, dicesSelected, diceSize, playerMove, tableSize, drawerOpened, playerPoints,\n  } = getState()\n\n  setItem('gamePhase', gamePhase)\n  setItem('players', toString(players))\n  setItem('dices', toString(dices))\n  setItem('dicesSelected', toString(dicesSelected))\n  setItem('diceSize', toString(diceSize))\n  setItem('playerMove', toString(playerMove))\n  setItem('tableSize', toString(tableSize))\n  setItem('drawerOpened', toString(drawerOpened))\n  setItem('playerPoints', toString(playerPoints))\n})\n","import React, { createContext, FC, useState } from 'react'\nimport { PaletteType, Theme } from '@material-ui/core'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport ThemeProvider from '@material-ui/styles/ThemeProvider'\nimport { getItem } from './getItem'\nimport { setItem } from './setItem'\nimport useTheme from '@material-ui/core/styles/useTheme'\n\nexport interface ThemeProviderHOCProps {\n  toggleTheme?(): void\n\n  theme?: PaletteType\n}\n\n// TODO: get this color from theme\nexport const mainDarkBGColor = '#333'\n\nexport const ThemeContext = createContext<ThemeProviderHOCProps>({})\n\nexport const themeProviderHOC = (Component: FC) => () => {\n  const [theme, setTheme] = useState(getItem('theme', false) || 'dark')\n\n  const toggleTheme = () => {\n    const newPaletteType: PaletteType = theme === 'light' ? 'dark' : 'light'\n    setTheme(newPaletteType)\n    setItem('theme', newPaletteType)\n\n    document.body.style.background = newPaletteType === 'dark' ? '#303030' : '#fff'\n  }\n\n  const { palette: { common: { white } } }: Theme = useTheme()\n\n  const myTheme = createMuiTheme({\n    palette: {\n      type: theme,\n    },\n    overrides: {\n      MuiAppBar: {\n        colorPrimary: {\n          backgroundColor: theme === 'dark' ? mainDarkBGColor : white,\n        },\n      },\n    },\n  })\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <ThemeProvider theme={myTheme}>\n        <Component />\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n","import cx from 'classnames'\nimport React, { FC } from 'react'\nimport Drawer, { DrawerProps } from '@material-ui/core/Drawer'\nimport Divider from '@material-ui/core/Divider'\nimport { Theme } from '@material-ui/core'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport createStyles from '@material-ui/core/styles/createStyles'\nimport List from '@material-ui/core/List'\n\nexport const DRAWER_WIDTH = 32 // * theme.spacing\n\nconst useStyles = makeStyles(({\n  spacing,\n  mixins: { toolbar },\n  transitions: { create, easing, duration },\n}: Theme) => createStyles({\n  drawerHeader: {\n    ...toolbar,\n  },\n  drawer: {\n    width: spacing(DRAWER_WIDTH),\n  },\n  paper: {\n    overflowX: 'hidden',\n  },\n  paperClose: {\n    borderRight: 0,\n  },\n  drawerOpen: {\n    width: spacing(DRAWER_WIDTH),\n    transition: create('width', {\n      easing: easing.sharp,\n      duration: duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    width: 0,\n    overflowX: 'hidden',\n    transition: create('width', {\n      easing: easing.sharp,\n      duration: duration.leavingScreen,\n    }),\n  },\n}))\n\ninterface DrawerStyledProps extends Pick<DrawerProps, 'open' | 'onClose'> {\n}\n\nexport const DrawerStyled: FC<DrawerStyledProps> = ({ open, onClose, children }) => {\n  const { drawer, paper, paperClose, drawerOpen, drawerClose, drawerHeader } = useStyles()\n\n  return (\n    <Drawer\n      className={cx(drawer, {\n        [drawerOpen]: open,\n        [drawerClose]: !open,\n      })}\n      classes={{\n        paper: cx(paper, {\n          [drawerOpen]: open,\n          [drawerClose]: !open,\n          [paperClose]: !open,\n        }),\n      }}\n      variant=\"permanent\"\n      onClose={onClose}\n      open={open}\n    >\n      <div className={drawerHeader} />\n      <Divider />\n      <List>\n        {children}\n      </List>\n    </Drawer>\n  )\n}\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport { replaceKeysInObject } from '../../helpers/replaceKeysInObject'\nimport { DrawerOpenedConnectorProps } from './MainLayoutConnected'\nimport { DRAWER_WIDTH } from '../Drawer/DrawerStyled'\n\nconst footerHeight = 10\n\nexport const Wrapper = styled(\n  ({ drawer, ...props }: DrawerOpenedConnectorProps) => <div {...props} />,\n)(({\n  theme: {\n    spacing,\n    transitions: { create, easing, duration },\n  },\n  drawer,\n}: Themed & DrawerOpenedConnectorProps) => ({\n  minHeight: '100%',\n\n  // Equal to height of footer\n  // But also accounting for potential margin-bottom of last child\n  marginBottom: spacing(footerHeight) * -1,\n\n  marginLeft: drawer ? spacing(DRAWER_WIDTH) : 0,\n  transition: create('margin-left', {\n    easing: easing.sharp,\n    duration: duration.enteringScreen,\n  }),\n}))\n\nexport const Push = styled('div')(({ theme: { spacing } }: Themed) => ({\n  height: spacing(footerHeight),\n}))\n\nexport const Footer = styled(\n  ({ drawer, ...props }: DrawerOpenedConnectorProps) => <footer {...props} />,\n)(({\n  theme: { spacing, transitions: { create, easing, duration } }, drawer,\n}: Themed & DrawerOpenedConnectorProps) => ({\n  display: 'flex',\n  alignItems: 'center',\n  height: spacing(footerHeight),\n  padding: `0 ${spacing(5)}px`,\n  marginLeft: drawer ? spacing(DRAWER_WIDTH) : 0,\n  transition: create('margin-left', {\n    easing: easing.sharp,\n    duration: duration.enteringScreen,\n  }),\n}))\n\nexport const Inner = styled('div')(({ theme: { spacing, mixins: { toolbar } } }: Themed) => ({\n  padding: `${spacing(2)}px ${spacing(5)}px`,\n  ...replaceKeysInObject(\n    toolbar,\n    'minHeight',\n    'paddingTop',\n    (value: number) => spacing(value / 6),\n  ),\n  maxWidth: spacing(130),\n}))\n","// @ts-ignore\nimport { getType } from './getType'\n\ntype ReplaceKeysInObject = (obj: any, what: any, withWhat: any, modifyValue?: any) => any\n\nexport const replaceKeysInObject: ReplaceKeysInObject = (obj, what, withWhat, modifyValue?) => {\n  const resObject = {}\n  Object.keys(obj).map((key) =>\n    // @ts-ignore\n    resObject[key === what ? withWhat : key] = getType(obj[key]) === 'Object'\n      ? replaceKeysInObject(obj[key], what, withWhat, modifyValue)\n      : modifyValue ? modifyValue(obj[key]) : obj[key],\n  )\n\n  return resObject\n}\n","type ReturnedTypes = 'Object' | 'Array' | 'String' | 'Number' | 'Null' | 'Boolean' | 'Undefined' | 'Function'\n\ntype GetType = (obj: any) => ReturnedTypes\n\nexport const getType: GetType = (obj) => (\n  // @ts-ignore FIXME typings!!!\n  ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1] as ReturnedTypes\n)\n","import { CSSProperties } from 'react'\nimport { CreateCSSProperties } from '@material-ui/core/styles/withStyles'\n\n// type Styled2 = <Component extends ElementType>(component: Component) => ComponentCreator<Component>\n// const styled2: Styled2 = (component) => {}\n// styled2('div')\n\n\ntype ConditionalCSS = (\n  params: Array<[boolean | undefined, CSSProperties | undefined | {}]\n    | CSSProperties\n    | {}>,\n) => CreateCSSProperties | {}\n\nexport const conditionalCSS: ConditionalCSS = (params) => {\n  let returnObject: CSSProperties | {} = {}\n\n  params.forEach((param) => {\n    if (Array.isArray(param)) {\n      const [condition, css] = param\n      if (condition) {\n        returnObject = { ...returnObject, ...css }\n      }\n    } else {\n      returnObject = { ...returnObject, ...param }\n    }\n  })\n\n  return returnObject\n}\n","import React, { FC } from 'react'\nimport styled from '@material-ui/styles/styled'\nimport Typography from '@material-ui/core/Typography'\nimport { mainDarkBGColor } from '../../helpers/themeProviderHOC'\nimport { Themed } from '../../helpers/types'\nimport { conditionalCSS } from '../../helpers/conditionalCSS'\n\nconst HeadingFC: FC = (props) => (\n  <Typography variant=\"h4\" component=\"h1\" {...props} />\n)\n\nexport const Heading = styled(HeadingFC)(({\n  theme: { palette: { type } },\n}: Themed) => conditionalCSS([\n  [type === 'light', {\n    color: mainDarkBGColor,\n  }],\n]))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport AppBar from '@material-ui/core/AppBar'\n\nexport const AppBarStyled = styled(AppBar)(({ theme }: Themed) => ({\n  zIndex: theme.zIndex.drawer + 1,\n}))\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const MenuButton = styled(\n  (props) => (\n    <IconButton edge=\"start\" color=\"inherit\" {...props}>\n      <MenuIcon fontSize=\"large\" />\n    </IconButton>\n  ),\n)(({ theme: { spacing, palette: { type, common: { black, white } } } }: Themed) => ({\n  marginRight: spacing(1),\n  color: type === 'dark' ? white : black,\n}))\n","import { connect } from 'react-redux'\n\nimport { MenuButton } from './MenuButton'\nimport { State } from '../../../redux/defaultState'\nimport { DrawerOpenedState, ToggleDrawerOpened, toggleDrawerOpened } from '../../../redux/reducers/drawerOpened'\n\ninterface MapStateToProps extends DrawerOpenedState {\n}\n\ninterface MapDispatchToProps {\n  toggleDrawerOpened: ToggleDrawerOpened\n}\n\nexport interface MenuButtonProps {\n  onClick(): void\n}\n\nexport const MenuButtonConnected = connect(\n  ({ drawerOpened }: State): MapStateToProps => ({\n    drawerOpened,\n  }),\n  { toggleDrawerOpened },\n  (\n    { drawerOpened }: MapStateToProps,\n    { toggleDrawerOpened }: MapDispatchToProps,\n    // stateProps: MapStateToProps,\n    // dispatchProps: MapDispatchToProps,\n    // ownProps: OwnProps,\n  ): MenuButtonProps => ({\n    onClick() {\n      toggleDrawerOpened(!drawerOpened)\n    },\n  }),\n)(MenuButton)\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { Heading } from './Heading'\nimport { AppBarStyled } from './AppBarStyled'\nimport { MenuButtonConnected } from './MenuButton/MenuButtonConnected'\n\nexport const TopMenu: FC = () => (\n  <AppBarStyled>\n    <Toolbar>\n      <MenuButtonConnected />\n      <Heading>\n        {i18n('Яхта')}\n      </Heading>\n    </Toolbar>\n  </AppBarStyled>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nexport const DialogContentStyled = styled(DialogContent)(({ theme }: Themed) => ({\n  minWidth: '30em',\n  padding: '2em 0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { Themed } from '../../../helpers/types'\nimport yellow from '@material-ui/core/colors/yellow'\n\nexport const WarningIconStyled = styled(WarningIcon)(({ theme: { spacing } }: Themed) => ({\n  marginRight: spacing(1),\n  color: yellow.A700,\n}))\n","import ListItem from '@material-ui/core/ListItem'\nimport styled from '@material-ui/styles/styled'\n\nexport const DrawerListItemStyled = styled(ListItem)({\n  whiteSpace: 'nowrap',\n})\n","import React, { FC } from 'react'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { DrawerListItemStyled } from './DrawerListItemStyled'\n\ninterface DrawerListItemProps {\n  icon: any\n  button?: boolean\n\n  onClick?(): void\n}\n\nexport const DrawerListItem: FC<DrawerListItemProps> = ({ icon, onClick, children, button = true }) => (\n  // @ts-ignore TS2769 TODO wtf??\n  <DrawerListItemStyled button={button} onClick={onClick}>\n    <ListItemIcon>\n      {icon}\n    </ListItemIcon>\n    <ListItemText primary={children} />\n  </DrawerListItemStyled>\n)\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport { Divider } from '@material-ui/core'\nimport { conditionalCSS } from '../../helpers/conditionalCSS'\n\ninterface DrawerListDividerProps {\n  top?: boolean\n  bottom?: boolean\n}\n\nexport const DrawerListDivider = styled(\n  ({ top, bottom, ...restProps }: DrawerListDividerProps) => (\n    <Divider {...restProps} />\n  ),\n)(({\n  theme: { spacing }, top = true, bottom = true,\n}: Themed & DrawerListDividerProps) => conditionalCSS([\n  [top, {\n    marginTop: spacing(1),\n  }],\n  [bottom, {\n    marginBottom: spacing(1),\n  }],\n]))\n","import { ThunkAction } from '../../helpers/types'\nimport { resetDices } from '../reducers/dices'\nimport { unselectAllDices } from '../reducers/dicesSelected'\nimport { changeGamePhase, GamePhases } from '../reducers/gamePhase'\nimport { resetPlayerMove } from '../reducers/playerMove'\nimport { resetPlayerPoints } from '../reducers/playerPoints'\n\nexport const restartGameThunk: ThunkAction = () => (dispatch) => {\n  dispatch(resetPlayerMove())\n  dispatch(resetPlayerPoints())\n  dispatch(resetDices())\n  dispatch(unselectAllDices())\n  dispatch(changeGamePhase(GamePhases.PRE_GAME))\n}\n","import React, { FC } from 'react'\n\nexport interface VisibilityHOCProps {\n  hidden: boolean\n}\n\nexport const visibilityHOC = (Component: any /*<--TODO*/): FC<VisibilityHOCProps> => ({ hidden, ...restProps }) => {\n\n  if (hidden) {\n    return null\n  }\n\n  return (\n    <Component {...restProps} />\n  )\n}\n","import { connect } from 'react-redux'\nimport { RestartGameButton } from './RestartGameButton'\nimport { restartGameThunk } from '../../../redux/actions/restartGameThunk'\nimport { ThunkAction } from '../../../helpers/types'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport { GamePhases, GamePhaseState } from '../../../redux/reducers/gamePhase'\n\ninterface MapStateToProps extends GamePhaseState {\n}\n\ninterface MapDispatchToProps {\n  restartGameAction: ThunkAction\n}\n\nexport interface RestartGameProps extends MapDispatchToProps {\n}\n\nexport const RestartGameButtonConnected = compose(\n  connect<MapStateToProps, MapDispatchToProps, {}, RestartGameProps & VisibilityHOCProps, State>(\n    ({ gamePhase }) => ({\n      gamePhase,\n    }),\n    { restartGameAction: restartGameThunk },\n    ({ gamePhase }, { restartGameAction }) => ({\n      restartGameAction,\n      hidden: gamePhase !== GamePhases.IN_PLAY,\n    }),\n  ),\n  visibilityHOC,\n)(RestartGameButton)\n","import React, { FC, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport { i18n } from '../../../helpers/i18n'\nimport { RestartGameProps } from './RestartGameButtonConnected'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport { DialogContentStyled } from './DialogContentStyled'\nimport { WarningIconStyled } from './WarningIconStyled'\nimport { DrawerListItem } from '../DrawerListItem'\nimport { DrawerListDivider } from '../DrawerListDivider'\n\nexport const RestartGameButton: FC<RestartGameProps> = ({ restartGameAction }) => {\n  const [open, setOpen] = useState(false)\n  const openModal = () => setOpen(true)\n  const closeModal = () => setOpen(false)\n  const restartGame = () => {\n    closeModal()\n    restartGameAction()\n  }\n\n  return (\n    <>\n      <DrawerListDivider />\n      <DrawerListItem icon={<ReplayIcon style={{ marginLeft: '.5em' }} />} onClick={openModal}>\n        {i18n('Начать заново')}\n      </DrawerListItem>\n      {open && (\n        <Dialog open onClose={closeModal}>\n          <DialogTitle>\n            {i18n('Начать заново')}?\n          </DialogTitle>\n          <DialogContentStyled>\n            <WarningIconStyled />\n            {i18n('Текущая игра будет утеряна.')}\n          </DialogContentStyled>\n          <DialogActions>\n            <Button onClick={closeModal}>\n              {i18n('Отмена')}\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={restartGame}>\n              {i18n('Начать заново')}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  )\n}\n","import { connect } from 'react-redux'\nimport { compose } from 'redux'\n\nimport { ChangeTableSizeButton } from './ChangeTableSizeButton'\nimport { State } from '../../../redux/defaultState'\nimport { TableSizeState, toggleSize, ToggleSize } from '../../../redux/reducers/tableSize'\nimport { GamePhases, GamePhaseState } from '../../../redux/reducers/gamePhase'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\n\ninterface MapStateToProps extends TableSizeState, GamePhaseState {\n}\n\ninterface MapDispatchToProps {\n  toggleSize: ToggleSize\n}\n\nexport interface ChangeTableSizeButtonProps extends TableSizeState {\n  onChange: ToggleSize\n}\n\nexport const ChangeTableSizeButtonConnected = compose(\n  connect(\n    ({ tableSize, gamePhase }: State): MapStateToProps => ({\n      tableSize,\n      gamePhase,\n    }),\n    { toggleSize },\n    (\n      { tableSize, gamePhase }: MapStateToProps,\n      { toggleSize: onChange }: MapDispatchToProps,\n    ): ChangeTableSizeButtonProps & VisibilityHOCProps => ({\n      tableSize,\n      onChange,\n\n      hidden: gamePhase !== GamePhases.IN_PLAY,\n    }),\n  ),\n  visibilityHOC,\n)(ChangeTableSizeButton)\n","import React, { FC } from 'react'\nimport { i18n } from '../../../helpers/i18n'\nimport { ChangeTableSizeButtonProps } from './ChangeTableSizeButtonConnected'\nimport { Checkbox } from '@material-ui/core'\nimport { DrawerListItem } from '../DrawerListItem'\nimport { DrawerListDivider } from '../DrawerListDivider'\n\nexport const ChangeTableSizeButton: FC<ChangeTableSizeButtonProps> = ({ tableSize, onChange }) => (\n  <>\n    <DrawerListDivider />\n    <DrawerListItem\n      onClick={onChange}\n      icon={\n        <Checkbox\n          color=\"default\"\n          checked={tableSize === 'small'}\n        />\n      }\n    >\n      {i18n('Компактная таблица')}\n    </DrawerListItem>\n  </>\n)\n","import React, { FC } from 'react'\nimport { ThemeContext } from '../../helpers/themeProviderHOC'\nimport Switch from '@material-ui/core/Switch'\nimport { i18n } from '../../helpers/i18n'\nimport { DrawerListItem } from './DrawerListItem'\n\nexport const ThemeToggler: FC = () => (\n  <ThemeContext.Consumer>\n    {({ theme, toggleTheme }) => (\n      <DrawerListItem\n        onClick={toggleTheme}\n        icon={\n          <Switch\n            checked={theme === 'dark'}\n            color=\"default\"\n          />\n        }\n      >\n        {i18n('Темная тема')}\n      </DrawerListItem>\n    )}\n  </ThemeContext.Consumer>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport React from 'react'\nimport { Themed } from '../../../helpers/types'\n\nexport const DiceSizeChangerButtonsWrapper = styled(\n  (props) => <ButtonGroup variant=\"text\" size=\"small\" {...props} />,\n)(({ theme: {spacing} }: Themed) => ({\n  marginRight: spacing(2),\n}))\n","import { connect } from 'react-redux'\n\nimport { DiceSizeChanger } from './DiceSizeChanger'\nimport { decreaseDiceSize, DiceSizeState, DiceSizeThunk, increaseDiceSize } from '../../../redux/reducers/diceSize'\nimport { State } from '../../../redux/defaultState'\nimport { GamePhases, GamePhaseState } from '../../../redux/reducers/gamePhase'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\n\ninterface MapStateToProps extends DiceSizeState, GamePhaseState {\n}\n\ninterface MapDispatchToProps {\n  increaseDiceSize: DiceSizeThunk\n  decreaseDiceSize: DiceSizeThunk\n}\n\nexport interface DiceSizeChangerConnectedProps extends Pick<MapStateToProps, 'diceSize'>, MapDispatchToProps {\n}\n\nexport const DiceSizeChangerConnected = compose(\n  connect(\n    ({ diceSize, gamePhase }: State): MapStateToProps => ({\n      diceSize,\n      gamePhase,\n    }),\n    { increaseDiceSize, decreaseDiceSize },\n    (\n      { diceSize, gamePhase }: MapStateToProps,\n      { increaseDiceSize, decreaseDiceSize }: MapDispatchToProps,\n    ): DiceSizeChangerConnectedProps & VisibilityHOCProps => ({\n      diceSize,\n      increaseDiceSize,\n      decreaseDiceSize,\n      hidden: gamePhase !== GamePhases.IN_PLAY,\n    }),\n  ),\n  visibilityHOC,\n)(DiceSizeChanger)\n","import React, { FC } from 'react'\nimport { i18n } from '../../../helpers/i18n'\nimport { DrawerListItem } from '../DrawerListItem'\nimport { DrawerListDivider } from '../DrawerListDivider'\nimport { DiceSizeChangerButtonsWrapper } from './DiceSizeChangerButtonsWrapper'\nimport Button from '@material-ui/core/Button'\nimport { maxDiceSize, minDiceSize } from '../../../redux/reducers/diceSize'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { DiceSizeChangerConnectedProps } from './DiceSizeChangerConnected'\n\nexport const DiceSizeChanger: FC<DiceSizeChangerConnectedProps> = ({ diceSize, increaseDiceSize, decreaseDiceSize }) => (\n  <>\n    <DrawerListDivider />\n    <DrawerListItem\n      button={false}\n      icon={\n        <DiceSizeChangerButtonsWrapper>\n          <Button onClick={increaseDiceSize} disabled={diceSize === maxDiceSize}>\n            <AddIcon />\n          </Button>\n          <Button onClick={decreaseDiceSize} disabled={diceSize === minDiceSize}>\n            <RemoveIcon />\n          </Button>\n        </DiceSizeChangerButtonsWrapper>\n      }\n    >\n      {i18n('Размер костей')}\n    </DrawerListItem>\n  </>\n)\n","import { connect } from 'react-redux'\n\nimport { Drawer } from './Drawer'\nimport { State } from '../../redux/defaultState'\nimport { DrawerOpenedState } from '../../redux/reducers/drawerOpened'\n\ninterface MapStateToProps extends DrawerOpenedState {\n}\n\nexport interface DrawerProps extends MapStateToProps {\n}\n\nexport const DrawerConnected = connect(\n  ({ drawerOpened }: State): MapStateToProps => ({\n    drawerOpened,\n  }),\n  null,\n  (\n    { drawerOpened }: MapStateToProps,\n  ): DrawerProps => ({\n    drawerOpened,\n  }),\n)(Drawer)\n","import React, { FC } from 'react'\nimport { DrawerStyled } from './DrawerStyled'\nimport { RestartGameButtonConnected } from './RestartGameButton/RestartGameButtonConnected'\nimport { ChangeTableSizeButtonConnected } from './ChangeTableSizeButton/ChangeTableSizeButtonConnected'\nimport { ThemeToggler } from './ThemeToggler'\nimport { DiceSizeChangerConnected } from './DiceSizeChanger/DiceSizeChangerConnected'\nimport { DrawerProps } from './DrawerConnected'\n\nexport const Drawer: FC<DrawerProps> = ({ drawerOpened }) => (\n  <DrawerStyled open={drawerOpened}>\n    <ThemeToggler />\n    <DiceSizeChangerConnected />\n    <ChangeTableSizeButtonConnected />\n    <RestartGameButtonConnected />\n  </DrawerStyled>\n)\n","import { connect } from 'react-redux'\n\nimport { Wrapper as LayoutWrapper, Footer as LayoutFooter } from './MainLayoutParts'\nimport { State } from '../../redux/defaultState'\nimport { DrawerOpenedState } from '../../redux/reducers/drawerOpened'\nimport { ComponentType, ReactNode } from 'react'\n\nexport interface DrawerOpenedConnectorProps {\n  drawer?: boolean\n}\n\ninterface MapStateToProps extends DrawerOpenedState {\n}\n\ninterface MapDispatchToProps {\n  children: ReactNode\n}\n\ninterface MainLayoutWrapperConnectedProps extends MapDispatchToProps, DrawerOpenedConnectorProps {\n}\n\nexport const drawerOpenedConnector = (Component: ComponentType) => connect(\n  ({ drawerOpened }: State): MapStateToProps => ({\n    drawerOpened,\n  }),\n  {},\n  (\n    { drawerOpened }: MapStateToProps,\n    _,\n    { children }: MapDispatchToProps,\n  ): MainLayoutWrapperConnectedProps => ({\n    drawer: drawerOpened,\n    children,\n  }),\n)(Component)\n\nexport const Wrapper = drawerOpenedConnector(LayoutWrapper)\n\nexport const Footer = drawerOpenedConnector(LayoutFooter)\n","import makeStyles from '@material-ui/core/styles/makeStyles'\n\nexport const useGlobalStyles = makeStyles(({ palette: { grey, type, background: { paper } } }) => {\n  const backgroundColor = type === 'dark' ? paper : grey['300']\n\n  return {\n    '@global': {\n      'html, body': {\n        padding: 0,\n        margin: 0,\n        boxSizing: 'border-box',\n      },\n      'html, body, #root': {\n        height: '100%',\n      },\n\n      '@keyframes backgroundAnimation': {\n        '0%, 100%': {\n          backgroundColor,\n        },\n        '50%': {\n          backgroundColor: 'transparent',\n        },\n        // '100%': {\n        //   backgroundColor,\n        // },\n      },\n    },\n  }\n})\n","import React, { FC } from 'react'\nimport { Inner, Push } from './MainLayoutParts'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { TopMenu } from '../TopMenu/TopMenu'\nimport { DrawerConnected } from '../Drawer/DrawerConnected'\nimport { Wrapper, Footer } from './MainLayoutConnected'\nimport { useGlobalStyles } from './useGlobalStyles'\n\nexport const MainLayout: FC = ({ children }) => {\n  useGlobalStyles()\n\n  return (\n    <>\n      <CssBaseline />\n      <TopMenu />\n      <DrawerConnected />\n      <Wrapper>\n        <Inner>\n          {children}\n        </Inner>\n        <Push />\n      </Wrapper>\n      <Footer>bonez &copy; 2019</Footer>\n    </>\n  )\n}\n","import { connect } from 'react-redux'\n\nimport { changeGamePhase, GamePhases } from '../../redux/reducers/gamePhase'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { i18n } from '../../helpers/i18n'\n\ninterface StartNewGameProps extends Pick<ButtonProps, 'variant' | 'size' | 'color' | 'onClick' | 'children'> {\n}\n\nexport const StartGameButtonConnected = connect(\n  null,\n  { changeGamePhase },\n  (\n    _,\n    { changeGamePhase },\n  ): StartNewGameProps => ({\n    variant: 'contained',\n    size: 'large',\n    color: 'primary',\n    onClick() {\n      changeGamePhase(GamePhases.PLAYERS_SELECTION)\n    },\n    children: i18n('начать новую игру'),\n  }),\n)(Button)\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const ButtonsWrapper = styled('div')(({ theme: { spacing } }: Themed) => ({\n  '& button': {\n    marginRight: spacing(2),\n    marginBottom: spacing(2),\n  },\n}))\n","import { connect } from 'react-redux'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { i18n } from '../../../helpers/i18n'\nimport { changeGamePhase, GamePhases } from '../../../redux/reducers/gamePhase'\nimport CloseIcon from '@material-ui/icons/Close'\nimport React from 'react'\n\nexport interface CancelStartGameButtonProps\n  extends Pick<ButtonProps, 'size' | 'variant' | 'color' | 'children' | 'onClick' | 'startIcon'> {\n}\n\nexport const CancelStartGameButtonConnected = connect(\n  null,\n  { changeGamePhase },\n  (_, { changeGamePhase }): CancelStartGameButtonProps => ({\n    variant: 'contained',\n    color: 'secondary',\n    children: i18n('Отменить'),\n    size: 'small',\n    onClick() {\n      changeGamePhase(GamePhases.PRE_GAME)\n    },\n    startIcon: <CloseIcon />\n  }),\n)(Button)\n","import { ThunkAction } from '../../helpers/types'\nimport { nextTurn } from '../reducers/playerMove'\n\nexport const nextTurnThunk: ThunkAction = () => (dispatch, getState) => {\n  const state = getState()\n  let { playerMove: { 0: playerId } } = state\n  const { players } = state\n\n  if (!playerId) {\n    playerId = players[0].id\n  } else {\n    const index = players.findIndex(({ id }) => id === playerId)\n    const player = players[index + 1]\n    playerId = player ? player.id : state.players[0].id\n  }\n\n  dispatch(nextTurn([playerId, 0]))\n}\n","import { connect } from 'react-redux'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { i18n } from '../../../helpers/i18n'\nimport { ChangeGamePhase, changeGamePhase, GamePhases } from '../../../redux/reducers/gamePhase'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport { PlayersState } from '../../../redux/reducers/players'\nimport { ThunkAction } from '../../../helpers/types'\nimport { nextTurnThunk } from '../../../redux/actions/nextTurnThunk'\n\ninterface MapStateToProps extends PlayersState {\n}\n\ninterface MapDispatchToProps {\n  changeGamePhase: ChangeGamePhase\n  nextTurnThunk: ThunkAction\n}\n\nexport interface StartGameButtonProps extends Pick<ButtonProps, 'size' | 'variant' | 'color' | 'onClick' | 'children'> {\n}\n\nexport const StartGameButtonConnected = compose(\n  connect<MapStateToProps, MapDispatchToProps, {}, StartGameButtonProps & VisibilityHOCProps, State>(\n    ({ players }: State) => ({\n      players,\n    }),\n    { changeGamePhase, nextTurnThunk },\n    ({ players }, { changeGamePhase, nextTurnThunk }): StartGameButtonProps & VisibilityHOCProps => ({\n      variant: 'contained',\n      color: 'primary',\n      size: 'small',\n      children: i18n('Начать игру'),\n      onClick() {\n        // TODO: refactor this to Thunk Action\n        changeGamePhase(GamePhases.IN_PLAY)\n        nextTurnThunk()\n      },\n\n      hidden: players.length === 0,\n    }),\n  ),\n  visibilityHOC,\n)(Button)\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport Paper from '@material-ui/core/Paper'\n\nexport const PlayersListPaper = styled(Paper)(({ theme: { spacing } }: Themed) => ({\n  marginBottom: spacing(2),\n  maxWidth: spacing(75),\n}))\n","import { connect } from 'react-redux'\n\nimport { PlayersList } from './PlayersList'\nimport { State } from '../../../redux/defaultState'\nimport {\n  PlayersState,\n  RemovePlayer,\n  removePlayer,\n} from '../../../redux/reducers/players'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\n\ninterface MapStateToProps extends PlayersState {\n}\n\ninterface MapDispatchToProps {\n  removePlayer: RemovePlayer\n}\n\nexport interface PlayersListProps extends MapStateToProps, MapDispatchToProps {\n}\n\nexport const PlayersListConnected = compose(\n  connect<MapStateToProps, MapDispatchToProps, {}, PlayersListProps & VisibilityHOCProps, State>(\n    ({ players }) => ({\n      players,\n    }),\n    { removePlayer },\n    (\n      { players },\n      { removePlayer },\n    ): PlayersListProps & VisibilityHOCProps => ({\n      players,\n      removePlayer,\n\n      hidden: players.length === 0,\n    }),\n  ),\n  visibilityHOC,\n)(PlayersList)\n","import React, { FC, Fragment } from 'react'\nimport { PlayersListProps } from './PlayersListConnected'\nimport { i18n } from '../../../helpers/i18n'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport PersonIcon from '@material-ui/icons/Person'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Divider from '@material-ui/core/Divider'\nimport { PlayersListPaper } from './PlayersListPaper'\n\nexport const PlayersList: FC<PlayersListProps> = ({ players, removePlayer }) => (\n  <PlayersListPaper>\n    <List>\n      {players.map(({ id, name }, index) => (\n        <Fragment key={id}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText>\n              <span>{i18n('Игрок №')}{index + 1}:&nbsp;</span>\n              <span>{name}</span>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => removePlayer(id)}>\n                <ClearIcon fontSize=\"inherit\" />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n          {((index + 1) < players.length) && (\n            <Divider variant=\"inset\" component=\"li\" />\n          )}\n        </Fragment>\n      ))}\n    </List>\n  </PlayersListPaper>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nexport const DialogContentStyled = styled(DialogContent)({\n  paddingTop: '2em',\n  paddingBottom: '2em',\n  minWidth: '20em',\n})\n","import { connect } from 'react-redux'\n\nimport { AddPlayer } from './AddPlayer'\nimport { addPlayer, AddPlayer as AddPlayerType } from '../../../redux/reducers/players'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\n\ninterface MapDispatchToProps {\n  addPlayer: AddPlayerType\n}\n\nexport interface AddPlayerProps extends MapDispatchToProps {\n}\n\nexport const AddPlayerConnected = compose(\n  connect(\n    ({ players }: State) => ({\n      players,\n    }),\n    { addPlayer },\n    ({ players }, { addPlayer }): AddPlayerProps & VisibilityHOCProps => ({\n      addPlayer,\n\n      hidden: players.length > 4,\n    }),\n  ),\n  visibilityHOC,\n)(AddPlayer)\n","export const makeId = (): string => (\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0\n    // eslint-disable-next-line\n    const v = c == 'x' ? r : (r&0x3|0x8)\n    return v.toString(16)\n  })\n)\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport { i18n } from '../../../helpers/i18n'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Input from '@material-ui/core/Input'\nimport { AddPlayerProps } from './AddPlayerConnected'\nimport { DialogContentStyled } from './DialogContentStyled'\n\nexport const AddPlayer: FC<AddPlayerProps> = ({ addPlayer }) => {\n  const [open, setOpen] = useState(false)\n  const openModal = () => setOpen(true)\n  const closeModal = () => setOpen(false)\n\n  const [disabled, setDisabled] = useState(true)\n\n  const [inputValue, setInputValue] = useState('')\n  const onInputChange = ({ currentTarget }: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(currentTarget.value)\n    setDisabled(currentTarget.value.trim() === '')\n  }\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    addPlayer(inputValue.trim())\n    closeModal()\n    setInputValue('')\n    setDisabled(true)\n  }\n\n  return (\n    <>\n      <Button variant=\"contained\" startIcon={<PersonAddIcon />} size=\"small\" onClick={openModal}>\n        {i18n('Добавить игрока')}\n      </Button>\n      {open && (\n        <Dialog open onClose={closeModal}>\n          <form onSubmit={onSubmit}>\n            <DialogTitle>\n              {i18n('Добавить игрока')}\n            </DialogTitle>\n            <DialogContentStyled>\n              <Input fullWidth autoFocus value={inputValue} onChange={onInputChange} />\n            </DialogContentStyled>\n            <DialogActions>\n              <Button onClick={closeModal}>\n                {i18n('Отмена')}\n              </Button>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={disabled}>\n                {i18n('Добавить')}\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { playersDefaultState, PlayersState, resetPlayers } from '../../../redux/reducers/players'\nimport { Action, compose } from 'redux'\nimport { i18n } from '../../../helpers/i18n'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport equal from 'fast-deep-equal'\n\ninterface MapStateToProps extends PlayersState {\n}\n\ninterface MapDispatchToProps {\n  onClick(): Action\n}\n\nexport interface ResetToDefaultPlayersButtonProps\n  extends MapDispatchToProps, Pick<ButtonProps, 'startIcon'>, VisibilityHOCProps {\n  children: string\n}\n\nexport const ResetToDefaultPlayersButtonConnected = compose(\n  connect(\n    ({ players }: State): MapStateToProps => ({\n      players,\n    }),\n    { resetPlayers },\n    ({ players }, { resetPlayers }): ResetToDefaultPlayersButtonProps => ({\n      onClick: resetPlayers,\n      children: i18n('Сбросить'),\n      startIcon: <RotateLeftIcon />,\n\n      hidden: equal(players, playersDefaultState),\n    }),\n  ),\n  visibilityHOC,\n)(Button)\n","import React, { FC } from 'react'\nimport { ButtonsWrapper } from './Buttons/ButtonsWrapper'\nimport { CancelStartGameButtonConnected } from './Buttons/CancelStartGameButtonConnected'\nimport { StartGameButtonConnected } from './Buttons/StartGameButtonConnected'\nimport { PlayersListConnected } from './PlayersList/PlayersListConnected'\nimport { AddPlayerConnected } from './AddPlayer/AddPlayerConnected'\nimport { ResetToDefaultPlayersButtonConnected } from './Buttons/ResetToDefaultPlayersButtonConnected'\n\nexport const PlayersSelection: FC = () => (\n  <>\n    <PlayersListConnected />\n    <ButtonsWrapper>\n      <CancelStartGameButtonConnected />\n      <StartGameButtonConnected />\n      <AddPlayerConnected />\n      <ResetToDefaultPlayersButtonConnected />\n    </ButtonsWrapper>\n  </>\n)\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const $wrapWidth = 1.8\nexport const $delay = 300\n\ninterface DiceInnerProps {\n  roll?: boolean\n  selected?: boolean\n}\n\nexport const DiceInner = styled(\n  ({ roll, selected, ...rest }: DiceInnerProps) => <div {...rest} />,\n)(({ roll, selected, theme: { palette: { type, common: { white, black } } } }: Themed & DiceInnerProps) => ({\n\n  display: 'flex',\n  flexWrap: 'wrap',\n  background: type === 'dark' ? black : white,\n  borderRadius: '.2em',\n\n  width: `${$wrapWidth}em`,\n  minWidth: `${$wrapWidth}em`,\n  maxWidth: `${$wrapWidth}em`,\n  height: `${$wrapWidth}em`,\n\n  transitionDuration: `${$delay / 1000}s`,\n\n  transform: roll ? 'rotate(359deg)' : 'none',\n\n  marginTop: roll || selected ? '-.1em' : 0,\n\n  boxShadow: selected ? '0 .3em 1em rgba(0, 0, 0, .6)' : '0 0 .1em rgba(0, 0, 0, .4)',\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { $delay, $wrapWidth } from './DiceInner'\nimport { Themed } from '../../../helpers/types'\n\ninterface DotProps {\n  roll?: boolean\n  filled?: boolean\n}\n\nexport const DiceDot = styled(\n  ({ filled, roll, ...rest }: DotProps) => (\n    <div {...rest}>\n      <div />\n    </div>\n  ),\n)(({ filled, roll, theme: { palette: { type, grey, common: { black } } } }: Themed & DotProps) => ({\n\n  minWidth: `${$wrapWidth / 3}em`,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  '& div': {\n    width: '80%',\n    height: '80%',\n    borderRadius: '50%',\n\n    transitionProperty: 'background',\n    transitionDuration: `${$delay / 1000}s`,\n\n    boxShadow: filled && type === 'dark'\n      ? 'inset 0 0 .1em rgba(0, 0, 0, .8)'\n      : 'none',\n\n    background: filled\n      ? roll\n        ? 'transparent'\n        : type === 'dark' ? grey['300'] : black\n      : 'transparent',\n  },\n}))\n","import styled from '@material-ui/styles/styled'\n\nconst $width = 2\n\nexport const DiceWrapper = styled('div')({\n  width: `${$width}em`,\n  minWidth: `${$width}em`,\n  maxWidth: `${$width}em`,\n  height: `${$width}em`,\n  margin: `${$width / 6}em`,\n  flexWrap: 'wrap',\n  flexGrow: 1,\n})\n","import React, { FC } from 'react'\nimport { DiceDot } from './DiceDot'\nimport { DiceWrapper } from './DiceWrapper'\nimport { DiceInner } from './DiceInner'\n\nconst dots: { [key: number]: number[] } = {\n  1: [5],\n  2: [1, 9],\n  3: [1, 5, 9],\n  4: [1, 3, 7, 9],\n  5: [1, 3, 5, 7, 9],\n  6: [1, 3, 4, 6, 7, 9],\n}\n\ninterface DiceProps {\n  value: number\n  roll?: boolean\n  selected?: boolean\n\n  onClick?(): void\n}\n\nconst array9 = [...window.Array(9).keys()]\n\nexport const Dice: FC<DiceProps> = ({ value, roll, selected, onClick }) => (\n  <DiceWrapper onClick={onClick}>\n    <DiceInner roll={roll} selected={selected}>\n      {array9.map((i) => (\n        <DiceDot\n          key={i}\n          roll={roll}\n          filled={dots[value] && dots[value].indexOf(i + 1) !== -1}\n        />\n      ))}\n    </DiceInner>\n  </DiceWrapper>\n)\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport { diceSizeDefaultState, DiceSizeState } from '../../../redux/reducers/diceSize'\n\ninterface DicesWrapper extends Partial<DiceSizeState> {\n}\n\nexport const DicesWrapper = styled(\n  ({ diceSize, ...props }: DicesWrapper) => (\n    <div {...props} />\n  ),\n)(({ diceSize, theme: { spacing } }: Themed & DicesWrapper) => {\n  const size = diceSize ? diceSize : diceSizeDefaultState\n\n  return {\n    display: 'flex',\n    flexWrap: 'wrap',\n    fontSize: spacing(size),\n    paddingBottom: spacing(size / 2),\n  }\n})\n","import { connect } from 'react-redux'\n\nimport { Dices } from './Dices'\nimport { State } from '../../redux/defaultState'\nimport { DicesState } from '../../redux/reducers/dices'\nimport { DicesSelectedState, SelectDice, selectDice } from '../../redux/reducers/dicesSelected'\nimport { LoadingState } from '../../redux/reducers/loading'\nimport { DiceSizeState } from '../../redux/reducers/diceSize'\n\ninterface MapStateToProps extends DicesState, DicesSelectedState, LoadingState, DiceSizeState {\n}\n\ninterface MapDispatchToProps {\n  selectDice: SelectDice\n}\n\nexport interface DicesProps extends MapStateToProps, MapDispatchToProps {\n}\n\nexport const DicesConnected = connect(\n  ({ dices, dicesSelected, loading, diceSize }: State): MapStateToProps => ({\n    dices,\n    dicesSelected,\n    loading,\n    diceSize,\n  }),\n  { selectDice },\n  ({ dices, dicesSelected, loading, diceSize }, { selectDice }): DicesProps => ({\n    dices,\n    dicesSelected,\n    loading,\n    selectDice,\n    diceSize,\n  }),\n)(Dices)\n","import React, { FC } from 'react'\nimport { DicesProps } from './DicesConnected'\nimport { Dice } from './Dice/Dice'\nimport { DicesWrapper } from './DicesWrapper/DicesWrapper'\n\nexport const Dices: FC<DicesProps> = ({ dices, dicesSelected, loading, selectDice, diceSize }) => (\n  <DicesWrapper diceSize={diceSize}>\n    {dices.map((dice, index) => {\n      const selected = dicesSelected.indexOf(index) !== -1\n      const onClick = () => {\n        if (dice !== -1) {\n          selectDice(index)\n        }\n      }\n\n      return (\n        <Dice\n          key={index}\n          value={dice}\n          selected={selected}\n          roll={!selected && loading}\n          onClick={onClick}\n        />\n      )\n    })}\n  </DicesWrapper>\n)\n","import Fab from '@material-ui/core/Fab'\nimport { Themed } from '../../../helpers/types'\nimport React from 'react'\nimport styled from '@material-ui/styles/styled'\n\nexport const RollDiceButtonStyled = styled(\n  (props) => (\n    <Fab\n      variant=\"extended\"\n      color=\"primary\"\n      {...props}\n    />\n  ),\n)(({ theme: { spacing } }: Themed) => ({\n  marginRight: spacing(2),\n  marginBottom: spacing(2),\n  minWidth: spacing(40),\n}))\n","import CasinoIcon from '@material-ui/icons/Casino'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const CasinoIconStyled = styled(CasinoIcon)(({ theme: { spacing } }: Themed) => ({\n  marginRight: spacing(1),\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport red from '@material-ui/core/colors/red'\n\nexport const RollDiceButtonTip = styled('span')(({\n  theme: { spacing, palette: { grey } },\n}: Themed) => ({\n  marginLeft: spacing(1),\n  textTransform: 'none',\n  color: red.A100,\n\n  '& span': {\n    color: grey['600'],\n    fontWeight: 'bold',\n  },\n}))\n","import React, { FC } from 'react'\nimport { RollDiceButtonStyled } from './RollDiceButtonStyled'\nimport { CasinoIconStyled } from './CasinoIconStyled'\nimport { i18n } from '../../../helpers/i18n'\nimport { RollDiceButtonTip } from './RollDiceButtonTip'\nimport { RollDiceButtonProps } from './RollDiceButtonConnected'\nimport { MAX_SHOT_COUNT } from '../../../redux/reducers/playerMove'\n\nconst defaultDelay = 300\nlet delay = 0\n\nlet timer: number | null = null\n\nexport const RollDiceButton: FC<RollDiceButtonProps> = ({ loading, shot, generateRandomDices, setLoading }) => {\n\n  const shuffle = () => {\n    delay = Date.now()\n    setLoading(true)\n    if (timer !== null) {\n      window.clearTimeout(timer)\n    }\n  }\n\n  const shuffleUp = () => {\n    if (loading) {\n      const d = Date.now() - delay\n      timer = window.setTimeout(() => {\n        generateRandomDices()\n        setLoading(false)\n      }, d < defaultDelay ? defaultDelay - d : 0)\n    }\n  }\n\n  const disabled = shot >= MAX_SHOT_COUNT\n\n  return (\n    <RollDiceButtonStyled\n      onMouseUp={shuffleUp}\n      onMouseDown={shuffle}\n      onMouseLeave={shuffleUp}\n      disabled={disabled}\n    >\n      {disabled ? i18n('Запишите ваши очки') : (\n        <>\n          <CasinoIconStyled fontSize=\"large\" />\n          {i18n('Бросить кости')}\n          <RollDiceButtonTip>\n            {shot}\n            <span> / {MAX_SHOT_COUNT}</span>\n          </RollDiceButtonTip>\n        </>\n      )}\n    </RollDiceButtonStyled>\n  )\n}\n","export const getRandomInt = (min: number, max: number): number => (\n  Math.floor(Math.random() * (max - min + 1)) + min\n)\n\nexport const rand = () => getRandomInt(1, 6)\n","import { connect } from 'react-redux'\nimport { RollDiceButton } from './RollDiceButton'\nimport { generateRandomDicesThunk } from '../../../redux/actions/generateRandomDicesThunk'\nimport { LoadingState, SetLoading, setLoading } from '../../../redux/reducers/loading'\nimport { State } from '../../../redux/defaultState'\nimport { ThunkAction } from '../../../helpers/types'\nimport { PlayerMoveState } from '../../../redux/reducers/playerMove'\n\ninterface MapStateToProps extends LoadingState {\n  shot: PlayerMoveState['playerMove'][1]\n}\n\ninterface MapDispatchToProps {\n  generateRandomDices: ThunkAction\n  setLoading: SetLoading\n}\n\nexport interface RollDiceButtonProps extends MapStateToProps, MapDispatchToProps {\n}\n\nexport const RollDiceButtonConnected = connect<MapStateToProps, MapDispatchToProps, {}, RollDiceButtonProps, State>(\n  ({ loading, playerMove: { 1: shot } }) => ({\n    loading,\n    shot,\n  }),\n  { generateRandomDices: generateRandomDicesThunk, setLoading },\n  (\n    { loading, shot },\n    { generateRandomDices, setLoading },\n  ): RollDiceButtonProps => ({\n    loading,\n    shot,\n    setLoading,\n    generateRandomDices,\n  }),\n)(RollDiceButton)\n","import { rand } from '../../helpers/random'\nimport { generateRandomDices } from '../reducers/dices'\nimport { ThunkAction } from '../../helpers/types'\nimport { increaseShot } from '../reducers/playerMove'\n\nexport const generateRandomDicesThunk: ThunkAction = () => (dispatch, getState) => {\n  const { dices, dicesSelected } = getState()\n  let randDices = dices\n\n  dices.forEach((item, index) => {\n    if (dicesSelected.indexOf(index) === -1) {\n      randDices[index] = rand()\n    }\n  })\n\n  // TODO 2\n  // dispatch({\n  //   type: ConditionalCSS.HISTORY_PUSH,\n  //   entry: {\n  //     dices: List(randDices),\n  //     playerId: state.getIn(['playerMove', 'playerId']),\n  //     shot: state.getIn(['playerMove', 'shot']),\n  //   }\n  // })\n\n  dispatch(increaseShot())\n  dispatch(generateRandomDices(randDices))\n}\n","import { connect } from 'react-redux'\nimport { ResetDicesButton } from './ResetDicesButton'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport { DicesSelectedState, unselectAllDices, UnselectAllDices } from '../../../redux/reducers/dicesSelected'\n\ninterface MapStateToProps extends DicesSelectedState {\n}\n\ninterface MapDispatchToProps {\n  unselectAllDices: UnselectAllDices\n}\n\nexport interface ResetDicesButtonProps extends MapDispatchToProps, VisibilityHOCProps {\n}\n\nexport const ResetDicesButtonConnected = compose(\n  connect(\n    ({ dicesSelected }: State): MapStateToProps => ({\n      dicesSelected,\n    }),\n    { unselectAllDices },\n    ({ dicesSelected }, { unselectAllDices }): ResetDicesButtonProps => ({\n      unselectAllDices,\n\n      hidden: dicesSelected.length === 0,\n    }),\n  ),\n  visibilityHOC,\n)(ResetDicesButton)\n","import React, { FC } from 'react'\nimport { i18n } from '../../../helpers/i18n'\nimport Fab from '@material-ui/core/Fab'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft'\nimport { ResetDicesButtonProps } from './ResetDicesButtonConnected'\n\nexport const ResetDicesButton: FC<ResetDicesButtonProps> = ({ unselectAllDices }) => (\n  <Fab color=\"secondary\" variant=\"extended\" onClick={unselectAllDices} style={{ marginBottom: '16px' }}>\n    <RotateLeftIcon fontSize=\"large\" />\n    {i18n('Сброс')}\n  </Fab>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\n\nexport const DicesActionsWrapper = styled('div')(({ theme: { spacing } }: Themed) => ({\n  // margin: spacing(2),\n  // height: '20em',\n  marginBottom: spacing(3),\n}))\n","import React, { FC } from 'react'\nimport { RollDiceButtonConnected } from './RollDiceButton/RollDiceButtonConnected'\nimport { ResetDicesButtonConnected } from './ResetDicesButton/ResetDicesButtonConnected'\nimport { DicesActionsWrapper } from './DicesActionsWrapper'\n\nexport const DicesActions: FC = () => (\n  <DicesActionsWrapper>\n    <RollDiceButtonConnected />\n    <ResetDicesButtonConnected />\n  </DicesActionsWrapper>\n)\n","import React, { FC } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport useTheme from '@material-ui/core/styles/useTheme'\n\nexport const Heading: FC = ({ children }) => {\n  const { spacing } = useTheme()\n\n  return (\n    <Typography variant=\"h5\" component=\"h3\" style={{ marginBottom: spacing(3) }}>\n      {children}\n    </Typography>\n  )\n}\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport Typography from '@material-ui/core/Typography'\n\nexport const Paragraph = styled(\n  (props) => (\n    <Typography paragraph {...props} />\n  ),\n)(({ theme: { spacing } }: Themed) => ({\n  margin: `${spacing(1)} 0`,\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport TableCell from '@material-ui/core/TableCell'\n\nexport const TableCellNoWrap = styled(TableCell)({\n  whiteSpace: 'nowrap',\n})\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n'\nimport { Heading } from './Heading'\nimport { Paragraph } from './Paragraph'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport { TableCellNoWrap } from './TableCellNoWrap'\nimport Typography from '@material-ui/core/Typography'\n\nexport const Rules: FC = () => (\n  <>\n    <Typography paragraph>\n      {i18n('Яхта — народная игра в кости, напоминающая Покер на костях, предшественник игры Yahtzee.')}\n    </Typography>\n    <Heading>\n      {i18n('Ход игры')}\n    </Heading>\n    <Typography paragraph>\n      {i18n('В яхту можно играть в одиночку или с любым количеством противников. Игроки ходят по очереди, бросая одновременно пять костей. После каждого броска игрок выбирает, какие кости оставить, а какие перебросить. Игрок может перебросить любое количество (включая все пять) костей два раза за ход. В каждом ходе необходимо записать очки за одну из возможных комбинаций, если подходящих не осталось, то нужно написать 0 за любую. Каждую комбинацию можно записать только один раз. Игрок с наибольшим количеством очков в конце игры побеждает.')}\n    </Typography>\n    <Heading>\n      {i18n('Подсчёт очков')}\n    </Heading>\n    <Typography paragraph>{i18n('Очки записываются за следующие комбинации:')}</Typography>\n    <Typography paragraph>{i18n('Верхняя секция:')}</Typography>\n    <Table size=\"small\">\n      <TableBody>\n        <TableRow>\n          <TableCell>{i18n('Единицы')}</TableCell>\n          <TableCell>{i18n('Ones')}</TableCell>\n          <TableCell>{i18n('Сумма всех костей, на которых выпали 1.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('Двойки')}</TableCell>\n          <TableCell>{i18n('Twos')}</TableCell>\n          <TableCell>{i18n('Сумма всех костей, на которых выпали 2.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('Тройки')}</TableCell>\n          <TableCell>{i18n('Threes')}</TableCell>\n          <TableCell>{i18n('Сумма всех костей, на которых выпали 3.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('Четверки')}</TableCell>\n          <TableCell>{i18n('Fours')}</TableCell>\n          <TableCell>{i18n('Сумма всех костей, на которых выпали 4.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('Пятерки')}</TableCell>\n          <TableCell>{i18n('Fives')}</TableCell>\n          <TableCell>{i18n('Сумма всех костей, на которых выпали 5.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('Шестёрки')}</TableCell>\n          <TableCell>{i18n('Sixes')}</TableCell>\n          <TableCell>{i18n('Сумма всех костей, на которых выпали 6.')}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n\n    <br/>\n\n    <Paragraph>\n      {i18n('Если игрок набирает по крайней мере 63 очков (по три кости с каждым числом) в верхней секции, он получает бонус в виде 35 очков.')}\n    </Paragraph>\n    <Paragraph>\n      {i18n('Нижняя секция:')}\n    </Paragraph>\n    <Table size=\"small\">\n      <TableBody>\n        <TableRow>\n          <TableCellNoWrap>{i18n('Сэт')}</TableCellNoWrap>\n          <TableCellNoWrap>{i18n('Three of a Kind')}</TableCellNoWrap>\n          <TableCell>{i18n('Три кости, на которых выпали одинаковые значения. В очки записывается сумма этих трёх костей.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('Карэ')}</TableCellNoWrap>\n          <TableCellNoWrap>{i18n('Four of a Kind')}</TableCellNoWrap>\n          <TableCell>{i18n('Четыре кости, на которых выпали одинаковые значения. В очки записывается сумма этих четырёх костей.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('Младший стрит')}</TableCellNoWrap>\n          <TableCellNoWrap>{i18n('Small Straight')}</TableCellNoWrap>\n          <TableCell>{i18n('Любые четыре последовательных числа (1, 2, 3, 4 или 2, 3, 4, 5 или 3, 4, 5, 6). Записывается 25 очков.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('Старший стрит')}</TableCellNoWrap>\n          <TableCellNoWrap>{i18n('Big Straight')}</TableCellNoWrap>\n          <TableCell>{i18n('Пять последовательных чисел (1, 2, 3, 4, 5 или 2, 3, 4, 5, 6). Записывается 30 очков.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('Фул Хаус')}</TableCellNoWrap>\n          <TableCellNoWrap>{i18n('Full House')}</TableCellNoWrap>\n          <TableCell>{i18n('Пара и тройка любых одинаковых костей. Записывается 30 очков.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('Яхта')}</TableCellNoWrap>\n          <TableCellNoWrap>{i18n('The Yacht')}</TableCellNoWrap>\n          <TableCell>{i18n('Пять костей, на которых выпали одинаковые значения. Записывается 50 очков.')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('Шанс')}</TableCellNoWrap>\n          <TableCellNoWrap>{i18n('Chance')}</TableCellNoWrap>\n          <TableCell>{i18n('Записывается сумма всех выпавших костей.')}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  </>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\n\nexport const StartGameButtonWrapper = styled('div')(({ theme: { spacing } }: Themed) => ({\n  paddingTop: spacing(2),\n  paddingBottom: spacing(4),\n}))\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport { conditionalCSS } from '../../../helpers/conditionalCSS'\nimport TableCell from '@material-ui/core/TableCell'\n\nexport interface TableCellStyledProps {\n  heading?: boolean\n  selected?: boolean\n  noPadding?: boolean\n  centered?: boolean\n  width?: number\n  active?: boolean\n}\n\nexport const TABLE_FIRST_COLUMN_WIDTH = 150\nexport const TABLE_COLUMN_WIDTH = 170\n\nexport const TableCellStyled = styled(\n  ({\n    heading,\n    selected,\n    noPadding,\n    centered,\n    width,\n    active,\n    ...props\n  }: TableCellStyledProps) => (\n    <TableCell component=\"div\" {...props} />\n  ),\n)(({\n  theme: { spacing, palette: { type, grey, background: { paper } } },\n  centered, heading, selected, noPadding, width, active,\n}: Themed & TableCellStyledProps) => {\n  const activeColor = type === 'dark' ? paper : grey['300']\n\n  return conditionalCSS([\n    [centered, {\n      textAlign: 'center',\n    }],\n    [heading, {\n      color: '#f99',\n    }],\n    [selected, {\n      backgroundColor: activeColor,\n    }],\n    [noPadding, {\n      padding: 0,\n      position: 'relative',\n    }],\n    [width, {\n      width,\n      minWidth: width,\n    }],\n    [active && !heading, {\n      borderLeft: `1px solid ${activeColor}`,\n      borderRight: `1px solid ${activeColor}`,\n    }],\n    [heading && active, {\n      backgroundColor: activeColor,\n      borderTopRightRadius: spacing(1),\n      borderTopLeftRadius: spacing(1),\n    }],\n  ])\n})\n\n","import { Dices } from '../redux/reducers/dices'\nimport { Combination } from '../redux/reducers/combinations'\nimport { uniq } from './uniq'\n\nexport type Return<T> = {\n  points?: T\n  maxPoints?: T\n}\n\ntype MaxPoints = 25 | 30 | 50\n\ntype ResultsMap = {\n  [Combination.SMALL_STRAIGHT]: Return<MaxPoints>\n  [Combination.BIG_STRAIGHT]: Return<MaxPoints>\n  [Combination.THE_YACHT]: Return<MaxPoints>\n  [Combination.TWO_PAIR]: Return<MaxPoints>\n  [Combination.FULL_HOUSE]: Return<MaxPoints>\n}\n\nexport const resultsMap: ResultsMap = {\n  [Combination.SMALL_STRAIGHT]: { points: 25, maxPoints: 25 },\n  [Combination.BIG_STRAIGHT]: { points: 30, maxPoints: 30 },\n  [Combination.THE_YACHT]: { points: 50, maxPoints: 50 },\n  [Combination.TWO_PAIR]: { points: 25, maxPoints: 25 },\n  [Combination.FULL_HOUSE]: { points: 30, maxPoints: 30 },\n}\n\nexport type CheckMatch = (combinationType: Combination, dices: Dices) => Return<number>\n\nexport const checkMatch: CheckMatch = (combinationType, dices) => {\n  const values = Object.values(dices)\n  const sequence = values.sort()\n  const seq = uniq(sequence)\n  const seqString = seq.toString()\n\n  switch (combinationType) {\n    case Combination.ONE:\n    case Combination.TWO:\n    case Combination.THREE:\n    case Combination.FOUR:\n    case Combination.FIVE:\n    case Combination.SIX: {\n      const matches = sequence.filter(item => item === combinationType)\n      if (matches.length >= 3) {\n        return {\n          points: matches.length * combinationType,\n          maxPoints: 5 * combinationType,\n        }\n      }\n      break\n    }\n    case Combination.EQUAL_3:\n    case Combination.EQUAL_4: {\n      const count = parseInt(combinationType.split('_')[1], 10)\n\n      const counts: { [k: string]: number } = {}\n\n      sequence.forEach(x => {\n        counts[x] = (counts[x] || 0) + 1\n      })\n\n      const number = parseInt(Object.keys(counts).filter(key => counts[key] >= count)[0], 10)\n\n      if (!isNaN(number)) {\n        return {\n          points: number * count,\n          maxPoints: 6 * count,\n        }\n      }\n\n      break\n    }\n    case Combination.SMALL_STRAIGHT: {\n      const successResult = resultsMap[Combination.SMALL_STRAIGHT]\n\n      if (seq.length === 5) {\n        if (['1,2,3,4,5', '2,3,4,5,6'].indexOf(seqString) !== -1) {\n          return successResult\n        }\n        for (let i = 1; i <= seq.length; i++) {\n          if (seq[i - 1] !== i) {\n            let seqCopy = [...seq]\n            seqCopy.shift()\n            if (seqCopy.length === 4 && seqCopy.toString() === '3,4,5,6') {\n              return successResult\n            }\n            seqCopy = [...seq]\n            seqCopy.pop()\n            if (seqCopy.length === 4 && seqCopy.toString() === '1,2,3,4') {\n              return successResult\n            }\n          }\n        }\n      }\n\n      if (seq.length === 4 && ['1,2,3,4', '2,3,4,5', '3,4,5,6'].indexOf(seqString) !== -1) {\n        return successResult\n      }\n      break\n    }\n    case Combination.BIG_STRAIGHT: {\n      if (seq.length === 5 && ['1,2,3,4,5', '2,3,4,5,6'].indexOf(seqString) !== -1) {\n        return resultsMap[Combination.BIG_STRAIGHT]\n      }\n      break\n    }\n    case Combination.THE_YACHT: {\n      if (seq.length === 1 && seq[0] !== -1) {\n        return resultsMap[Combination.THE_YACHT]\n      }\n      break\n    }\n    case Combination.CHANCE: {\n      return {\n        points: sequence.reduce((a, b) => a + b, 0),\n        maxPoints: 30,\n      }\n    }\n    case Combination.FULL_HOUSE: {\n      if (seq.length === 2) {\n        const sorted = [...sequence].sort()\n        if (\n          (\n            sorted[0] === sorted[1] &&\n            sorted[1] === sorted[2] &&\n            sorted[3] === sorted[4] &&\n            sorted[0] !== sorted[3]\n          ) || (\n            sorted[0] === sorted[1] &&\n            sorted[2] === sorted[3] &&\n            sorted[3] === sorted[4] &&\n            sorted[0] !== sorted[2]\n          )\n        ) {\n          return resultsMap[Combination.FULL_HOUSE]\n        }\n      }\n      break\n    }\n    case Combination.TWO_PAIR: {\n      const sorted = sequence.sort()\n      if (\n        (\n          sorted[0] === sorted[1] &&\n          sorted[2] === sorted[3] &&\n          sorted[0] !== sorted[2]\n        ) || (\n          sorted[1] === sorted[2] &&\n          sorted[3] === sorted[4] &&\n          sorted[1] !== sorted[3]\n        ) || (\n          sorted[0] === sorted[1] &&\n          sorted[3] === sorted[4] &&\n          sorted[0] !== sorted[3]\n        )\n      ) {\n        return resultsMap[Combination.TWO_PAIR]\n      }\n      break\n    }\n    default:\n      return {}\n  }\n\n  return {}\n}\n","export const uniq = (a: number[]): number[] => [...new Set(a)]\n","import { CSSProperties } from 'react'\nimport { AlignItemsProperty, JustifyContentProperty } from 'csstype'\n\ntype Stretch4 = (top?: number, right?: number, bottom?: number, left?: number) => CSSProperties\n\nconst iU = (value: number | undefined): boolean => value === undefined\n\nexport const stretch: Stretch4 = (\n  top = 0,\n  right,\n  bottom,\n  left,\n) => {\n\n  if (iU(right) && iU(bottom) && iU(left)) {\n    left = right = bottom = top\n  }\n\n  if (!iU(top) && !iU(right) && iU(bottom) && iU(left)) {\n    left = right\n    bottom = top\n  }\n\n  if (!iU(top) && !iU(right) && !iU(bottom) && iU(left)) {\n    left = right\n  }\n\n  return {\n    position: 'absolute',\n    top,\n    right,\n    bottom,\n    left,\n  }\n}\n\ntype Align = (vertical?: AlignItemsProperty, horizontal?: JustifyContentProperty) => CSSProperties\n\nexport const align: Align = (\n  vertical = 'center',\n  horizontal = 'center',\n) => ({\n  display: 'flex',\n  alignItems: vertical,\n  justifyContent: horizontal,\n})\n","import styled from '@material-ui/styles/styled'\nimport { align, stretch } from '../../../../helpers/css'\nimport { EMPTY_CELL } from '../../../../redux/reducers/combinations'\nimport { Themed } from '../../../../helpers/types'\n\nexport const Empty = styled('div')(({\n  theme: { palette: { type, grey, background: { paper } } },\n}: Themed) => ({\n  '&, &::before': {\n    ...stretch(),\n  },\n  '&::before': {\n    content: `'${EMPTY_CELL}'`,\n    ...align(),\n    color: type === 'dark' ? paper : grey[300],\n  },\n}))\n","import styled from '@material-ui/styles/styled'\nimport MaterialButton, { ButtonProps } from '@material-ui/core/Button'\nimport { TableSizes } from '../../../../redux/reducers/tableSize'\nimport React from 'react'\nimport { stretch } from '../../../../helpers/css'\n\ninterface ButtonStyledProps extends Pick<ButtonProps, 'size' | 'color' | 'onClick'> {\n}\n\nexport const Button = styled(\n  ({ size, color, ...props }: ButtonStyledProps) => (\n    <MaterialButton\n      {...props}\n      fullWidth\n      color={color}\n      variant=\"contained\"\n      size={size === TableSizes.MEDIUM ? 'large' : size}\n    />\n  ),\n)({\n  ...stretch(),\n  textTransform: 'lowercase',\n  borderRadius: 0,\n  padding: 0,\n})\n","import styled from '@material-ui/styles/styled'\nimport { align, stretch } from '../../../../helpers/css'\n\nexport const Matched = styled('div')({\n  ...stretch(),\n  ...align(),\n})\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport grey from '@material-ui/core/colors/grey'\nimport { Themed } from '../../../../helpers/types'\nimport { conditionalCSS } from '../../../../helpers/conditionalCSS'\n\ninterface BonusProps {\n  alt?: boolean\n}\n\nexport const Bonus = styled(\n  ({ alt, ...props }: BonusProps) => <div {...props} />,\n)(({ theme: { palette: { type } }, alt }: Themed & BonusProps) => conditionalCSS([\n  [alt, {\n    fontStyle: 'italic',\n    color: type === 'dark' ? grey[700] : grey[400],\n  }],\n]))\n","type Value = string | number\n\ntype InArray = (arr: Array<Value>, value: Value) => boolean\n\nexport const inArray: InArray = (arr, value) => (\n  arr.indexOf(value) !== -1\n)\n","import { inArray } from './inArray'\nimport { i18n } from './i18n'\n\nconst calc = (n: number) => (...sequence: number[]): boolean => inArray(sequence, n % 10)\n\nexport const defineWorkEnding = (n: number): string | undefined => {\n  const calculated = calc(n)\n\n  if (inArray([11, 12, 13, 14], n)) {\n    return i18n('очков')\n  }\n\n  if (calculated(1)) {\n    return i18n('очко')\n  }\n\n  if (calculated(2, 3, 4)) {\n    return i18n('очка')\n  }\n\n  if (calculated(0, 5, 6, 7, 8, 9)) {\n    return i18n('очков')\n  }\n}\n","import { connect } from 'react-redux'\nimport cx from 'classnames'\n\nimport { State } from '../../../redux/defaultState'\nimport { CombinationInfo, EMPTY_CELL, isBonus as _isBonus } from '../../../redux/reducers/combinations'\nimport { Player } from '../../../redux/reducers/players'\nimport { DicesState } from '../../../redux/reducers/dices'\nimport { PlayerMoveState } from '../../../redux/reducers/playerMove'\nimport { CheckMatch, checkMatch } from '../../../helpers/checkMatch'\nimport { saveCombinationThunk, SaveCombinationThunk } from '../../../redux/actions/saveCombinationThunk'\nimport { Combination } from './Combination'\n\ntype Combination = Pick<CombinationInfo, 'combination'>;\n\ninterface MapStateToProps extends DicesState, Combination {\n  activePlayerId: PlayerMoveState['playerMove'][0]\n  existingCombination: number | EMPTY_CELL\n}\n\ninterface MapDispatchToProps {\n  saveCombinationThunk: SaveCombinationThunk\n}\n\ninterface OwnProps extends Combination {\n  playerId: Player['id']\n  isMoveAvailable: boolean\n}\n\nexport interface CombinationProps extends Pick<MapStateToProps, 'existingCombination'>, ReturnType<CheckMatch> {\n  type: string | 'matching' | 'bonus' | 'matched' | 'strike'\n\n  save(): void\n\n  strikeOut(): void\n}\n\nexport const CombinationConnected = connect<MapStateToProps, MapDispatchToProps, OwnProps, CombinationProps, State>(\n  (\n    { playerPoints, dices, playerMove: { 0: activePlayerId } },\n    { playerId, combination },\n  ) => {\n    const existingCombination = (playerPoints[playerId] || [])[combination]\n\n    return {\n      dices,\n      activePlayerId,\n      combination,\n      existingCombination: existingCombination === undefined ? EMPTY_CELL : existingCombination,\n    }\n  },\n  { saveCombinationThunk },\n  (\n    { dices, combination, activePlayerId, existingCombination },\n    { saveCombinationThunk },\n    { playerId, isMoveAvailable },\n  ): CombinationProps => {\n    const { points, maxPoints } = checkMatch(combination, dices)\n    const active = activePlayerId === playerId\n    const isBonus = _isBonus(combination)\n    const matched = existingCombination !== EMPTY_CELL && !isBonus\n\n    return {\n      type: cx({\n        matched,\n        matching: active && !matched && points !== undefined && points > 0,\n        bonus: isBonus && existingCombination !== EMPTY_CELL,\n        strike: active && !matched && !isBonus && !isMoveAvailable,\n      }),\n\n      existingCombination,\n\n      points,\n      maxPoints,\n      save() {\n        saveCombinationThunk(playerId, combination, points)\n      },\n      strikeOut() {\n        saveCombinationThunk(playerId, combination, 0)\n      },\n    }\n  },\n)(Combination)\n","import { ThunkAction } from '../../helpers/types'\nimport { nextTurnThunk } from './nextTurnThunk'\nimport { SaveCombinationParams as P, saveCombination } from '../reducers/playerPoints'\nimport { resetDices } from '../reducers/dices'\nimport { unselectAllDices } from '../reducers/dicesSelected'\n\nexport type SaveCombinationThunk = (playerId: P[0], combination: P[1], points: P[2]) => ReturnType<ThunkAction>\n\nexport const saveCombinationThunk: SaveCombinationThunk = (playerId, combination, points) => (dispatch) => {\n  dispatch(nextTurnThunk())\n  dispatch(resetDices())\n  dispatch(unselectAllDices())\n  dispatch(saveCombination(playerId, combination, points))\n}\n","import React, { FC } from 'react'\nimport { Empty } from './CellContent/Empty'\nimport { Button } from './CellContent/Button'\nimport { Matched } from './CellContent/Matched'\nimport { Bonus } from './CellContent/Bonus'\nimport { i18n } from '../../../helpers/i18n'\nimport { CombinationProps } from './CombinationConnected'\nimport { renderPoints } from '../../../helpers/renderPoints'\nimport { renderBonus } from '../../../helpers/renderBonus'\n\nexport const Combination: FC<CombinationProps> = ({\n  type,\n\n  save,\n  strikeOut,\n\n  points,\n  maxPoints,\n  existingCombination,\n}) => {\n\n  switch (type) {\n    case 'matching':\n      return (\n        <Button color=\"primary\" onClick={save}>\n          {renderPoints(points, maxPoints)}\n        </Button>\n      )\n    case 'matched': {\n      return (\n        <Matched>\n          {existingCombination}\n        </Matched>\n      )\n    }\n    case 'bonus': {\n      const { bonus, isNegative } = renderBonus(existingCombination as number)\n\n      return (\n        <Bonus alt={isNegative}>\n          {bonus}\n        </Bonus>\n      )\n    }\n    case 'strike': {\n      return (\n        <Button color=\"secondary\" onClick={strikeOut}>\n          {i18n('Вычеркнуть')}\n        </Button>\n      )\n    }\n    default:\n      return (\n        <Empty />\n      )\n  }\n}\n","import { i18n } from './i18n'\nimport React from 'react'\nimport { CheckMatch } from './checkMatch'\n\ntype RenderPoints = (\n  points: ReturnType<CheckMatch>['points'],\n  maxPoints: ReturnType<CheckMatch>['maxPoints'],\n) => string | JSX.Element\n\nexport const renderPoints: RenderPoints = (points, maxPoints) =>\n  (points !== undefined) && (maxPoints !== undefined) && (points < maxPoints)\n    ? `${points} ${i18n('из макс.')} ${maxPoints}`\n    : <span>{points}</span>\n\n","import { i18n } from './i18n'\nimport { defineWorkEnding } from './defineWorkEnding'\n\nexport type RenderBonus = (existingCombination: number) => {\n  isNegative: boolean\n  bonus: string | number\n}\n\nexport const renderBonus: RenderBonus = (existingCombination) => {\n  const isNegative = Math.sign(existingCombination) === -1\n\n  return {\n    isNegative,\n    bonus: isNegative\n      ? `${i18n('еще')} ${existingCombination * -1} ${defineWorkEnding(existingCombination * -1)}`\n      : existingCombination,\n  }\n}\n\n","import React, { ComponentType } from 'react'\nimport styled from '@material-ui/styles/styled'\nimport MaterialTable from '@material-ui/core/Table'\nimport MaterialTableBody from '@material-ui/core/TableBody'\nimport MaterialTableRow from '@material-ui/core/TableRow'\nimport MaterialTableHead from '@material-ui/core/TableHead'\nimport MaterialTableFooter from '@material-ui/core/TableFooter'\nimport { Themed } from '../../../helpers/types'\n\nconst AsDiv = (Component: ComponentType) => styled((props) => (\n  <Component component=\"div\" {...props} />\n))({\n  display: 'block',\n})\n\nexport const Table = AsDiv(MaterialTable)\n\nexport const TableHead = AsDiv(MaterialTableHead)\n\nexport const TableBody = styled(AsDiv(MaterialTableBody))({})\n\nexport const TableFooter = styled(AsDiv(MaterialTableFooter))(({\n  theme: { palette: { type, grey, background: { paper } } },\n}: Themed) => ({\n  '& > div > div': {\n    borderTop: `2px solid ${type === 'dark' ? paper : grey['300']}`,\n    borderBottom: 0,\n    lineHeight: 'inherit',\n    fontSize: 'inherit',\n    fontWeight: 'bold',\n  },\n}))\n\nexport const TableRow = AsDiv(MaterialTableRow)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { Player } from '../reducers/players'\n\nexport const makePlayersSelector = () => createSelector<State, Player[], Player[]>(\n  ({ players }) => players,\n  (players) => players,\n)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { PlayerMoveState } from '../reducers/playerMove'\n\ntype R1 = PlayerMoveState['playerMove']\n\n/**\n * TODO: test how this 'make' works\n */\nexport const makePlayerMoveSelector = () => createSelector<State, R1, R1>(\n  ({ playerMove }) => playerMove,\n  (playerMove) => playerMove,\n)\n\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n'\nimport { TABLE_FIRST_COLUMN_WIDTH, TableCellStyled, TABLE_COLUMN_WIDTH } from './TablePartsStyled/TableCellStyled'\nimport { TableRow, TableHead } from './TablePartsStyled/Table'\nimport { useSelector } from 'react-redux'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { makePlayerMoveSelector } from '../../redux/selectors/makePlayerMoveSelector'\n\nexport const TableHeader: FC = () => {\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const playerMoveSelector = makePlayerMoveSelector()\n  const [activePlayerId] = useSelector(playerMoveSelector)\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCellStyled heading width={TABLE_FIRST_COLUMN_WIDTH}>\n          {i18n('Комбинации')}\n        </TableCellStyled>\n        {players.map(({ name, id }) => (\n          <TableCellStyled\n            key={id}\n            width={TABLE_COLUMN_WIDTH}\n            heading\n            centered\n            active={activePlayerId === id}\n          >\n            {name}\n          </TableCellStyled>\n        ))}\n        <TableCellStyled />\n      </TableRow>\n    </TableHead>\n  )\n}\n","import React, { FC } from 'react'\nimport { TABLE_COLUMN_WIDTH, TableCellStyled, TableCellStyledProps } from '../TablePartsStyled/TableCellStyled'\nimport { useSelector } from 'react-redux'\nimport { Player } from '../../../redux/reducers/players'\nimport { makePlayerMoveSelector } from '../../../redux/selectors/makePlayerMoveSelector'\n\ninterface CombinationWrapperProps extends Pick<TableCellStyledProps, 'selected'> {\n  playerId: Player['id']\n}\n\nexport const CombinationWrapper: FC<CombinationWrapperProps> = ({\n  children,\n  selected,\n  playerId,\n}) => {\n  const playerMoveSelector = makePlayerMoveSelector()\n  const [activePlayerId] = useSelector(playerMoveSelector)\n\n  return (\n    <TableCellStyled\n      selected={selected}\n      width={TABLE_COLUMN_WIDTH}\n      active={activePlayerId === playerId}\n      noPadding\n      centered\n    >\n      {children}\n    </TableCellStyled>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { PlayersState, PlayersTotals } from '../reducers/players'\nimport { PlayerPointsState } from '../reducers/playerPoints'\nimport { calcTotals } from '../../helpers/calcTotals'\n\ntype R1 = PlayersState & PlayerPointsState\n\nexport const makeGetTotalsSelector = () => createSelector<State, R1, PlayersTotals>(\n  ({ players, playerPoints }) => ({\n    players,\n    playerPoints,\n  }),\n  ({ players, playerPoints }) => calcTotals(players, playerPoints),\n)\n","import { Player, PlayersTotals } from '../redux/reducers/players'\nimport { PlayerPoints } from '../redux/reducers/playerPoints'\nimport { Combination } from '../redux/reducers/combinations'\n\ntype CalcTotals = (players: Player[], playerPoints: PlayerPoints) => PlayersTotals\n\nexport const calcTotals: CalcTotals = (players, playerPoints) => {\n  let totals: PlayersTotals = {}\n\n  players.forEach(({ id: playerId }) => {\n    const points = playerPoints[playerId] || {}\n\n    totals[playerId] = Object.keys(points).reduce((prev, key) => {\n      const curr = points[key as Combination]! // this points should exists!\n\n      if (key === Combination.BONUS && Math.sign(curr) === -1) {\n        return prev\n      }\n\n      return prev + curr\n    }, 0)\n  })\n\n  return totals\n}\n","import React, { FC } from 'react'\nimport { TABLE_COLUMN_WIDTH, TABLE_FIRST_COLUMN_WIDTH, TableCellStyled } from './TablePartsStyled/TableCellStyled'\nimport { i18n } from '../../helpers/i18n'\nimport { TableRow, TableFooter as TableFoot } from './TablePartsStyled/Table'\nimport { useSelector } from 'react-redux'\nimport { makeGetTotalsSelector } from '../../redux/selectors/makeGetTotalsSelector'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { makePlayerMoveSelector } from '../../redux/selectors/makePlayerMoveSelector'\n\nexport const TableFooter: FC = () => {\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const getTotalsSelector = makeGetTotalsSelector()\n  const totals = useSelector(getTotalsSelector)\n  const playerMoveSelector = makePlayerMoveSelector()\n  const [activePlayerId] = useSelector(playerMoveSelector)\n\n  return (\n    <TableFoot>\n      <TableRow>\n        <TableCellStyled width={TABLE_FIRST_COLUMN_WIDTH}>\n          {i18n('Итог')}\n        </TableCellStyled>\n        {players.map(({ id: playerId }) => (\n          <TableCellStyled\n            key={playerId}\n            width={TABLE_COLUMN_WIDTH}\n            centered\n            active={activePlayerId === playerId}\n            noPadding\n          >\n            {totals[playerId]}\n          </TableCellStyled>\n        ))}\n        <TableCellStyled />\n      </TableRow>\n    </TableFoot>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { CombinationInfo } from '../reducers/combinations'\n\nexport const combinationsSelector = createSelector<State, CombinationInfo[], CombinationInfo[]>(\n  ({ combinations }) => combinations,\n  (combinations) => combinations,\n)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { TableSizes } from '../reducers/tableSize'\n\nexport const tableSizeSelector = createSelector<State, TableSizes, TableSizes>(\n  ({ tableSize }) => tableSize,\n  (tableSize) => tableSize,\n)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { isMoveAvailable } from '../../helpers/isMoveAvailable'\nimport { CombinationsState } from '../reducers/combinations'\nimport { DicesState } from '../reducers/dices'\nimport { PlayerPointsState } from '../reducers/playerPoints'\nimport { MAX_SHOT_COUNT, PlayerMoveState } from '../reducers/playerMove'\n\nexport interface R1 extends CombinationsState, DicesState, PlayerPointsState, PlayerMoveState {\n}\n\nexport const isMoveAvailableSelector = createSelector<State, R1, boolean>(\n  ({ combinations, dices, playerPoints, playerMove }) => ({\n    combinations,\n    dices,\n    playerPoints,\n    playerMove,\n  }),\n  ({ combinations, dices, playerPoints, playerMove: [activePlayerId, shot] }) =>\n    isMoveAvailable(\n      combinations,\n      dices,\n      playerPoints,\n      activePlayerId,\n      shot === MAX_SHOT_COUNT,\n    ),\n)\n","// import { checkMatch, prepareCombination as pc } from './index'\nimport { Combination, CombinationInfo } from '../redux/reducers/combinations'\nimport { checkMatch } from './checkMatch'\nimport { Dices } from '../redux/reducers/dices'\nimport { PlayerPoints } from '../redux/reducers/playerPoints'\n\ntype IsMoveAvailable = (\n  combinations: CombinationInfo[],\n  dices: Dices,\n  playerPoints: PlayerPoints,\n  activePlayerId: string,\n  noMoreShots: boolean,\n) => boolean\n\n/**\n * Return true if player have available moves\n */\nexport const isMoveAvailable: IsMoveAvailable = (\n  combinations,\n  dices,\n  playerPoints,\n  activePlayerId,\n  noMoreShots,\n) => {\n  const player = playerPoints[activePlayerId]\n\n  let matchesCount = 0\n  let noMoves = false\n\n  combinations.forEach(({ combination }) => {\n    const { points } = checkMatch(combination, dices)\n    const isInPlayerPoints = combination !== Combination.BONUS && player && !!player[combination]\n\n    /**\n     * Combination matched AND player hasn't this combination\n     */\n    if (points !== undefined && !isInPlayerPoints) {\n      matchesCount = matchesCount + 1\n    }\n\n    /**\n     * If no matches, no more shots and player already have this combination\n     */\n    if (points === undefined && noMoreShots) {\n      noMoves = true\n    }\n  })\n\n  return !(matchesCount === 0 && noMoves)\n}\n","import React, { FC } from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { TABLE_FIRST_COLUMN_WIDTH, TableCellStyled } from './TablePartsStyled/TableCellStyled'\nimport { CombinationConnected } from './Combination/CombinationConnected'\nimport { Combination, isBonus } from '../../redux/reducers/combinations'\nimport { Table, TableBody, TableRow } from './TablePartsStyled/Table'\nimport { TableHeader } from './TableHeader'\nimport { CombinationWrapper } from './Combination/CombinationWrapper'\nimport { TableFooter } from './TableFooter'\nimport { useSelector } from 'react-redux'\nimport { combinationsSelector } from '../../redux/selectors/combinationsSelector'\nimport { tableSizeSelector } from '../../redux/selectors/tableSizeSelector'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { isMoveAvailableSelector } from '../../redux/selectors/noMovesSelector'\n\nexport const CombinationsContainer: FC = () => {\n  const combinations = useSelector(combinationsSelector)\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const tableSize = useSelector(tableSizeSelector)\n  const isMoveAvailable = useSelector(isMoveAvailableSelector)\n\n  // console.log({\n  //   isMoveAvailable,\n  // })\n\n  return (\n    <Table size={tableSize}>\n      <TableHeader />\n      <TableBody>\n        {combinations.map(({ name, title, combination }) => (\n          <TableRow key={name}>\n            <TableCellStyled\n              selected={combination === Combination.BONUS}\n              width={TABLE_FIRST_COLUMN_WIDTH}\n            >\n              <Tooltip title={title} placement=\"top-start\" enterDelay={300}>\n                <span>{name}</span>\n              </Tooltip>\n            </TableCellStyled>\n            {players.map(({ id: playerId }) => (\n              <CombinationWrapper\n                key={playerId}\n                selected={isBonus(combination)}\n                playerId={playerId}\n              >\n                <CombinationConnected\n                  playerId={playerId}\n                  combination={combination}\n                  isMoveAvailable={isMoveAvailable}\n                />\n              </CombinationWrapper>\n            ))}\n            <TableCellStyled selected={isBonus(combination)} />\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter />\n    </Table>\n  )\n}\n","import React, { FC } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles<Theme>(({\n  spacing,\n  palette: { background: { paper } },\n}) => ({\n  paper: {\n    padding: spacing(2),\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n    border: `1px solid ${paper}`,\n  },\n  root: {\n    background: 'rgba(0, 0, 0, .7)',\n  },\n}))\n\nexport const DialogStyled: FC = ({ children }) => {\n  const { paper, root } = useStyles()\n\n  return (\n    <Dialog open classes={{ root, paper }}>\n      {children}\n    </Dialog>\n  )\n}\n","import styled from '@material-ui/styles/styled'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nexport const DialogContentStyled = styled(DialogContent)({\n  padding: 0,\n  marginBottom: 1,\n  display: 'flex',\n})\n","import styled from '@material-ui/styles/styled'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogTitleStyled = styled(DialogTitle)(({\n  theme: { shape: { borderRadius }, palette: { text: { hint }, background: { paper } } },\n}: Themed) => ({\n  textAlign: 'center',\n  color: hint,\n  backgroundColor: paper,\n  marginBottom: 1,\n  borderTopRightRadius: borderRadius,\n  borderTopLeftRadius: borderRadius,\n}))\n","import styled from '@material-ui/styles/styled'\nimport DialogActions from '@material-ui/core/DialogActions'\n\nexport const DialogActionsStyled = styled(DialogActions)({\n  justifyContent: 'space-around',\n})\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogContentColumn = styled('div')(({\n  theme: { spacing },\n}: Themed) => ({\n  flex: 1,\n  textAlign: 'center',\n  minWidth: spacing(20),\n\n  marginLeft: 1,\n  '&:first-child': {\n    marginLeft: 0,\n  },\n}))\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogContentNameRow = styled('div')(({\n  theme: {\n    spacing,\n    typography: { h6 },\n    palette: { background: { paper } },\n  },\n}: Themed) => ({\n  ...h6,\n  padding: spacing(2),\n  backgroundColor: paper,\n  marginBottom: 1,\n}))\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogContentTotalRow = styled('div')(({\n  theme: {\n    spacing, typography: { h2 }, palette: { background: { paper } },\n  },\n}: Themed) => ({\n  ...h2,\n  padding: `${spacing(2)}px 0`,\n  backgroundColor: paper,\n}))\n","import React, { FC } from 'react'\nimport { DialogContentColumn } from './parts/DialogContentColumn'\nimport { DialogContentNameRow } from './parts/DialogContentNameRow'\nimport { DialogContentTotalRow } from './parts/DialogContentTotalRow'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { useSelector } from 'react-redux'\nimport { makeGetTotalsSelector } from '../../redux/selectors/makeGetTotalsSelector'\n\nexport const EndOfGameStats: FC = () => {\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const getTotalsSelector = makeGetTotalsSelector()\n  const totals = useSelector(getTotalsSelector)\n\n  return (\n    <>\n      {players.map(({ id, name }) => (\n        <DialogContentColumn key={id}>\n          <DialogContentNameRow>\n            {name}\n          </DialogContentNameRow>\n          <DialogContentTotalRow>\n            {totals[id]}\n          </DialogContentTotalRow>\n        </DialogContentColumn>\n      ))}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { i18n } from '../../../helpers/i18n'\nimport { useDispatch } from 'react-redux'\nimport { ThunkAction2 } from '../../../helpers/types'\nimport { restartGameThunk } from '../../../redux/actions/restartGameThunk'\nimport HomeIcon from '@material-ui/icons/Home'\n\nexport const GoHomeButton: FC = () => {\n  const dispatch = useDispatch<ThunkAction2>()\n  const onClick = () => dispatch(restartGameThunk())\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      startIcon={<HomeIcon />}\n      onClick={onClick}\n    >\n      {i18n('На главную')}\n    </Button>\n  )\n}\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogTipStyled = styled('div')(({\n  theme: {\n    shape: { borderRadius }, spacing, typography: { subtitle2 },\n    palette: { background: { paper }, text: { hint } },\n  },\n}: Themed) => ({\n  ...subtitle2,\n  color: hint,\n  textAlign: 'center',\n  padding: spacing(1, 5),\n  borderBottomLeftRadius: borderRadius,\n  borderBottomRightRadius: borderRadius,\n  backgroundColor: paper,\n  marginBottom: spacing(2),\n}))\n","import { connect } from 'react-redux'\n\nimport { EndOfGame } from './EndOfGame'\nimport { State } from '../../redux/defaultState'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../helpers/visibilityHOC'\nimport { CombinationsState } from '../../redux/reducers/combinations'\nimport { PlayerPointsState } from '../../redux/reducers/playerPoints'\n\ninterface MapStateToProps extends CombinationsState, PlayerPointsState {\n}\n\nexport interface EndOfGameProps {\n}\n\nexport const EndOfGameConnected = compose(\n  connect<MapStateToProps, {}, {}, EndOfGameProps & VisibilityHOCProps, State>(\n    ({ combinations, playerPoints }) => ({\n      combinations,\n      playerPoints,\n    }),\n    null,\n    ({ combinations, playerPoints }) => ({\n      // OH fcuk, this is cool\n      hidden: !(\n        Object.keys(combinations).length === Object.keys(\n          playerPoints[Object.keys(playerPoints)[Object.keys(playerPoints).length - 1]] || {},\n        ).length\n      ),\n    }),\n  ),\n  visibilityHOC,\n)(EndOfGame)\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n'\nimport { DialogStyled } from './parts/DialogStyled'\nimport { DialogContentStyled } from './parts/DialogContentStyled'\nimport { DialogTitleStyled } from './parts/DialogTitleStyled'\nimport { DialogActionsStyled } from './parts/DialogActionsStyled'\nimport { EndOfGameStats } from './EndOfGameStats'\nimport { GoHomeButton } from './parts/GoHomeButton'\nimport { MAX_POSSIBLE_POINTS } from '../../redux/reducers/combinations'\nimport { DialogTipStyled } from './parts/DialogTipStyled'\n\nexport const EndOfGame: FC = () => (\n  <DialogStyled>\n    <DialogTitleStyled>\n      {i18n('Игра окончена')}\n    </DialogTitleStyled>\n    <DialogContentStyled>\n      <EndOfGameStats />\n    </DialogContentStyled>\n    <DialogTipStyled>\n      {i18n('Максимально возможное количество очков')}: {MAX_POSSIBLE_POINTS}\n    </DialogTipStyled>\n    <DialogActionsStyled>\n      <GoHomeButton />\n    </DialogActionsStyled>\n  </DialogStyled>\n)\n","import { connect } from 'react-redux';\n\nimport { App } from './App';\nimport { State } from '../../redux/defaultState'\nimport { GamePhaseState } from '../../redux/reducers/gamePhase'\n\ninterface MapStateToProps extends GamePhaseState {\n}\n\nexport interface AppProps extends MapStateToProps {\n}\n\nexport const AppConnected = connect(\n  ({ gamePhase }: State): MapStateToProps => ({\n    gamePhase,\n  }),\n  null,\n  ({ gamePhase }: MapStateToProps): AppProps => ({\n    gamePhase,\n  }),\n)(App)\n","import React, { FC } from 'react'\nimport { AppProps } from './AppConnected'\nimport { MainLayout } from '../MainLayout/MainLayout'\nimport { GamePhases } from '../../redux/reducers/gamePhase'\nimport { StartGameButtonConnected } from '../StartGameButton/StartGameButtonConnected'\nimport { PlayersSelection } from '../PlayersSelection/PlayersSelection'\nimport { DicesConnected } from '../Dices/DicesConnected'\nimport { DicesActions } from '../DicesActions/DicesActions'\nimport { Rules } from '../Rules/Rules'\nimport { StartGameButtonWrapper } from '../StartGameButton/StartGameButtonWrapper'\nimport { CombinationsContainer } from '../CombinationsContainer/CombinationsContainer'\nimport { EndOfGameConnected } from '../EndOfGame/EndOfGameConnected'\n\nexport const App: FC<AppProps> = ({ gamePhase }) => (\n  <MainLayout>\n    {{\n      [GamePhases.PRE_GAME]: (\n        <>\n          <StartGameButtonWrapper>\n            <StartGameButtonConnected />\n          </StartGameButtonWrapper>\n          <Rules />\n        </>\n      ),\n      [GamePhases.PLAYERS_SELECTION]: (\n        <PlayersSelection />\n      ),\n      [GamePhases.IN_PLAY]: (\n        <>\n          <EndOfGameConnected />\n          <DicesConnected />\n          <DicesActions />\n          <CombinationsContainer />\n        </>\n      ),\n    }[gamePhase]}\n  </MainLayout>\n)\n","import 'typeface-roboto'\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { store } from './redux/createStore'\nimport { AppConnected } from './components/App/AppConnected'\nimport { themeProviderHOC } from './helpers/themeProviderHOC'\n\nconst App = themeProviderHOC(AppConnected)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}