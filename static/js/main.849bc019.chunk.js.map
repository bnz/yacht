{"version":3,"sources":["serviceWorker.ts","redux/reducers/gamePhase.tsx","redux/reducers/players.tsx","redux/reducers/dices.tsx","redux/reducers/dicesSelected.tsx","redux/reducers/loading.tsx","helpers/getItem.tsx","redux/reducers/diceSize.tsx","redux/reducers/language.tsx","redux/reducers/combinations.tsx","helpers/i18n/i18n.tsx","helpers/i18n/rus.tsx","helpers/i18n/eng.tsx","redux/reducers/playerMove.tsx","redux/reducers/tableSize.tsx","redux/reducers/drawerOpened.tsx","redux/reducers/playerPoints.tsx","helpers/calcBonus.tsx","redux/getStateFromStorage.tsx","redux/defaultState.tsx","helpers/toString.tsx","helpers/setItem.tsx","redux/createStore.tsx","redux/subscriptions.tsx","helpers/themeProviderHOC.tsx","components/Drawer/DrawerStyled.tsx","components/MainLayout/MainLayoutParts.tsx","helpers/replaceKeysInObject.tsx","helpers/getType.tsx","helpers/conditionalCSS.tsx","components/TopMenu/Heading.tsx","components/TopMenu/AppBarStyled.tsx","components/TopMenu/MenuButton/MenuButton.tsx","components/TopMenu/MenuButton/MenuButtonConnected.tsx","components/TopMenu/TopMenu.tsx","components/Drawer/RestartGameButton/DialogContentStyled.tsx","components/Drawer/RestartGameButton/WarningIconStyled.tsx","components/Drawer/DrawerListItemStyled.tsx","components/Drawer/DrawerListItem.tsx","components/Drawer/DrawerListDivider.tsx","redux/actions/restartGameThunk.tsx","helpers/visibilityHOC.tsx","components/Drawer/RestartGameButton/RestartGameButtonConnected.tsx","components/Drawer/RestartGameButton/RestartGameButton.tsx","components/Drawer/ChangeTableSizeButton/ChangeTableSizeButtonConnected.tsx","components/Drawer/ChangeTableSizeButton/ChangeTableSizeButton.tsx","components/Drawer/ThemeToggler.tsx","components/Drawer/DiceSizeChanger/ButtonGroup.tsx","components/Drawer/DiceSizeChanger/DiceSizeChangerConnected.tsx","components/Drawer/DiceSizeChanger/DiceSizeChanger.tsx","redux/actions/changeLanguageThunk.tsx","components/Drawer/LangChangeButtons/LangChangeButtons.tsx","redux/selectors/makeLanguageSelector.tsx","components/Drawer/DrawerConnected.tsx","components/Drawer/Drawer.tsx","components/MainLayout/MainLayoutConnected.tsx","components/MainLayout/useGlobalStyles.tsx","components/MainLayout/MainLayout.tsx","components/StartGameButton/StartGameButtonConnected.tsx","components/PlayersSelection/Buttons/ButtonsWrapper.tsx","components/PlayersSelection/Buttons/CancelStartGameButtonConnected.tsx","redux/actions/nextTurnThunk.tsx","components/PlayersSelection/Buttons/StartGameButtonConnected.tsx","components/PlayersSelection/PlayersList/PlayersListPaper.tsx","components/PlayersSelection/PlayersList/PlayersListConnected.tsx","components/PlayersSelection/PlayersList/PlayersList.tsx","components/PlayersSelection/AddPlayer/DialogContentStyled.tsx","components/PlayersSelection/AddPlayer/AddPlayerConnected.tsx","helpers/makeId.tsx","components/PlayersSelection/AddPlayer/AddPlayer.tsx","components/PlayersSelection/Buttons/ResetToDefaultPlayersButtonConnected.tsx","components/PlayersSelection/PlayersSelection.tsx","components/Dices/Dice/DiceInner.tsx","components/Dices/Dice/DiceDot.tsx","components/Dices/Dice/DiceWrapper.tsx","components/Dices/Dice/Dice.tsx","components/Dices/DicesWrapper/DicesWrapper.tsx","components/Dices/DicesConnected.tsx","components/Dices/Dices.tsx","components/DicesActions/RollDiceButton/RollDiceButtonStyled.tsx","components/DicesActions/RollDiceButton/CasinoIconStyled.tsx","components/DicesActions/RollDiceButton/RollDiceButtonTip.tsx","components/DicesActions/RollDiceButton/RollDiceButton.tsx","helpers/random.tsx","components/DicesActions/RollDiceButton/RollDiceButtonConnected.tsx","redux/actions/generateRandomDicesThunk.tsx","components/DicesActions/ResetDicesButton/ResetDicesButtonConnected.tsx","components/DicesActions/ResetDicesButton/ResetDicesButton.tsx","components/DicesActions/DicesActionsWrapper.tsx","components/DicesActions/DicesActions.tsx","components/Rules/Heading.tsx","components/Rules/Paragraph.tsx","components/Rules/TableCellNoWrap.tsx","components/Rules/Rules.tsx","components/StartGameButton/StartGameButtonWrapper.tsx","components/CombinationsContainer/TablePartsStyled/TableCellStyled.tsx","helpers/checkMatch.tsx","helpers/uniq.tsx","helpers/css.tsx","components/CombinationsContainer/Combination/CellContent/Empty.tsx","components/CombinationsContainer/Combination/CellContent/Button.tsx","components/CombinationsContainer/Combination/CellContent/Matched.tsx","components/CombinationsContainer/Combination/CellContent/Bonus.tsx","helpers/renderPoints.tsx","helpers/inArray.tsx","helpers/defineWorkEnding.tsx","components/CombinationsContainer/Combination/CombinationConnected.tsx","redux/actions/saveCombinationThunk.tsx","components/CombinationsContainer/Combination/Combination.tsx","helpers/renderBonus.tsx","components/CombinationsContainer/TablePartsStyled/Table.tsx","redux/selectors/makePlayersSelector.tsx","redux/selectors/makePlayerMoveSelector.tsx","components/CombinationsContainer/TableHeader.tsx","components/CombinationsContainer/Combination/CombinationWrapper.tsx","redux/selectors/makeGetTotalsSelector.tsx","helpers/calcTotals.tsx","components/CombinationsContainer/TableFooter.tsx","redux/selectors/combinationsSelector.tsx","redux/selectors/tableSizeSelector.tsx","redux/selectors/noMovesSelector.tsx","helpers/isMoveAvailable.tsx","components/CombinationsContainer/CombinationsContainer.tsx","components/EndOfGame/parts/DialogStyled.tsx","components/EndOfGame/parts/DialogContentStyled.tsx","components/EndOfGame/parts/DialogTitleStyled.tsx","components/EndOfGame/parts/DialogActionsStyled.tsx","components/EndOfGame/parts/DialogContentColumn.tsx","components/EndOfGame/parts/DialogContentNameRow.tsx","components/EndOfGame/parts/DialogContentTotalRow.tsx","components/EndOfGame/EndOfGameStats.tsx","components/EndOfGame/parts/GoHomeButton.tsx","components/EndOfGame/parts/DialogTipStyled.tsx","components/EndOfGame/EndOfGameConnected.tsx","components/EndOfGame/EndOfGame.tsx","index.tsx","components/App/App.tsx","redux/selectors/makeGamePhaseSelector.tsx"],"names":["Boolean","window","location","hostname","match","GamePhases","Constants","gamePhaseDefaultState","gamePhase","PRE_GAME","changeGamePhase","type","CHANGE_GAME_PHASE","entry","playersDefaultState","id","name","dicesDefaultState","resetDices","RESET_DICES","dicesSelectedDefaultState","unselectAllDices","UNSELECT_ALL_DICES","getItem","key","parse","item","localStorage","JSON","Combination","lang","languagesMap","rus","yacht","darkTheme","language","compactTable","diceSize","playerNo","currentGameWillBeLost","combinations","total","gameOver","maximumPossibleNumberOfPoints","ofMax","more","points1","points2","points3","points4","eng","i18n","res","undefined","isBonus","combination","BONUS","combinationsDefaultState","title","ONE","max","TWO","THREE","FOUR","FIVE","SIX","EQUAL_3","EQUAL_4","SMALL_STRAIGHT","BIG_STRAIGHT","TWO_PAIR","FULL_HOUSE","THE_YACHT","CHANCE","MAX_POSSIBLE_POINTS","reduce","prev","curr","TableSizes","playerMoveDefaultState","tableSizeDefaultState","MEDIUM","calcBonus","state","playerId","bonus","Object","keys","isNaN","parseInt","playerPointsDefaultState","players","dices","dicesSelected","loading","playerMove","tableSize","drawerOpened","playerPoints","e","console","error","defaultState","toString","obj","stringify","toJSON","setItem","value","middleware","thunk","reducers","combineReducers","ADD_PLAYER","update","$push","REMOVE_PLAYER","$splice","findIndex","RESET_PLAYERS","GENERATE_RANDOM_DICES","UPDATE_DICES","SELECT_DICE","diceIndex","index","indexOf","length","SET_LOADING","INCREASE_DICE_SIZE","DECREASE_DICE_SIZE","INCREASE_SHOT","shot","NEXT_TURN","RESET_PLAYER_MOVE","TOGGLE_TABLE_SIZE","TOGGLE_DRAWER_OPENED","SAVE_COMBINATION","points","$merge","$set","RESET_PLAYER_POINTS","CHANGE_LANGUAGE","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","subscribe","getState","subscriptions","Component","ThemeContext","createContext","useStyles","makeStyles","spacing","toolbar","mixins","transitions","create","easing","duration","createStyles","drawerHeader","drawer","width","paper","overflowX","paperClose","borderRight","drawerOpen","transition","sharp","enteringScreen","drawerClose","leavingScreen","DrawerStyled","open","onClose","children","className","cx","classes","variant","Divider","List","Wrapper","styled","props","theme","minHeight","marginBottom","marginLeft","Push","height","Footer","display","alignItems","padding","Inner","replaceKeysInObject","what","withWhat","modifyValue","resObject","map","call","getType","maxWidth","conditionalCSS","params","returnObject","forEach","param","Array","isArray","condition","css","Heading","Typography","component","palette","color","AppBarStyled","AppBar","zIndex","MenuButton","IconButton","edge","fontSize","common","black","white","marginRight","MenuButtonConnected","connect","toggleDrawerOpened","flag","onClick","TopMenu","Toolbar","DialogContentStyled","DialogContent","minWidth","justifyContent","WarningIconStyled","WarningIcon","yellow","A700","DrawerListItemStyled","ListItem","whiteSpace","DrawerListItem","icon","button","ListItemIcon","ListItemText","primary","DrawerListDivider","top","bottom","restProps","marginTop","restartGameThunk","dispatch","visibilityHOC","hidden","RestartGameButtonConnected","restartGameAction","IN_PLAY","useState","setOpen","closeModal","style","Dialog","DialogTitle","DialogActions","Button","ChangeTableSizeButtonConnected","toggleSize","SMALL","onChange","Checkbox","checked","ThemeToggler","Consumer","toggleTheme","Switch","ButtonGroup","size","def","background","default","backgroundColor","DiceSizeChangerConnected","increaseDiceSize","decreaseDiceSize","disabled","changeLanguageThunk","changeLanguage","LangChangeButtons","languageSelector","createSelector","useSelector","useDispatch","DrawerConnected","drawerOpenedConnector","_","LayoutWrapper","LayoutFooter","useGlobalStyles","grey","margin","boxSizing","MainLayout","CssBaseline","StartGameButtonConnected","PLAYERS_SELECTION","ButtonsWrapper","CancelStartGameButtonConnected","startIcon","nextTurnThunk","move","player","PlayersListPaper","Paper","PlayersListConnected","removePlayer","ListItemAvatar","Avatar","ListItemSecondaryAction","paddingTop","paddingBottom","AddPlayerConnected","addPlayer","replace","c","r","Math","random","setDisabled","inputValue","setInputValue","onSubmit","preventDefault","trim","Input","fullWidth","autoFocus","currentTarget","ResetToDefaultPlayersButtonConnected","resetPlayers","equal","PlayersSelection","DiceInner","roll","selected","rest","flexWrap","borderRadius","transitionDuration","$delay","transform","boxShadow","DiceDot","filled","$wrapWidth","transitionProperty","DiceWrapper","flexGrow","dots","1","2","3","4","5","6","array9","Dice","i","DicesWrapper","DicesConnected","selectDice","dice","RollDiceButtonStyled","Fab","CasinoIconStyled","CasinoIcon","RollDiceButtonTip","textTransform","red","A100","fontWeight","delay","timer","rand","min","floor","RollDiceButtonConnected","generateRandomDices","randDices","setLoading","shuffleUp","d","Date","now","setTimeout","onMouseUp","onMouseDown","clearTimeout","onMouseLeave","ResetDicesButtonConnected","DicesActionsWrapper","DicesActions","useTheme","Paragraph","paragraph","TableCellNoWrap","TableCell","Rules","Table","TableBody","TableRow","StartGameButtonWrapper","TableCellStyled","heading","noPadding","centered","active","activeColor","textAlign","position","borderLeft","borderTopRightRadius","borderTopLeftRadius","resultsMap","maxPoints","checkMatch","combinationType","a","sequence","values","sort","seq","Set","seqString","matches","filter","count","split","counts","x","number","successResult","seqCopy","shift","pop","b","sorted","iU","stretch","right","left","align","vertical","horizontal","Empty","content","Matched","Bonus","alt","fontStyle","Tip","inArray","arr","defineWorkEnding","n","calculated","calc","CombinationConnected","activePlayerId","existingCombination","saveCombinationThunk","saveCombination","isMoveAvailable","_isBonus","matched","matching","strike","save","strikeOut","renderPoints","isNegative","sign","renderBonus","AsDiv","MaterialTable","TableHead","MaterialTableHead","MaterialTableBody","TableFooter","MaterialTableFooter","borderTop","borderBottom","lineHeight","MaterialTableRow","makePlayersSelector","makePlayerMoveSelector","TableHeader","playersSelector","playerMoveSelector","CombinationWrapper","makeGetTotalsSelector","totals","calcTotals","getTotalsSelector","combinationsSelector","tableSizeSelector","isMoveAvailableSelector","noMoreShots","matchesCount","noMoves","isInPlayerPoints","CombinationsContainer","Tooltip","placement","enterDelay","border","root","DialogStyled","DialogTitleStyled","shape","text","hint","DialogActionsStyled","DialogContentColumn","flex","DialogContentNameRow","h6","typography","DialogContentTotalRow","h2","EndOfGameStats","GoHomeButton","DialogTipStyled","subtitle2","borderBottomLeftRadius","borderBottomRightRadius","EndOfGameConnected","AppWithProvider","gamePhaseSelector","setTheme","myTheme","createMuiTheme","overrides","MuiAppBar","colorPrimary","Provider","newPaletteType","document","body","ThemeProvider","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICfMC,E,2BAAAA,K,mBAAAA,E,qCAAAA,E,kBAAAA,M,KAUL,IAIFC,EAJQC,EAAwC,CACnDC,UAAWH,EAAWI,W,SAGnBH,K,uCAAAA,M,KAYE,ICAFA,EDAQI,EAAmC,SAACF,GAAD,MAAgB,CAC9DG,KAAML,EAAUM,kBAChBC,MAAO,CACLL,e,iBCdSM,EAAgC,CAC3C,CACEC,GAAI,uCACJC,KAAM,kCAER,CACED,GAAI,uCACJC,KAAM,gD,SAILV,K,wBAAAA,E,8BAAAA,E,+BAAAA,M,KAUE,IC5BFA,E,kBAAAA,K,8CAAAA,E,4BAAAA,E,2BAAAA,M,KAQE,ICVFA,EDUQW,EAA2B,EAAE,GAAI,GAAI,GAAI,GAAI,GAW7CC,EAAyB,iBAAO,CAC3CP,KAAML,EAAUa,YAChBN,MAAO,M,SCvBJP,K,0BAAAA,E,yCAAAA,M,KAOE,ICPFA,EDOQc,EAAmC,GAWnCC,EAAqC,iBAAO,CACvDV,KAAML,EAAUgB,qBEvBLC,EAAU,SAACC,GAA8C,IAAlBC,IAAiB,yDAC7DC,EAAOC,aAAaJ,QAAQC,GAElC,OAAOC,EAAQG,KAAKH,MAAMC,GAASA,I,SDChCpB,K,2BAAAA,M,KAME,IEFFA,G,SAAAA,K,wCAAAA,E,yCAAAA,M,KAOE,ICXFA,G,SAAAA,K,mCAAAA,M,KAME,ICVKuB,ICGNC,EAAiBP,EAAQ,aFOe,MEExCQ,EAA6B,CACjCC,IChB8B,CAC9BC,MAAO,2BACPC,UAAW,gEACXC,SAAU,2BACVC,aAAc,0GACdC,SAAU,4EACVC,SAAU,wCACVC,sBAAuB,iJACvBC,aAAc,+DACdC,MAAO,2BACPC,SAAU,4EACVC,8BAA+B,wNAC/BC,MAAO,yCACPC,KAAM,qBACNC,QAAS,iCACTC,QAAS,2BACTC,QAAS,2BACTC,QAAS,iCAET,mBAAoB,gEACpB,qBAAsB,4EACtB,sBAAuB,+FACvB,gBAAiB,uCACjB,aAAc,mDACd,eAAgB,iCAChB,gBAAiB,mDACjB,mBAAoB,4EACpB,mBAAoB,wFACpB,6BAA8B,qGAC9B,gBAAiB,0DACjB,mBAAoB,+DAEpB,mBAAoB,6CACpB,yBAA0B,+LAC1B,mBAAoB,uCACpB,yBAA0B,+LAC1B,qBAAsB,uCACtB,2BAA4B,+LAC5B,oBAAqB,mDACrB,0BAA2B,+LAC3B,oBAAqB,6CACrB,0BAA2B,+LAC3B,oBAAqB,mDACrB,0BAA2B,+LAC3B,oBAAqB,iCACrB,0BAA2B,umBAE3B,2BAA4B,qBAC5B,iCAAkC,ieAClC,0BAA2B,2BAC3B,gCAAiC,qgBACjC,4BAA6B,4EAC7B,kCAAmC,4XACnC,0BAA2B,4EAC3B,gCAAiC,yTACjC,sBAAuB,8CACvB,4BAA6B,2RAC7B,wBAAyB,8CACzB,8BAA+B,qTAC/B,oBAAqB,2BACrB,0BAA2B,yXAC3B,qBAAsB,2BACtB,2BAA4B,0NAE5B,aAAc,qaACd,uBAAwB,8CACxB,qBAAsB,+pFACtB,sBAAuB,4EACvB,oBAAqB,sOACrB,kBAAmB,mFACnB,sBAAuB,wmBACvB,qBAAsB,8EDtDtBC,IEjB8B,CAC9BjB,MAAO,QACPC,UAAW,aACXC,SAAU,WACVC,aAAc,gBACdC,SAAU,YACVC,SAAU,WACVC,sBAAuB,6BACvBC,aAAc,eACdC,MAAO,QACPC,SAAU,YACVC,8BAA+B,oCAC/BC,MAAO,SACPC,KAAM,GACNC,QAAS,cACTC,QAAS,cACTC,QAAS,cACTC,QAAS,cAET,mBAAoB,aACpB,qBAAsB,eACtB,sBAAuB,iBACvB,gBAAiB,SACjB,aAAc,MACd,eAAgB,QAChB,gBAAiB,QACjB,mBAAoB,aACpB,mBAAoB,aACpB,6BAA8B,yBAC9B,gBAAiB,UACjB,mBAAoB,aAEpB,mBAAoB,OACpB,yBAA0B,oCAC1B,mBAAoB,OACpB,yBAA0B,oCAC1B,qBAAsB,SACtB,2BAA4B,oCAC5B,oBAAqB,QACrB,0BAA2B,oCAC3B,oBAAqB,QACrB,0BAA2B,oCAC3B,oBAAqB,QACrB,0BAA2B,oCAC3B,oBAAqB,QACrB,0BAA2B,yHAE3B,2BAA4B,kBAC5B,iCAAkC,oEAClC,0BAA2B,iBAC3B,gCAAiC,mEACjC,4BAA6B,iBAC7B,kCAAmC,iEACnC,0BAA2B,eAC3B,gCAAiC,2DACjC,sBAAuB,WACvB,4BAA6B,kDAC7B,wBAAyB,aACzB,8BAA+B,oDAC/B,oBAAqB,QACrB,0BAA2B,iDAC3B,qBAAsB,SACtB,2BAA4B,mCAE5B,aAAc,0JACd,uBAAwB,WACxB,qBAAsB,ooBACtB,sBAAuB,UACvB,oBAAqB,0EACrB,kBAAmB,cACnB,sBAAuB,yHACvB,qBAAsB,mBFnDXE,EAAa,SAAC3B,GACzB,IAAM4B,EAAMrB,EAAaD,GAAMN,GAE/B,YAAY6B,IAARD,EACI,IAAN,OAAW5B,EAAX,KAGK4B,IDxBGvB,Q,KAAAA,E,aAAAA,I,aAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,aAAAA,E,cAAAA,E,+BAAAA,E,2BAAAA,E,mBAAAA,E,uBAAAA,E,qBAAAA,E,gBAAAA,E,kBAAAA,E,kBAoBL,IItBFvB,EJ4BQgD,EAAU,SAACC,GAAD,OAA8BA,IAAgB1B,EAAY2B,OAepEC,EAA8C,CACzD,CACEzC,KAAMmC,EAAK,oBACXO,MAAOP,EAAK,0BACZI,YAAa1B,EAAY8B,IACzBC,IN1CuB,EM0ClB/B,EAAY8B,KAEnB,CACE3C,KAAMmC,EAAK,oBACXO,MAAOP,EAAK,0BACZI,YAAa1B,EAAYgC,IACzBD,INhDuB,EMgDlB/B,EAAYgC,KAEnB,CACE7C,KAAMmC,EAAK,sBACXO,MAAOP,EAAK,4BACZI,YAAa1B,EAAYiC,MACzBF,INtDuB,EMsDlB/B,EAAYiC,OAEnB,CACE9C,KAAMmC,EAAK,qBACXO,MAAOP,EAAK,2BACZI,YAAa1B,EAAYkC,KACzBH,IN5DuB,EM4DlB/B,EAAYkC,MAEnB,CACE/C,KAAMmC,EAAK,qBACXO,MAAOP,EAAK,2BACZI,YAAa1B,EAAYmC,KACzBJ,INlEuB,EMkElB/B,EAAYmC,MAEnB,CACEhD,KAAMmC,EAAK,qBACXO,MAAOP,EAAK,2BACZI,YAAa1B,EAAYoC,IACzBL,INxEuB,EMwElB/B,EAAYoC,KAEnB,CACEjD,KAAMmC,EAAK,qBACXO,MAAOP,EAAK,2BACZI,YAAa1B,EAAY2B,MACzBI,IA1DwB,IA4D1B,CACE5C,KAAMmC,EAAK,4BACXO,MAAOP,EAAK,kCACZI,YAAa1B,EAAYqC,QACzBN,IAAuB,EAAlB/B,EAAYoC,KAEnB,CACEjD,KAAMmC,EAAK,2BACXO,MAAOP,EAAK,iCACZI,YAAa1B,EAAYsC,QACzBP,IAAuB,EAAlB/B,EAAYoC,KAEnB,CACEjD,KAAMmC,EAAK,6BACXO,MAAOP,EAAK,mCACZI,YAAa1B,EAAYuC,eACzBR,IAAK,IAEP,CACE5C,KAAMmC,EAAK,2BACXO,MAAOP,EAAK,iCACZI,YAAa1B,EAAYwC,aACzBT,IAAK,IAEP,CACE5C,KAAMmC,EAAK,uBACXO,MAAOP,EAAK,6BACZI,YAAa1B,EAAYyC,SACzBV,IAAK,IAEP,CACE5C,KAAMmC,EAAK,yBACXO,MAAOP,EAAK,+BACZI,YAAa1B,EAAY0C,WACzBX,IAAK,IAEP,CACE5C,KAAMmC,EAAK,qBACXO,MAAOP,EAAK,2BACZI,YAAa1B,EAAY2C,UACzBZ,IAAK,IAEP,CACE5C,KAAMmC,EAAK,sBACXO,MAAOP,EAAK,4BACZI,YAAa1B,EAAY4C,OACzBb,IAAuB,EAAlB/B,EAAYoC,MAIRS,EAAsBjB,EAAyBkB,QAC1D,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,EAAKjB,MAC5B,I,SI1IGtD,K,sBAAAA,E,8BAAAA,E,uCAAAA,M,KAYE,ICZFA,EAIOwE,EDYCC,EAAwD,CAAC,GAAI,I,SChBrEzE,K,uCAAAA,M,cAIOwE,K,gBAAAA,E,eAAAA,M,KAWL,ICTFxE,EDSQ0E,EAAqDF,EAAWG,Q,SCTxE3E,K,6CAAAA,M,KAME,ICKFA,E,QCjBQ4E,EAAY,SAACC,EAAqBC,GAC7C,IAAMC,EAAQC,OAAOC,KAAKJ,EAAMC,IAAWT,QAAO,SAACC,EAAMC,GAAP,OAEhDW,MAAMC,SAASZ,EAAM,KAAOD,EAAOA,EAAOO,EAAMC,GAAUP,KACzD,GAEH,OAAOQ,GRkBsB,GAEH,IQpBoD,GRkBjD,GQlBuCA,K,SDWjE/E,K,oCAAAA,E,2CAAAA,M,KAKE,IAAMoF,EAAyC,GEX3ClF,EAAYD,EAAsBC,UAClCmF,EAAU7E,EACV8E,EAAQ3E,EACR4E,EAAgBzE,EAChB0E,GbHiC,EaIjCzD,EXCmC,EWAnCG,EAAeiB,EACfsC,EAAahB,EACbiB,GAAYhB,EACZiB,IHR2C,EGS3CC,GAAeR,EACfvD,GVVmC,MUY9C,IACE3B,EAAYe,EAAQ,aAAa,IAAUf,EAC3CmF,EAAUpE,EAAQ,YAAcoE,EAChCC,EAAQrE,EAAQ,UAAYqE,EAC5BC,EAAgBtE,EAAQ,kBAAoBsE,EAC5CC,EAAUvE,EAAQ,YAAcuE,EAChCzD,EAAWd,EAAQ,aAAec,EAClCG,EAAejB,EAAQ,iBAAmBiB,EAC1CuD,EAAaxE,EAAQ,eAAiBwE,EACtCC,GAAYzE,EAAQ,cAAgByE,GACpCC,GAAe1E,EAAQ,iBAAmB0E,GAC1CC,GAAe3E,EAAQ,iBAAmB2E,GAC1C/D,GAAWZ,EAAQ,aAAeY,GAClC,MAAOgE,IACPC,QAAQC,MAAMF,ICRT,IAAMG,GAAsB,CACjC9F,YACAmF,UACAC,QACAC,gBACAC,UACAzD,WACAG,eACAuD,aACAC,aACAC,gBACAC,gBACA/D,aC7CWoE,GAAW,SAACC,GAAD,OACtB5E,KAAK6E,UAAUD,EAAIE,OAASF,EAAIE,SAAWF,ICChCG,GAAU,SAACnF,EAA4BoF,GAA7B,OACrBjF,aAAagF,QAAQnF,EAAKoF,ICctBC,GAAa,CAACC,KAEdC,GAA2BC,YAAuB,CACtDrB,QpBwC6D,WAAmD,IAAlDR,EAAiD,uDAAzCrE,EAAyC,yCAAlBH,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACnG,OAAQF,GACN,KAAKL,EAAU2G,WACb,OAAOC,IAAO/B,EAAO,CACnBgC,MAAO,CAACtG,KAGZ,KAAKP,EAAU8G,cACb,OAAOF,IAAO/B,EAAO,CACnBkC,QAAS,CAAC,CAAClC,EAAMmC,WAAU,qBAAGvG,KAAgBF,EAAME,MAAK,MAE7D,KAAKT,EAAUiH,cACb,OAAOzG,EACT,QACE,OAAOqE,IoBrDX3E,UrBemE,WAA+D,IAA9D2E,EAA6D,uDAArD5E,EAAsBC,UAA+B,yCAAlBG,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACrH,OAAQF,GACN,KAAKL,EAAUM,kBACb,OAAOC,EAAML,UAEf,QACE,OAAO2E,IqBpBXS,MnBasD,WAAiD,IAAhDT,EAA+C,uDAAvClE,EAAuC,yCAAlBN,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MAC1F,OAAQF,GACN,KAAKL,EAAUkH,sBACf,KAAKlH,EAAUmH,aAEb,OAAO,YAAI5G,GACb,KAAKP,EAAUa,YACb,MAAM,GAAN,OAAWF,GACb,QACE,OAAOkE,ImBrBXU,clBQsE,WAAyD,IAAxDV,EAAuD,uDAA/C/D,EAA+C,yCAAlBT,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MAClH,OAAQF,GACN,KAAKL,EAAUoH,YACb,IAAMC,EAAY9G,EAAM,GAClB+G,EAAQzC,EAAM0C,QAAQF,GAC5B,OAAe,IAAXC,EACKV,IAAO/B,EAAO,CAAEkC,QAAS,CAAC,CAACO,EAAO,MAEnB,IAAjBzC,EAAM2C,OAAe3C,EAAQ+B,IAAO/B,EAAO,CAAEgC,MAAO,CAACQ,KAE9D,KAAKrH,EAAUgB,mBACb,MAAM,GAAN,OAAWF,GACb,QACE,OAAO+D,IkBpBXW,QjBA4D,WAAmD,IAAlDX,EAAiD,iGAAlBxE,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MAClG,OAAQF,GACN,KAAKL,EAAUyH,YACb,OAAOlH,EAET,QACE,OAAOsE,IiBLX9C,SfmByD,WAAoD,IAAnD8C,EAAkD,uDAxBhE,EAwBgE,yCAAlBxE,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MAChG,OAAQF,GACN,KAAKL,EAAU0H,mBACf,KAAK1H,EAAU2H,mBACb,OAAOpH,EACT,QACE,OAAOsE,IexBX3C,absH0E,eAC1E2C,EAD0E,uDAClE1B,EADkE,OAEvE0B,GavHHY,WTe+D,WAAsD,IAArDZ,EAAoD,uDAA5CJ,EAA4C,yCAAlBpE,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACxG,OAAQF,GACN,KAAKL,EAAU4H,cAAgB,IAClB9C,EAAsBD,EAAzB,GAAgBgD,EAAShD,EAAZ,GACrB,MAAO,CAACC,EAAU+C,EAAO,GAE3B,KAAK7H,EAAU8H,UAEf,KAAK9H,EAAU+H,kBACb,OAAOxH,EACT,QACE,OAAOsE,ISzBXa,UREkF,WAAqD,IAApDb,EAAmD,uDAA3CH,EAA2C,yCAAlBrE,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MAC1H,OAAQF,GACN,KAAKL,EAAUgI,kBACb,OAAOzH,EAET,QACE,OAAOsE,IQPXc,aPL2E,WAAwD,IAAvDd,EAAsD,iGAAlBxE,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACtH,OAAQF,GACN,KAAKL,EAAUiI,qBACb,OAAO1H,EAET,QACE,OAAOsE,IOAXe,aN0BwE,WAGpE,IAFJf,EAEG,uDAFKO,EAEL,yCADD/E,EACC,EADDA,KAAME,EACL,EADKA,MAER,OAAQF,GACN,KAAKL,EAAUkI,iBAAf,IACUpD,EAAkCvE,EAAlCuE,SAAU7B,EAAwB1C,EAAxB0C,YAAakF,EAAW5H,EAAX4H,OAgB/B,OAdAtD,EAAQ+B,IAAO/B,EAAOA,EAAMC,GAAN,eACnBA,EAAW,CACVsD,OAAO,eACJnF,EAAckF,KAGjB,CACFC,OAAO,eACJtD,EADG,eAED7B,EAAckF,MAKdvB,IAAO/B,EAAD,eACVC,EADU,eAERvD,EAAY2B,MAAQ,CACnBmF,KAAMzD,EAAUC,EAAOC,OAI/B,KAAK9E,EAAUsI,oBACb,OAAO1B,IAAOxB,EAA0B,IAC1C,QACE,OAAOP,IMzDXhD,SdP+D,WAAoD,IAAnDgD,EAAkD,uDATtE,MASsE,yCAAlBxE,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACtG,OAAQF,GACN,KAAKL,EAAUuI,gBACb,OAAOhI,EAET,QACE,OAAOsE,McYP2D,IAFmB7I,OAAO8I,sCAAwCC,KAGtEC,IAAe,WAAf,EAAmBpC,KAGRqC,GAAsBC,YAAYpC,GAAUT,GAAcwC,KCvC3B,SAAC,GAAD,IAAGM,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAeD,GAAU,WAAO,IAAD,EAGnFC,IADF7I,EAFqF,EAErFA,UAAWmF,EAF0E,EAE1EA,QAASC,EAFiE,EAEjEA,MAAOC,EAF0D,EAE1DA,cAAexD,EAF2C,EAE3CA,SAAU0D,EAFiC,EAEjCA,WAAYC,EAFqB,EAErBA,UAAWC,EAFU,EAEVA,aAAcC,EAFJ,EAEIA,aAAc/D,EAFlB,EAEkBA,SAGzGwE,GAAQ,YAAanG,GACrBmG,GAAQ,UAAWJ,GAASZ,IAC5BgB,GAAQ,QAASJ,GAASX,IAC1Be,GAAQ,gBAAiBJ,GAASV,IAClCc,GAAQ,WAAYJ,GAASlE,IAC7BsE,GAAQ,aAAcJ,GAASR,IAC/BY,GAAQ,YAAaJ,GAASP,IAC9BW,GAAQ,eAAgBJ,GAASN,IACjCU,GAAQ,eAAgBJ,GAASL,IACjCS,GAAQ,WAAYJ,GAASpE,OD2B/BmH,CAAcJ,I,OE7BmBK,G,2DAFpBC,GAAeC,wBAAqC,I,uHCN3DC,GAAYC,MAAW,gBAC3BC,EAD2B,EAC3BA,QACUC,EAFiB,EAE3BC,OAAUD,QAFiB,IAG3BE,YAAeC,EAHY,EAGZA,OAAQC,EAHI,EAGJA,OAAQC,EAHJ,EAGIA,SAHJ,OAIhBC,KAAa,CACxBC,aAAa,gBACRP,GAELQ,OAAQ,CACNC,MAAOV,EAXiB,KAa1BW,MAAO,CACLC,UAAW,UAEbC,WAAY,CACVC,YAAa,GAEfC,WAAY,CACVL,MAAOV,EApBiB,IAqBxBgB,WAAYZ,EAAO,QAAS,CAC1BC,OAAQA,EAAOY,MACfX,SAAUA,EAASY,kBAGvBC,YAAa,CACXT,MAAO,EACPE,UAAW,SACXI,WAAYZ,EAAO,QAAS,CAC1BC,OAAQA,EAAOY,MACfX,SAAUA,EAASc,sBAQZC,GAAsC,SAAC,GAAiC,IAAD,IAA9BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EACL1B,KAArEW,EAD0E,EAC1EA,OAAQE,EADkE,EAClEA,MAAOE,EAD2D,EAC3DA,WAAYE,EAD+C,EAC/CA,WAAYI,EADmC,EACnCA,YAAaX,EADsB,EACtBA,aAE5D,OACE,kBAAC,KAAD,CACEiB,UAAWC,KAAGjB,GAAD,mBACVM,EAAaO,GADH,cAEVH,GAAeG,GAFL,IAIbK,QAAS,CACPhB,MAAOe,KAAGf,GAAD,mBACNI,EAAaO,GADP,cAENH,GAAeG,GAFT,cAGNT,GAAcS,GAHR,KAMXM,QAAQ,YACRL,QAASA,EACTD,KAAMA,GAEN,yBAAKG,UAAWjB,IAChB,kBAACqB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,KACGN,KC9DIO,GAAUC,cACrB,cAAGvB,OAAH,IAAcwB,EAAd,kCAAsD,wBAASA,KAD1CD,EAErB,oBACAE,MACElC,EAFF,EAEEA,QAFF,IAGEG,YAAeC,EAHjB,EAGiBA,OAAQC,EAHzB,EAGyBA,OAAQC,EAHjC,EAGiCA,SAEjCG,EALA,EAKAA,OALA,MAM0C,CAC1C0B,UAAW,OAIXC,cAAuC,EAAzBpC,EAfK,IAiBnBqC,WAAY5B,EAAST,EDfK,ICemB,EAC7CgB,WAAYZ,EAAO,cAAe,CAChCC,OAAQA,EAAOY,MACfX,SAAUA,EAASY,qBAIVoB,GAAON,aAAO,MAAPA,EAAc,kBAAqC,CACrEO,QAAQvC,EADwB,EAAGkC,MAASlC,SAxBzB,QA4BRwC,GAASR,cACpB,cAAGvB,OAAH,IAAcwB,EAAd,kCAAsD,2BAAYA,KAD9CD,EAEpB,oBACAE,MAASlC,EADT,EACSA,QADT,IACkBG,YAAeC,EADjC,EACiCA,OAAQC,EADzC,EACyCA,OAAQC,EADjD,EACiDA,SAAcG,EAD/D,EAC+DA,OAD/D,MAE0C,CAC1CgC,QAAS,OACTC,WAAY,SACZH,OAAQvC,EAnCW,IAoCnB2C,QAAQ,KAAD,OAAO3C,EAAQ,GAAf,MACPqC,WAAY5B,EAAST,EDnCK,ICmCmB,EAC7CgB,WAAYZ,EAAO,cAAe,CAChCC,OAAQA,EAAOY,MACfX,SAAUA,EAASY,qBAIV0B,GAAQZ,aAAO,MAAPA,EAAc,oBAAGE,MAASlC,EAAZ,EAAYA,QAAmBC,EAA/B,EAAqBC,OAAUD,QAA/B,qBACjC0C,QAAQ,GAAD,OAAK3C,EAAQ,GAAb,cAAqBA,EAAQ,GAA7B,OC/C+C,SAA3C6C,EAA4CjG,EAAKkG,EAAMC,EAAUC,GAC5E,IAAMC,EAAY,GAQlB,OAPAvH,OAAOC,KAAKiB,GAAKsG,KAAI,SAACtL,GAAD,OAEnBqL,EAAUrL,IAAQkL,EAAOC,EAAWnL,GAA6B,WCLrC,SAACgF,GAAD,MAE7B,GAAID,SAASwG,KAAKvG,GAAKpG,MAAM,iBAAiB,GDGF4M,CAAQxG,EAAIhF,IACnDiL,EAAoBjG,EAAIhF,GAAMkL,EAAMC,EAAUC,GAC9CA,EAAcA,EAAYpG,EAAIhF,IAAQgF,EAAIhF,MAGzCqL,EDuCJJ,CACD5C,EACA,YACA,cACA,SAACjD,GAAD,OAAmBgD,EAAQhD,EAAQ,MANJ,CAQjCqG,SAAUrD,EAAQ,U,6BG7CPsD,GAAiC,SAACC,GAC7C,IAAIC,EAAmC,GAavC,OAXAD,EAAOE,SAAQ,SAACC,GACd,GAAIC,MAAMC,QAAQF,GAAQ,CAAC,IAAD,eACCA,EADD,GACjBG,EADiB,KACNC,EADM,KAEpBD,IACFL,EAAY,gBAAQA,EAAR,GAAyBM,SAGvCN,EAAY,gBAAQA,EAAR,GAAyBE,MAIlCF,GCjBIO,GAAU/B,cAJD,SAACC,GAAD,OACpB,kBAAC+B,GAAA,EAAD,eAAYpC,QAAQ,KAAKqC,UAAU,MAAShC,MAGvBD,EAAkB,gBACnBjL,EADmB,EACvCmL,MAASgC,QAAWnN,KADmB,OAE3BuM,GAAe,CAC3B,CAAU,UAATvM,EAAkB,CACjBoN,MNA2B,c,UOVlBC,GAAepC,aAAOqC,KAAPrC,EAAe,kBAAwB,CACjEsC,OADyC,EAAGpC,MAC9BoC,OAAO7D,OAAS,M,+BCAnB8D,GAAavC,cACxB,SAACC,GAAD,OACE,kBAACuC,GAAA,EAAD,eAAYC,KAAK,QAAQN,MAAM,WAAclC,GAC3C,kBAAC,KAAD,CAAUyC,SAAS,aAHC1C,EAMxB,oBAAGE,MAASlC,EAAZ,EAAYA,QAAZ,IAAqBkE,QAAWnN,EAAhC,EAAgCA,KAAhC,IAAsC4N,OAAUC,EAAhD,EAAgDA,MAAOC,EAAvD,EAAuDA,MAAvD,MAAkF,CAClFC,YAAa9E,EAAQ,GACrBmE,MAAgB,SAATpN,EAAkB8N,EAAQD,MCGtBG,GAAsBC,aACjC,kBAA+C,CAC7C3I,aADF,EAAGA,gBAGH,CAAE4I,mBlBFkD,SAACC,GAAD,MAAW,CAC/DnO,KAAML,EAAUiI,qBAChB1H,MAAOiO,MkBCP,kBACI7I,EADJ,EACIA,aACA4I,EAFJ,EAEIA,mBAFJ,MAMuB,CACrBE,QADqB,WAEnBF,GAAoB5I,OAbS2I,CAgBjCT,IC1BWa,GAAc,kBACzB,kBAAChB,GAAD,KACE,kBAACiB,GAAA,EAAD,KACE,kBAACN,GAAD,MACA,kBAAC,GAAD,KACGxL,EAAK,a,uECPD+L,GAAsBtD,aAAOuD,KAAPvD,EAAsB,cAAGE,MAAH,MAAwB,CAC/EsD,SAAU,OACV7C,QAAS,QACTF,QAAS,OACTC,WAAY,SACZ+C,eAAgB,a,0CCJLC,GAAoB1D,aAAO2D,KAAP3D,EAAoB,kBAAqC,CACxF8C,aAAa9E,EADsC,EAAGkC,MAASlC,SAC1C,GACrBmE,MAAOyB,KAAOC,S,8BCLHC,GAAuB9D,aAAO+D,KAAP/D,CAAiB,CACnDgE,WAAY,SACZP,eAAgB,WCOLQ,GAA0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMf,EAAT,EAASA,QAAS3D,EAAlB,EAAkBA,SAAlB,IAA4B2E,cAA5B,gBAErD,kBAACL,GAAD,CAAsBK,OAAQA,EAAQhB,QAASA,GAC7C,kBAACiB,GAAA,EAAD,KACGF,GAEF1E,GACC,kBAAC6E,GAAA,EAAD,CAAcC,QAAS9E,MCRhB+E,GAAoBvE,cAC/B,cAAGwE,IAAH,EAAQC,OAAR,IAAmBC,EAAnB,wCACE,kBAAC7E,GAAA,EAAY6E,KAFgB1E,EAI/B,gBACShC,EADT,EACAkC,MAASlC,QADT,IACoBwG,WADpB,aACgCC,cADhC,gBAEqCnD,GAAe,CACpD,CAACkD,EAAK,CACJG,UAAW3G,EAAQ,KAErB,CAACyG,EAAQ,CACPrE,aAAcpC,EAAQ,UCfb4G,GAAgC,kBAAM,SAACC,GAClDA,E3B6BqD,CACrD9P,KAAML,EAAU+H,kBAChBxH,MAAOkE,I2B9BP0L,ExB2CyD,CACzD9P,KAAML,EAAUsI,sBwB3ChB6H,EAASvP,KACTuP,EAASpP,KACToP,EAAS/P,EAAgBL,EAAWI,aCNzBiQ,GAAgB,SAACnH,GAAD,OAAwD,YAA+B,IAA5BoH,EAA2B,EAA3BA,OAAWL,EAAgB,2BAEjH,OAAIK,EACK,KAIP,kBAACpH,EAAc+G,KCMNM,GAA6B5H,YACxC4F,aACE,kBAAoB,CAClBpO,UADF,EAAGA,aAGH,CAAEqQ,kBAAmBL,KACrB,kBAAGhQ,EAAH,EAAGA,UAAH,MAA2C,CACzCqQ,kBADF,EAAkBA,kBAEhBF,OAAQnQ,IAAcH,EAAWyQ,YAGrCJ,GAXwC1H,ECNa,SAAC,GAA2B,IAAzB6H,EAAwB,EAAxBA,kBAAwB,EACxDE,oBAAS,GAD+C,oBACzE7F,EADyE,KACnE8F,EADmE,KAG1EC,EAAa,kBAAMD,GAAQ,IAMjC,OACE,oCACE,kBAACb,GAAD,MACA,kBAAC,GAAD,CAAgBL,KAAM,kBAAC,KAAD,CAAYoB,MAAO,CAAEjF,WAAY,UAAc8C,QAVvD,kBAAMiC,GAAQ,KAWzB7N,EAAK,gBAEP+H,GACC,kBAACiG,GAAA,EAAD,CAAQjG,MAAI,EAACC,QAAS8F,GACpB,kBAACG,GAAA,EAAD,KACGjO,EAAK,eADR,KAGA,kBAAC+L,GAAD,KACE,kBAACI,GAAD,MACCnM,EAAK,0BAER,kBAACkO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQvC,QAASkC,GACd9N,EAAK,kBAER,kBAACmO,GAAA,EAAD,CAAQ9F,QAAQ,YAAYuC,MAAM,YAAYgB,QAxBpC,WAClBkC,IACAJ,MAuBW1N,EAAK,sB,UCtBPoO,GAAiCvI,YAC5C4F,aACE,kBAAuD,CACrD5I,UADF,EAAGA,UAEDxF,UAFF,EAAcA,aAId,CAAEgR,W9BJgC,kBAAM,SAACf,EAAUpH,GAAc,IAC3DrD,EAAcqD,IAAdrD,UACRyK,EAA8B,CAC5B9P,KAAML,EAAUgI,kBAChBzH,MAAQmF,IAAclB,EAAW2M,MAAS3M,EAAWG,OAASH,EAAW2M,Y8BCzE,kBACIzL,EADJ,EACIA,UAAWxF,EADf,EACeA,UADf,MAGuD,CACrDwF,YACA0L,SALF,EAEIF,WAKFb,OAAQnQ,IAAcH,EAAWyQ,YAGrCJ,GAjB4C1H,ECbuB,SAAC,GAAD,IAAGhD,EAAH,EAAGA,UAAW0L,EAAd,EAAcA,SAAd,OACnE,oCACE,kBAACvB,GAAD,MACA,kBAAC,GAAD,CACEpB,QAAS2C,EACT5B,KACE,kBAAC6B,GAAA,EAAD,CACE5D,MAAM,UACN6D,QAAuB,UAAd5L,KAIZ7C,EAAK,qB,UCbC0O,GAAmB,kBAC9B,kBAACrI,GAAasI,SAAd,MACG,gBAAGhG,EAAH,EAAGA,MAAOiG,EAAV,EAAUA,YAAV,OACC,kBAAC,GAAD,CACEhD,QAASgD,EACTjC,KACE,kBAACkC,GAAA,EAAD,CACEJ,QAAmB,SAAV9F,EACTiC,MAAM,aAIT5K,EAAK,kB,UCVD8O,GAAcrG,cACzB,oBAAGsG,YAAH,MAAU,QAAV,EAAsBrG,EAAtB,gCACE,kBAAC,KAAD,eAAqBL,QAAQ,OAAO0G,KAAMA,GAAUrG,MAF7BD,EAIzB,oBAAGE,MAASlC,EAAZ,EAAYA,QAA2CuI,EAAvD,EAAqBrE,QAAWsE,WAAcC,QAA9C,MAAgF,CAChF3D,YAAa9E,EAAQ,GACrB,kBAAmB,CACjB0I,gBAAiBH,O,0CCKRI,GAA2BvJ,YACtC4F,aACE,kBAAsD,CACpDvM,SADF,EAAGA,SAED7B,UAFF,EAAaA,aAIb,CAAEgS,iBzCFyC,kBAAM,SAAC/B,EAAUpH,GAAc,IACpEhH,EAAagH,IAAbhH,SACJA,EAnB+B,GAoBjCoO,EAAyB,CACvB9P,KAAML,EAAU0H,mBAChBnH,MAAQwB,EAxBe,MyCqBLoQ,iBzCQuB,kBAAM,SAAChC,EAAUpH,GAAc,IACpEhH,EAAagH,IAAbhH,SACJA,EA9B+B,GA+BjCoO,EAAyB,CACvB9P,KAAML,EAAU2H,mBAChBpH,MAAQwB,EAlCe,QyCsBzB,kBACIA,EADJ,EACIA,SAAU7B,EADd,EACcA,UADd,MAG0D,CACxD6B,WACAmQ,iBALF,EAEIA,iBAIFC,iBANF,EAEsBA,iBAKpB9B,OAAQnQ,IAAcH,EAAWyQ,YAGrCJ,GAjBsC1H,ECT0B,SAAC,GAAD,IAAG3G,EAAH,EAAGA,SAAUmQ,EAAb,EAAaA,iBAAkBC,EAA/B,EAA+BA,iBAA/B,OAChE,oCACE,kBAACtC,GAAD,MACA,kBAAC,GAAD,CACEJ,QAAQ,EACRD,KACE,kBAAC,GAAD,KACE,kBAACwB,GAAA,EAAD,CAAQvC,QAASyD,EAAkBE,S1CXR,I0CWkBrQ,GAC3C,kBAAC,KAAD,OAEF,kBAACiP,GAAA,EAAD,CAAQvC,QAAS0D,EAAkBC,S1CfR,I0CekBrQ,GAC3C,kBAAC,KAAD,SAKLc,EAAK,iB,SCxBCwP,GAAmC,kBAAM,SAAClC,EAAUpH,GAE/DoH,E1Cc4C,SAAC3O,GAAD,MAAW,CACvDnB,KAAML,EAAUuI,gBAChBhI,MAAOiB,G0ChBE8Q,CAA4B,QADhBvJ,IAAblH,SACqC,MAAQ,QAErDlC,OAAOC,SAAWD,OAAOC,WCGd2S,GAAwB,WACnC,IAAMC,ECPkCC,cACxC,qBAAG5Q,YACH,SAACA,GAAD,OAAcA,KDMRA,EAAW6Q,YAAYF,GACvBrC,EAAWwC,cACXlE,EAAU,kBAAM0B,EAASkC,OAE/B,OACE,oCACE,kBAACxC,GAAD,MACA,kBAAC,GAAD,CACEJ,QAAQ,EACRD,KACE,kBAAC,GAAD,KACE,kBAACwB,GAAA,EAAD,CAAQoB,SAAuB,QAAbvQ,EAAoB4M,QAASA,GAA/C,sBAGA,kBAACuC,GAAA,EAAD,CAAQoB,SAAuB,QAAbvQ,EAAoB4M,QAASA,GAA/C,SAMH5L,EAAK,eEpBD+P,GAAkBtE,aAC7B,kBAA+C,CAC7C3I,aADF,EAAGA,gBAGH,MACA,kBAEmB,CACjBA,aAHF,EACIA,gBANyB2I,ECHQ,SAAC,GAAD,IAAG3I,EAAH,EAAGA,aAAH,OACrC,kBAAC,GAAD,CAAciF,KAAMjF,GAClB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACsM,GAAD,MACA,kBAAChB,GAAD,MACA,kBAACX,GAAD,UCMSuC,GAAwB,SAAC5J,GAAD,OAA8BqF,aACjE,kBAA+C,CAC7C3I,aADF,EAAGA,gBAGH,IACA,WAEEmN,EAFF,SAIuC,CACrC/I,OALF,EACIpE,aAKFmF,SANF,EAGIA,YAR6DwD,CAajErF,IAEWoC,GAAUwH,GAAsBE,IAEhCjH,GAAS+G,GAAsBG,ICpC/BC,GAAkB5J,MAAW,YAAyD,IAAD,IAArDmE,QAAW0F,EAA0C,EAA1CA,KAAM7S,EAAoC,EAApCA,KAAoB4J,EAAgB,EAA9B6H,WAAc7H,MAGhF,MAAO,CACL,UAAW,CACT,aAAc,CACZgC,QAAS,EACTkH,OAAQ,EACRC,UAAW,cAEb,oBAAqB,CACnBvH,OAAQ,QAGV,iCAAkC,CAChC,WAAY,CACVmG,gBAfyB,SAAT3R,EAAkB4J,EAAQiJ,EAAK,MAiBjD,MAAO,CACLlB,gBAAiB,qBCbdqB,GAAiB,SAAC,GAAkB,IAAhBvI,EAAe,EAAfA,SAG/B,OAFAmI,KAGE,oCACE,kBAACK,GAAA,EAAD,MACA,kBAAC,GAAD,MACA,kBAACV,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC1G,GAAD,KACGpB,GAEH,kBAACc,GAAD,OAEF,kBAAC,GAAD,0BCbO2H,GAA2BjF,YACtC,KACA,CAAElO,oBACF,SACE0S,EADF,OAEI1S,EAFJ,EAEIA,gBAFJ,MAGyB,CACvB8K,QAAS,YACT0G,KAAM,QACNnE,MAAO,UACPgB,QAJuB,WAKrBrO,EAAgBL,EAAWyT,oBAE7B1I,SAAUjI,EAAK,0BAbqByL,CAetC0C,MCrBWyC,GAAiBnI,aAAO,MAAPA,EAAc,gBAAYhC,EAAZ,EAAGkC,MAASlC,QAAZ,MAAqC,CAC/E,WAAY,CACV8E,YAAa9E,EAAQ,GACrBoC,aAAcpC,EAAQ,Q,qBCKboK,GAAiCpF,YAC5C,KACA,CAAElO,oBACF,SAAC0S,EAAD,OAAM1S,EAAN,EAAMA,gBAAN,MAAyD,CACvD8K,QAAS,YACTuC,MAAO,YACP3C,SAAUjI,EAAK,iBACf+O,KAAM,QACNnD,QALuD,WAMrDrO,EAAgBL,EAAWI,WAE7BwT,UAAW,kBAAC,KAAD,SAX+BrF,CAa5C0C,MCrBW4C,GAA6B,kBAAM,SAACzD,EAAUpH,GACzD,IhDmBiC8K,EgDnB3BhP,EAAQkE,IACSjE,EAAeD,EAAhCY,WAAc,GACZJ,EAAYR,EAAZQ,QAER,GAAKP,EAEE,CACL,IAAMwC,EAAQjC,EAAQ2B,WAAU,qBAAGvG,KAAgBqE,KAC7CgP,EAASzO,EAAQiC,EAAQ,GAC/BxC,EAAWgP,EAASA,EAAOrT,GAAKoE,EAAMQ,QAAQ,GAAG5E,QAJjDqE,EAAWO,EAAQ,GAAG5E,GAOxB0P,GhDOiC0D,EgDPf,CAAC/O,EAAU,GhDOc,CAC3CzE,KAAML,EAAU8H,UAChBvH,MAAOsT,OiDHIN,GAA2B7K,YACtC4F,aACE,kBAAkB,CAChBjJ,QADF,EAAGA,WAGH,CAAEjF,kBAAiBwT,mBACnB,kBAAGvO,EAAH,EAAGA,QAAajF,EAAhB,EAAgBA,gBAAiBwT,EAAjC,EAAiCA,cAAjC,MAAiG,CAC/F1I,QAAS,YACTuC,MAAO,UACPmE,KAAM,QACN9G,SAAUjI,EAAK,oBACf4L,QAL+F,WAO7FrO,EAAgBL,EAAWyQ,SAC3BoD,KAGFvD,OAA2B,IAAnBhL,EAAQmC,WAGpB4I,GApBsC1H,CAqBtCsI,M,kFCvCW+C,GAAmBzI,aAAO0I,KAAP1I,EAAc,gBAAYhC,EAAZ,EAAGkC,MAASlC,QAAZ,MAAqC,CACjFoC,aAAcpC,EAAQ,GACtBqD,SAAUrD,EAAQ,QCgBP2K,GAAuBvL,YAClC4F,aACE,kBAAkB,CAChBjJ,QADF,EAAGA,WAGH,CAAE6O,a9DsBoC,SAACzT,GAAD,MAAS,CACjDJ,KAAML,EAAU8G,cAChBvG,MAAO,CACLE,U8DxBA,kBACI4E,EADJ,EACIA,QADJ,MAG6C,CAC3CA,UACA6O,aALF,EAEIA,aAKF7D,OAA2B,IAAnBhL,EAAQmC,WAGpB4I,GAhBkC1H,ECPa,SAAC,GAAD,IAAGrD,EAAH,EAAGA,QAAS6O,EAAZ,EAAYA,aAAZ,OAC/C,kBAACH,GAAD,KACE,kBAAC3I,GAAA,EAAD,KACG/F,EAAQmH,KAAI,WAAelF,GAAf,IAAG7G,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACX,kBAAC,WAAD,CAAUQ,IAAKT,GACb,kBAAC4O,GAAA,EAAD,KACE,kBAAC8E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,QAGJ,kBAACzE,GAAA,EAAD,KACE,8BAAO9M,EAAK,YAAayE,EAAQ,EAAjC,SACA,8BAAO5G,IAET,kBAAC2T,GAAA,EAAD,KACE,kBAACvG,GAAA,EAAD,CAAYW,QAAS,kBAAMyF,EAAazT,KACtC,kBAAC,KAAD,CAAWuN,SAAS,eAIvB1G,EAAQ,EAAKjC,EAAQmC,QACtB,kBAAC2D,GAAA,EAAD,CAASD,QAAQ,QAAQqC,UAAU,gB,+BCjClCqB,GAAsBtD,aAAOuD,KAAPvD,CAAsB,CACvDgJ,WAAY,MACZC,cAAe,MACfzF,SAAU,SCQC0F,GAAqB9L,YAChC4F,aACE,kBAAyB,CACvBjJ,QADF,EAAGA,WAGH,CAAEoP,UjEmB8B,SAAC/T,GAAD,MAAW,CAC7CL,KAAML,EAAU2G,WAChBpG,MAAO,CACLE,GkEzCF,uCAAuCiU,QAAQ,SAAS,SAAAC,GACtD,IAAMC,EAAoB,GAAhBC,KAAKC,SAAgB,EAG/B,OADe,KAALH,EAAWC,EAAO,EAAFA,EAAM,GACvB3O,SAAS,OlEsClBvF,YiEtBA,kBAAG2E,EAAH,EAAGA,QAAH,MAAsE,CACpEoP,UADF,EAAgBA,UAGdpE,OAAQhL,EAAQmC,OAAS,MAG7B4I,GAZgC1H,EEJW,SAAC,GAAmB,IAAjB+L,EAAgB,EAAhBA,UAAgB,EACtChE,oBAAS,GAD6B,oBACvD7F,EADuD,KACjD8F,EADiD,KAGxDC,EAAa,kBAAMD,GAAQ,IAH6B,EAK9BD,oBAAS,GALqB,oBAKvD2B,EALuD,KAK7C2C,EAL6C,OAO1BtE,mBAAS,IAPiB,oBAOvDuE,EAPuD,KAO3CC,EAP2C,KAoB9D,OACE,oCACE,kBAACjE,GAAA,EAAD,CAAQ9F,QAAQ,YAAYyI,UAAW,kBAAC,KAAD,MAAmB/B,KAAK,QAAQnD,QApBzD,kBAAMiC,GAAQ,KAqBzB7N,EAAK,qBAEP+H,GACC,kBAACiG,GAAA,EAAD,CAAQjG,MAAI,EAACC,QAAS8F,GACpB,0BAAMuE,SAfG,SAACrP,GAChBA,EAAEsP,iBACFV,EAAUO,EAAWI,QACrBzE,IACAsE,EAAc,IACdF,GAAY,KAWJ,kBAACjE,GAAA,EAAD,KACGjO,EAAK,qBAER,kBAAC,GAAD,KACE,kBAACwS,GAAA,EAAD,CAAOC,WAAS,EAACC,WAAS,EAACjP,MAAO0O,EAAY5D,SAxBpC,SAAC,GAAsD,IAApDoE,EAAmD,EAAnDA,cACvBP,EAAcO,EAAclP,OAC5ByO,EAA2C,KAA/BS,EAAclP,MAAM8O,YAwBxB,kBAACrE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQvC,QAASkC,GACd9N,EAAK,kBAER,kBAACmO,GAAA,EAAD,CAAQ3Q,KAAK,SAAS6K,QAAQ,YAAYuC,MAAM,UAAU2E,SAAUA,GACjEvP,EAAK,sB,yCC3BT4S,GAAuC/M,YAClD4F,aACE,kBAA0C,CACxCjJ,QADF,EAAGA,WAGH,CAAEqQ,apE4BsB,iBAAe,CACzCrV,KAAML,EAAUiH,kBoE5Bd,kBAAG5B,EAAH,EAAGA,QAAH,MAAsE,CACpEoJ,QADF,EAAgBiH,aAEd5K,SAAUjI,EAAK,iBACf8Q,UAAW,kBAAC,KAAD,MAEXtD,OAAQsF,KAAMtQ,EAAS7E,OAG3B4P,GAdkD1H,CAelDsI,MC9BW4E,GAAuB,kBAClC,oCACE,kBAAC3B,GAAD,MACA,kBAACR,GAAD,KACE,kBAAC,GAAD,MACA,kBAACe,GAAD,MACA,kBAACd,GAAD,MACA,kBAAC+B,GAAD,SCHOI,GAAYvK,cACvB,cAAGwK,KAAH,EAASC,SAAT,IAAsBC,EAAtB,2CAAiD,wBAASA,KADnC1K,EAEvB,gBAAGwK,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,IAAmBvK,MAASgC,QAAWnN,EAAvC,EAAuCA,KAAvC,IAA6C4N,OAAUE,EAAvD,EAAuDA,MAAOD,EAA9D,EAA8DA,MAA9D,MAA0G,CAE1GnC,QAAS,OACTkK,SAAU,OACVnE,WAAqB,SAATzR,EAAkB6N,EAAQC,EACtC+H,aAAc,OAEdlM,MAAM,GAAD,OAjBmB,IAiBnB,MACL8E,SAAS,GAAD,OAlBgB,IAkBhB,MACRnC,SAAS,GAAD,OAnBgB,IAmBhB,MACRd,OAAO,GAAD,OApBkB,IAoBlB,MAENsK,mBAAmB,GAAD,OAAKC,GAAL,KAElBC,UAAWP,EAAO,iBAAmB,OAErC7F,UAAW6F,GAAQC,EAAW,QAAU,EAExCO,UAAWP,EAAW,+BAAiC,iCCrB5CQ,GAAUjL,cACrB,cAAGkL,OAAH,EAAWV,KAAX,IAAoBE,EAApB,yCACE,wBAASA,EACP,iCAHiB1K,EAMrB,gBAAGkL,EAAH,EAAGA,OAAQV,EAAX,EAAWA,KAAX,IAAiBtK,MAASgC,QAAWnN,EAArC,EAAqCA,KAAM6S,EAA3C,EAA2CA,KAAgBhF,EAA3D,EAAiDD,OAAUC,MAA3D,MAAiG,CAEjGY,SAAS,GAAD,OAAK2H,GAAL,MACR1K,QAAS,OACTC,WAAY,SACZ+C,eAAgB,SAEhB,QAAS,CACP/E,MAAO,MACP6B,OAAQ,MACRqK,aAAc,MAEdQ,mBAAoB,aACpBP,mBAAmB,GAAD,OAAKC,GAAL,KAElBE,UAAWE,GAAmB,SAATnW,EACjB,mCACA,OAEJyR,WAAY0E,EACRV,EACE,cACS,SAATzV,EAAkB6S,EAAK,KAAShF,EAClC,mBCpCKyI,GAAcrL,aAAO,MAAPA,CAAc,CACvCtB,MAAM,GAAD,OAHQ,EAGR,MACL8E,SAAS,GAAD,OAJK,EAIL,MACRnC,SAAS,GAAD,OALK,EAKL,MACRd,OAAO,GAAD,OANO,EAMP,MACNsH,OAAO,GAAD,OAPO,EAOO,EAAd,MACN8C,SAAU,OACVW,SAAU,ICNNC,GAAoC,CACxCC,EAAG,CAAC,GACJC,EAAG,CAAC,EAAG,GACPC,EAAG,CAAC,EAAG,EAAG,GACVC,EAAG,CAAC,EAAG,EAAG,EAAG,GACbC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAWfC,GAAM,YAAOzX,OAAOsN,MAAM,GAAGhI,QAEtBoS,GAAsB,SAAC,GAAD,IAAG/Q,EAAH,EAAGA,MAAOwP,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,SAAUtH,EAA1B,EAA0BA,QAA1B,OACjC,kBAACkI,GAAD,CAAalI,QAASA,GACpB,kBAACoH,GAAD,CAAWC,KAAMA,EAAMC,SAAUA,GAC9BqB,GAAO5K,KAAI,SAAC8K,GAAD,OACV,kBAACf,GAAD,CACErV,IAAKoW,EACLxB,KAAMA,EACNU,OAAQK,GAAKvQ,KAA0C,IAAhCuQ,GAAKvQ,GAAOiB,QAAQ+P,EAAI,WCvB5CC,GAAejM,cAC1B,cAAGvJ,SAAH,IAAgBwJ,EAAhB,oCACE,wBAASA,KAFeD,EAI1B,YAA8D,IAA3DvJ,EAA0D,EAA1DA,SAAmBuH,EAAuC,EAAhDkC,MAASlC,QAChBsI,EAAO7P,GrEO+B,EqEL5C,MAAO,CACLgK,QAAS,OACTkK,SAAU,OACVjI,SAAU1E,EAAQsI,GAClB2C,cAAejL,EAAQsI,EAAO,OCArB4F,GAAiBlJ,aAC5B,kBAA0E,CACxEhJ,MADF,EAAGA,MAEDC,cAFF,EAAUA,cAGRC,QAHF,EAAyBA,QAIvBzD,SAJF,EAAkCA,YAMlC,CAAE0V,WzENkC,SAACpQ,GAAD,MAAgB,CACpDhH,KAAML,EAAUoH,YAChB7G,MAAO,CAAC8G,OyEKR,kBAAG/B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAeC,EAAzB,EAAyBA,QAASzD,EAAlC,EAAkCA,SAAlC,MAA8E,CAC5EuD,QACAC,gBACAC,UACAiS,WAJF,EAAgDA,WAK9C1V,cAb0BuM,ECdO,SAAC,GAAD,IAAGhJ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAeC,EAAzB,EAAyBA,QAASiS,EAAlC,EAAkCA,WAAY1V,EAA9C,EAA8CA,SAA9C,OACnC,kBAACwV,GAAD,CAAcxV,SAAUA,GACrBuD,EAAMkH,KAAI,SAACkL,EAAMpQ,GAChB,IAAMyO,GAA6C,IAAlCxQ,EAAcgC,QAAQD,GAOvC,OACE,kBAAC,GAAD,CACEpG,IAAKoG,EACLhB,MAAOoR,EACP3B,SAAUA,EACVD,MAAOC,GAAYvQ,EACnBiJ,QAZY,YACA,IAAViJ,GACFD,EAAWnQ,a,UCNRqQ,GAAuBrM,cAClC,SAACC,GAAD,OACE,kBAACqM,GAAA,EAAD,eACE1M,QAAQ,WACRuC,MAAM,WACFlC,MAL0BD,EAQlC,gBAAYhC,EAAZ,EAAGkC,MAASlC,QAAZ,MAAqC,CACrC8E,YAAa9E,EAAQ,GACrBoC,aAAcpC,EAAQ,GACtBwF,SAAUxF,EAAQ,Q,qBCZPuO,GAAmBvM,aAAOwM,KAAPxM,EAAmB,kBAAqC,CACtF8C,aAAa9E,EADoC,EAAGkC,MAASlC,SACxC,O,oBCAVyO,GAAoBzM,aAAO,OAAPA,EAAe,oBAC9CE,MAASlC,EADqC,EACrCA,QAAoB4J,EADiB,EAC5B1F,QAAW0F,KADiB,MAEjC,CACbvH,WAAYrC,EAAQ,GACpB0O,cAAe,OACfvK,MAAOwK,KAAIC,KAEX,SAAU,CACRzK,MAAOyF,EAAK,KACZiF,WAAY,YCLZC,GAAQ,EAERC,GAAuB,KCPdC,GAAO,kBAJSC,EAIU,EAJGjV,EAIA,EAHxCuR,KAAK2D,MAAM3D,KAAKC,UAAYxR,EAAMiV,EAAM,IAAMA,EADpB,IAACA,EAAajV,GCoB7BmV,GAA0BnK,aACrC,kBAA2C,CACzC9I,QADF,EAAGA,QAEDqC,KAFF,EAAYpC,WAAc,MAI1B,CAAEiT,oBCpBiD,kBAAM,SAACvI,EAAUpH,GAAc,IAAD,EAChDA,IAAzBzD,EADyE,EACzEA,MAAOC,EADkE,EAClEA,cACXoT,EAAYrT,EAEhBA,EAAMyH,SAAQ,SAAC3L,EAAMkG,IACmB,IAAlC/B,EAAcgC,QAAQD,KACxBqR,EAAUrR,GAASgR,SAcvBnI,ExEK+C,CAC/C9P,KAAML,EAAU4H,cAChBrH,MAAOkE,IwENP0L,ElFHsD,SAAC7K,GAAD,MAAY,CAClEjF,KAAML,EAAUkH,sBAChB3G,MAAO+E,GkFCEoT,CAAoBC,MDDoBC,W/ENb,SAACpK,GAAD,MAAW,CAC/CnO,KAAML,EAAUyH,YAChBlH,MAAOiO,M+EKP,kBACIhJ,EADJ,EACIA,QAASqC,EADb,EACaA,KACT6Q,EAFJ,EAEIA,oBAFJ,MAG2B,CACzBlT,UACAqC,OACA+Q,WANF,EAEyBA,WAKvBF,yBAbmCpK,EFPgB,SAAC,GAAwD,IAAtD9I,EAAqD,EAArDA,QAASqC,EAA4C,EAA5CA,KAAM6Q,EAAsC,EAAtCA,oBAAqBE,EAAiB,EAAjBA,WAUtFC,EAAY,WAChB,GAAIrT,EAAS,CACX,IAAMsT,EAAIC,KAAKC,MAAQZ,GACvBC,GAAQ1Y,OAAOsZ,YAAW,WACxBP,IACAE,GAAW,KACVE,EArBY,QAqBsBA,EAAI,KAIvC1G,EAAWvK,GrElBW,EqEoB5B,OACE,kBAAC8P,GAAD,CACEuB,UAAWL,EACXM,YAvBY,WACdf,GAAQW,KAAKC,MACbJ,GAAW,GACG,OAAVP,IACF1Y,OAAOyZ,aAAaf,KAoBpBgB,aAAcR,EACdzG,SAAUA,GAETA,EAAWvP,EAAK,8BACf,oCACE,kBAACgV,GAAD,CAAkB7J,SAAS,UAC1BnL,EAAK,oBACN,kBAACkV,GAAD,KACGlQ,EACD,oCrEjCkB,SyEEjByR,GAA4B5Q,YACvC4F,aACE,kBAAgD,CAC9C/I,cADF,EAAGA,iBAGH,CAAExE,qBACF,kBAAGwE,EAAH,EAAGA,cAAH,MAAqE,CACnExE,iBADF,EAAsBA,iBAGpBsP,OAAiC,IAAzB9K,EAAciC,WAG1B4I,GAZuC1H,ECXkB,SAAC,GAAD,IAAG3H,EAAH,EAAGA,iBAAH,OACzD,kBAAC6W,GAAA,EAAD,CAAKnK,MAAM,YAAYvC,QAAQ,WAAWuD,QAAS1N,EAAkB6P,MAAO,CAAElF,aAAc,SAC1F,kBAAC,KAAD,CAAgBsC,SAAS,UACxBnL,EAAK,oBCLG0W,GAAsBjO,aAAO,MAAPA,EAAc,kBAAqC,CAGpFI,cAAcpC,EAHiC,EAAGkC,MAASlC,SAGrC,OCFXkQ,GAAmB,kBAC9B,kBAACD,GAAD,KACE,kBAACd,GAAD,MACA,kBAACa,GAAD,QCJSjM,GAAc,SAAC,GAAkB,IAAhBvC,EAAe,EAAfA,SACpBxB,EAAYmQ,OAAZnQ,QAER,OACE,kBAACgE,GAAA,EAAD,CAAYpC,QAAQ,KAAKqC,UAAU,KAAKqD,MAAO,CAAElF,aAAcpC,EAAQ,KACpEwB,ICJM4O,GAAYpO,cACvB,SAACC,GAAD,OACE,kBAAC+B,GAAA,EAAD,eAAYqM,WAAS,GAAKpO,MAFLD,EAIvB,gBAAYhC,EAAZ,EAAGkC,MAASlC,QAAZ,MAAqC,CACrC6J,OAAO,GAAD,OAAK7J,EAAQ,GAAb,U,wCCNKsQ,GAAkBtO,aAAOuO,KAAPvO,CAAkB,CAC/CgE,WAAY,WCMDwK,GAAY,kBACvB,oCACE,kBAACxM,GAAA,EAAD,CAAYqM,WAAS,GAClB9W,EAAK,eAER,kBAAC,GAAD,KACGA,EAAK,yBAER,kBAACyK,GAAA,EAAD,CAAYqM,WAAS,GAClB9W,EAAK,uBAER,kBAAC,GAAD,KACGA,EAAK,wBAER,kBAACyK,GAAA,EAAD,CAAYqM,WAAS,GAAE9W,EAAK,sBAC5B,kBAACyK,GAAA,EAAD,CAAYqM,WAAS,GAAE9W,EAAK,oBAC5B,kBAACkX,GAAA,EAAD,CAAOnI,KAAK,SACV,kBAACoI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACJ,GAAA,EAAD,KAAYhX,EAAK,qBACjB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,4BAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACJ,GAAA,EAAD,KAAYhX,EAAK,qBACjB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,4BAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACJ,GAAA,EAAD,KAAYhX,EAAK,uBACjB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,8BAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACJ,GAAA,EAAD,KAAYhX,EAAK,sBACjB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,6BAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACJ,GAAA,EAAD,KAAYhX,EAAK,sBACjB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,6BAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACJ,GAAA,EAAD,KAAYhX,EAAK,sBACjB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,+BAKvB,6BAEA,kBAAC6W,GAAD,KACG7W,EAAK,wBAGR,6BAEA,kBAAC6W,GAAD,KACG7W,EAAK,uBAER,kBAACkX,GAAA,EAAD,CAAOnI,KAAK,SACV,kBAACoI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACL,GAAD,KAAkB/W,EAAK,6BACvB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,oCAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACL,GAAD,KAAkB/W,EAAK,4BACvB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,mCAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACL,GAAD,KAAkB/W,EAAK,8BACvB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,qCAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACL,GAAD,KAAkB/W,EAAK,4BACvB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,mCAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACL,GAAD,KAAkB/W,EAAK,0BACvB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,iCAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACL,GAAD,KAAkB/W,EAAK,sBACvB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,6BAEnB,kBAACoX,GAAA,EAAD,KACE,kBAACL,GAAD,KAAkB/W,EAAK,uBACvB,kBAACgX,GAAA,EAAD,KAAYhX,EAAK,kCC3FdqX,GAAyB5O,aAAO,MAAPA,EAAc,gBAAYhC,EAAZ,EAAGkC,MAASlC,QAAZ,MAAqC,CACvFgL,WAAYhL,EAAQ,GACpBiL,cAAejL,EAAQ,O,UCYZ6Q,GAAkB7O,cAC7B,cACE8O,QADF,EAEErE,SAFF,EAGEsE,UAHF,EAIEC,SAJF,EAKEtQ,MALF,EAMEuQ,OANF,IAOKhP,EAPL,sFASE,kBAACsO,GAAA,EAAD,eAAWtM,UAAU,OAAUhC,MAVJD,EAY7B,YAGoC,IAAD,IAFnCE,MAASlC,EAE0B,EAF1BA,QAE0B,IAFjBkE,QAAWnN,EAEM,EAFNA,KAAM6S,EAEA,EAFAA,KAAoBjJ,EAEpB,EAFM6H,WAAc7H,MACvDqQ,EACmC,EADnCA,SAAUF,EACyB,EADzBA,QAASrE,EACgB,EADhBA,SAAUsE,EACM,EADNA,UAAWrQ,EACL,EADKA,MAAOuQ,EACZ,EADYA,OAEzCC,EAAuB,SAATna,EAAkB4J,EAAQiJ,EAAK,KAEnD,OAAOtG,GAAe,CACpB,CAAC0N,EAAU,CACTG,UAAW,WAEb,CAACL,EAAS,CACR3M,MAAO,SAET,CAACsI,EAAU,CACT/D,gBAAiBwI,IAEnB,CAACH,EAAW,CACVpO,QAAS,EACTyO,SAAU,aAEZ,CAAC1Q,EAAO,CACNA,QACA8E,SAAU9E,IAEZ,CAACuQ,IAAWH,EAAS,CACnBO,WAAW,aAAD,OAAeH,GACzBpQ,YAAY,aAAD,OAAeoQ,KAE5B,CAACJ,GAAWG,EAAQ,CAClBvI,gBAAiBwI,EACjBI,qBAAsBtR,EAAQ,GAC9BuR,oBAAqBvR,EAAQ,UC1CtBwR,IAAsB,qBAChCvZ,EAAYuC,eAAiB,CAAEqE,OAAQ,GAAI4S,UAAW,KADtB,eAEhCxZ,EAAYwC,aAAe,CAAEoE,OAAQ,GAAI4S,UAAW,KAFpB,eAGhCxZ,EAAY2C,UAAY,CAAEiE,OAAQ,GAAI4S,UAAW,KAHjB,eAIhCxZ,EAAYyC,SAAW,CAAEmE,OAAQ,GAAI4S,UAAW,KAJhB,eAKhCxZ,EAAY0C,WAAa,CAAEkE,OAAQ,GAAI4S,UAAW,KALlB,IAUtBC,GAAyB,SAACC,EAAiB3V,GACtD,IC9BmB4V,ED+BbC,EADSnW,OAAOoW,OAAO9V,GACL+V,OAClBC,GChCaJ,EDgCFC,EChCC,YAA+B,IAAII,IAAIL,KDiCnDM,EAAYF,EAAIrV,WAEtB,OAAQgV,GACN,KAAK1Z,EAAY8B,IACjB,KAAK9B,EAAYgC,IACjB,KAAKhC,EAAYiC,MACjB,KAAKjC,EAAYkC,KACjB,KAAKlC,EAAYmC,KACjB,KAAKnC,EAAYoC,IACf,IAAM8X,EAAUN,EAASO,QAAO,SAAAta,GAAI,OAAIA,IAAS6Z,KACjD,GAAIQ,EAAQjU,QAAU,EACpB,MAAO,CACLW,OAAQsT,EAAQjU,OAASyT,EACzBF,UAAW,EAAIE,GAGnB,MAEF,KAAK1Z,EAAYqC,QACjB,KAAKrC,EAAYsC,QACf,IAAM8X,EAAQxW,SAAS8V,EAAgBW,MAAM,KAAK,GAAI,IAEhDC,EAAkC,GAExCV,EAASpO,SAAQ,SAAA+O,GACfD,EAAOC,IAAMD,EAAOC,IAAM,GAAK,KAGjC,IAAMC,EAAS5W,SAASH,OAAOC,KAAK4W,GAAQH,QAAO,SAAAxa,GAAG,OAAI2a,EAAO3a,IAAQya,KAAO,GAAI,IAEpF,IAAKzW,MAAM6W,GACT,MAAO,CACL5T,OAAQ4T,EAASJ,EACjBZ,UAAW,EAAIY,GAInB,MAEF,KAAKpa,EAAYuC,eACf,IAAMkY,EAAgBlB,GAAWvZ,EAAYuC,gBAE7C,GAAmB,IAAfwX,EAAI9T,OAAc,CACpB,IAAuD,IAAnD,CAAC,YAAa,aAAaD,QAAQiU,GACrC,OAAOQ,EAET,IAAK,IAAI1E,EAAI,EAAGA,GAAKgE,EAAI9T,OAAQ8P,IAC/B,GAAIgE,EAAIhE,EAAI,KAAOA,EAAG,CACpB,IAAI2E,EAAO,YAAOX,GAElB,GADAW,EAAQC,QACe,IAAnBD,EAAQzU,QAAuC,YAAvByU,EAAQhW,WAClC,OAAO+V,EAIT,IAFAC,EAAO,YAAOX,IACNa,MACe,IAAnBF,EAAQzU,QAAuC,YAAvByU,EAAQhW,WAClC,OAAO+V,GAMf,GAAmB,IAAfV,EAAI9T,SAA0E,IAA1D,CAAC,UAAW,UAAW,WAAWD,QAAQiU,GAChE,OAAOQ,EAET,MAEF,KAAKza,EAAYwC,aACf,GAAmB,IAAfuX,EAAI9T,SAAmE,IAAnD,CAAC,YAAa,aAAaD,QAAQiU,GACzD,OAAOV,GAAWvZ,EAAYwC,cAEhC,MAEF,KAAKxC,EAAY2C,UACf,GAAmB,IAAfoX,EAAI9T,SAA4B,IAAZ8T,EAAI,GAC1B,OAAOR,GAAWvZ,EAAY2C,WAEhC,MAEF,KAAK3C,EAAY4C,OACf,MAAO,CACLgE,OAAQgT,EAAS9W,QAAO,SAAC6W,EAAGkB,GAAJ,OAAUlB,EAAIkB,IAAG,GACzCrB,UAAW,IAGf,KAAKxZ,EAAY0C,WACf,GAAmB,IAAfqX,EAAI9T,OAAc,CACpB,IAAM6U,EAAS,YAAIlB,GAAUE,OAC7B,GAEIgB,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IAErBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,GAGvB,OAAOvB,GAAWvZ,EAAY0C,YAGlC,MAEF,KAAK1C,EAAYyC,SACf,IAAMqY,EAASlB,EAASE,OACxB,GAEIgB,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IAErBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IAErBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,IACrBA,EAAO,KAAOA,EAAO,GAGvB,OAAOvB,GAAWvZ,EAAYyC,UAEhC,MAEF,QACE,MAAO,GAGX,MAAO,IE/JHsY,GAAK,SAAChW,GAAD,YAAkDvD,IAAVuD,GAEtCiW,GAAoB,WAK3B,IAJJzM,EAIG,uDAJG,EACN0M,EAGG,uCAFHzM,EAEG,uCADH0M,EACG,uCAeH,OAbIH,GAAGE,IAAUF,GAAGvM,IAAWuM,GAAGG,KAChCA,EAAOD,EAAQzM,EAASD,IAGrBwM,GAAGxM,KAASwM,GAAGE,IAAUF,GAAGvM,IAAWuM,GAAGG,KAC7CA,EAAOD,EACPzM,EAASD,GAGNwM,GAAGxM,IAASwM,GAAGE,IAAWF,GAAGvM,KAAWuM,GAAGG,KAC9CA,EAAOD,GAGF,CACL9B,SAAU,WACV5K,MACA0M,QACAzM,SACA0M,SAMSC,GAAe,eAC1BC,EAD0B,uDACf,SACXC,EAF0B,uDAEb,SAFa,MAGtB,CACJ7Q,QAAS,OACTC,WAAY2Q,EACZ5N,eAAgB6N,ICvCLC,GAAQvR,aAAO,MAAPA,EAAc,oBACjCE,MAASgC,QAAWnN,EADa,EACbA,KAAM6S,EADO,EACPA,KAAoBjJ,EADb,EACD6H,WAAc7H,MADb,MAEpB,CACb,eAAe,gBACVsS,MAEL,YAAY,cACVO,QAAQ,IAAD,O1Fa2B,S0Fb3B,MACJJ,KAFL,CAGEjP,MAAgB,SAATpN,EAAkB4J,EAAQiJ,EAAK,WCL7BlC,GAAS1F,cACpB,gBAAGsG,EAAH,EAAGA,KAAMnE,EAAT,EAASA,MAAUlC,EAAnB,wCACE,kBAAC,KAAD,iBACMA,EADN,CAEE+J,WAAS,EACT7H,MAAOA,EACPvC,QAAQ,YACR0G,KAAMA,IAASpN,EAAWG,OAAS,QAAUiN,OAP7BtG,CAAA,gBAWjBiR,KAXiB,CAYpBvE,cAAe,YACf9B,aAAc,EACdjK,QAAS,KCpBE8Q,GAAUzR,aAAO,MAAPA,CAAA,gBAClBiR,KADkB,GAElBG,O,oBCKQM,GAAQ1R,cACnB,cAAG2R,IAAH,IAAW1R,EAAX,+BAAmC,wBAASA,KADzBD,EAEnB,gBAAuBjL,EAAvB,EAAGmL,MAASgC,QAAWnN,KAAU4c,EAAjC,EAAiCA,IAAjC,OAAgErQ,GAAe,CAC/E,CAACqQ,EAAK,CACJC,UAAW,SACXzP,MAAgB,SAATpN,EAAkB6S,KAAK,KAAOA,KAAK,YCJjCiK,GAAM7R,aAAO,OAAPA,EAAe,oBAAGE,MAASlC,EAAZ,EAAYA,QAAoB4J,EAAhC,EAAqB1F,QAAW0F,KAAhC,MAAwD,CACxFvH,WAAYrC,EAAQ,IACpB0E,SAAU,QACVkP,UAAW,SACXzP,MAAOyF,EAAK,SCXDkK,GAAmB,SAACC,EAAK/W,GAAN,OACN,IAAxB+W,EAAI9V,QAAQjB,ICADgX,GAAmB,SAACC,GAC/B,IAAMC,EAHK,SAACD,GAAD,OAAe,sCAAIpC,EAAJ,yBAAIA,EAAJ,uBAAoCiC,GAAQjC,EAAUoC,EAAI,KAGjEE,CAAKF,GAExB,OAAIH,GAAQ,CAAC,GAAI,GAAI,GAAI,IAAKG,GACrB1a,EAAK,WAGV2a,EAAW,GACN3a,EAAK,WAGV2a,EAAW,EAAG,EAAG,GACZ3a,EAAK,WAGV2a,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,GACrB3a,EAAK,gBADd,GCgBW6a,GAAuBpP,aAClC,cAGM,IAFF1I,EAEC,EAFDA,aAAcN,EAEb,EAFaA,MAAwBqY,EAErC,EAFoBlY,WAAc,GACnCX,EACC,EADDA,SAAU7B,EACT,EADSA,YAEN2a,GAAuBhY,EAAad,IAAa,IAAI7B,GAE3D,MAAO,CACLqC,QACAqY,iBACA1a,cACA2a,yBAA6C7a,IAAxB6a,EjGtBW,SiGsBsCA,KAG1E,CAAEC,qBC1CsD,SAAC/Y,EAAU7B,EAAakF,GAAxB,OAAmC,SAACgI,GAC5FA,EAASyD,MACTzD,EAASvP,KACTuP,EAASpP,KACToP,E3F6B8C,SAACrL,EAAU7B,EAAakF,GAAxB,MAAoC,CAClF9H,KAAML,EAAUkI,iBAChB3H,MAAO,CACL4H,SACAlF,cACA6B,a2FlCOgZ,CAAgBhZ,EAAU7B,EAAakF,QDuChD,gBAIwB,IAHpB7C,EAGmB,EAHnBA,MAAOrC,EAGY,EAHZA,YAAa0a,EAGD,EAHCA,eAAgBC,EAGjB,EAHiBA,oBACpCC,EAEmB,EAFnBA,qBACA/Y,EACmB,EADnBA,SAAUiZ,EACS,EADTA,gBACS,EACS/C,GAAW/X,EAAaqC,GAA9C6C,EADa,EACbA,OAAQ4S,EADK,EACLA,UACVR,EAASoD,IAAmB7Y,EAC5B9B,EAAUgb,EAAS/a,GACnBgb,EjGlC4B,WiGkClBL,IAAuC5a,EAEvD,MAAO,CACL3C,KAAM2K,KAAG,CACPiT,UACAC,SAAU3D,IAAW0D,QAAsBlb,IAAXoF,GAAwBA,EAAS,EACjEpD,MAAO/B,GjGxCuB,WiGwCZ4a,EAClBO,OAAQ5D,IAAW0D,IAAYjb,IAAY+a,IAG7CH,sBAEAzV,SACA4S,YACAqD,KAZK,WAaHP,EAAqB/Y,EAAU7B,EAAakF,IAE9CkW,UAfK,WAgBHR,EAAqB/Y,EAAU7B,EAAa,OAzChBqL,EE1Ba,SAAC,GAO3C,IANLjO,EAMI,EANJA,KACA+d,EAKI,EALJA,KACAC,EAII,EAJJA,UACAlW,EAGI,EAHJA,OACA4S,EAEI,EAFJA,UACA6C,EACI,EADJA,oBAGA,OAAQvd,GACN,IAAK,WACH,OACE,kBAAC,GAAD,CAAQoN,MAAM,UAAUgB,QAAS2P,GLJC,SAACjW,EAAQ4S,GAAT,YAC5BhY,IAAXoF,QAAwCpF,IAAdgY,GAA6B5S,EAAS4S,EAE7D,oCACG5S,EACD,kBAACgV,GAAD,eAASta,EAAK,SAAd,YAA0BkY,KAG5B,8BAAO5S,GKHFmW,CAAanW,EAAQ4S,IAG5B,IAAK,UACH,OACE,kBAACgC,GAAD,KACGa,GAIP,IAAK,QAAU,IAAD,ECzBsB,SAACA,GACvC,IAAMW,GAAiD,IAApC1J,KAAK2J,KAAKZ,GAE7B,MAAO,CACLW,aACAxZ,MAAOwZ,EAAU,UACV1b,EAAK,QADK,aAC6B,EAAvB+a,EADN,YACkCN,IAAwC,EAAvBM,IAChEA,GDmB4Ba,CAAYb,GAAlC7Y,EADI,EACJA,MAAOwZ,EADH,EACGA,WAEf,OACE,kBAACvB,GAAD,CAAOC,IAAKsB,GACTxZ,GAIP,IAAK,SACH,OACE,kBAAC,GAAD,CAAQ0I,MAAM,YAAYgB,QAAS4P,GAChCxb,EAAK,qBAIZ,QACE,OACE,kBAACga,GAAD,U,oBE1CF6B,GAAQ,SAACzV,GAAD,OAA8BqC,cAAO,SAACC,GAAD,OACjD,kBAACtC,EAAD,eAAWsE,UAAU,OAAUhC,MADWD,CAEzC,CACDS,QAAS,WAGEgO,GAAQ2E,GAAMC,MAEdC,GAAYF,GAAMG,MAElB7E,GAAY1O,aAAOoT,GAAMI,MAAbxT,CAAiC,IAE7CyT,GAAczT,aAAOoT,GAAMM,MAAb1T,EAAmC,oBAC5DE,MAASgC,QAAWnN,EADwC,EACxCA,KAAM6S,EADkC,EAClCA,KAAoBjJ,EADc,EAC5B6H,WAAc7H,MADc,MAE/C,CACb,gBAAiB,CACfgV,UAAU,aAAD,OAAwB,SAAT5e,EAAkB4J,EAAQiJ,EAAK,MACvDgM,aAAc,EACdC,WAAY,UACZnR,SAAU,UACVmK,WAAY,YAIH8B,GAAWyE,GAAMU,MC7BjBC,GAAsB,kBAAM5M,cACvC,qBAAGpN,WACH,SAACA,GAAD,OAAaA,MCGFia,GAAyB,kBAAM7M,cAC1C,qBAAGhN,cACH,SAACA,GAAD,OAAgBA,MCHL8Z,GAAkB,WAC7B,IAAMC,EAAkBH,KAClBha,EAAUqN,YAAY8M,GACtBC,EAAqBH,KAHQ,EAIV5M,YAAY+M,GAA9B9B,EAJ4B,qBAMnC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACxD,GAAD,CAAiBC,SAAO,EAACpQ,MlBFO,KkBG7BnH,EAAK,iBAEPwC,EAAQmH,KAAI,gBAAG9L,EAAH,EAAGA,KAAMD,EAAT,EAASA,GAAT,OACX,kBAAC0Z,GAAD,CACEjZ,IAAKT,EACLuJ,MlBPsB,IkBQtBoQ,SAAO,EACPE,UAAQ,EACRC,OAAQoD,IAAmBld,GAE1BC,MAGL,kBAACyZ,GAAD,SCrBKuF,GAAkD,SAAC,GAIzD,IAHL5U,EAGI,EAHJA,SACAiL,EAEI,EAFJA,SACAjR,EACI,EADJA,SAEM2a,EAAqBH,KADvB,EAEqB5M,YAAY+M,GAA9B9B,EAFH,qBAIJ,OACE,kBAACxD,GAAD,CACEpE,SAAUA,EACV/L,MnBL4B,ImBM5BuQ,OAAQoD,IAAmB7Y,EAC3BuV,WAAS,EACTC,UAAQ,GAEPxP,IClBM6U,GAAwB,kBAAMlN,cACzC,kBAAgC,CAC9BpN,QADF,EAAGA,QAEDO,aAFF,EAAYA,iBAIZ,mBCPoC,SAACP,EAASO,GAC9C,IAAIga,EAAwB,GAgB5B,OAdAva,EAAQ0H,SAAQ,YAAuB,IAAhBjI,EAAe,EAAnBrE,GACX0H,EAASvC,EAAad,IAAa,GAEzC8a,EAAO9a,GAAYE,OAAOC,KAAKkD,GAAQ9D,QAAO,SAACC,EAAMpD,GACnD,IAAMqD,EAAO4D,EAAOjH,GAEpB,OAAIA,IAAQK,EAAY2B,QAA8B,IAArB2R,KAAK2J,KAAKja,GAClCD,EAGFA,EAAOC,IACb,MAGEqb,EDVwBC,CAA/B,EAAGxa,QAAH,EAAYO,kBEJDmZ,GAAkB,WAC7B,IAAMS,EAAkBH,KAClBha,EAAUqN,YAAY8M,GACtBM,EAAoBH,KACpBC,EAASlN,YAAYoN,GACrBL,EAAqBH,KALQ,EAMV5M,YAAY+M,GAA9B9B,EAN4B,qBAQnC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACxD,GAAD,CAAiBnQ,MtBLe,KsBM7BnH,EAAK,UAEPwC,EAAQmH,KAAI,gBAAO1H,EAAP,EAAGrE,GAAH,OACX,kBAAC0Z,GAAD,CACEjZ,IAAK4D,EACLkF,MtBVsB,IsBWtBsQ,UAAQ,EACRC,OAAQoD,IAAmB7Y,EAC3BuV,WAAS,GAERuF,EAAO9a,OAGZ,kBAACqV,GAAD,SC9BK4F,GAAuBtN,cAClC,qBAAGvQ,gBACH,SAACA,GAAD,OAAkBA,KCFP8d,GAAoBvN,cAC/B,qBAAG/M,aACH,SAACA,GAAD,OAAeA,KCKJua,GAA0BxN,cACrC,kBAAwD,CACtDvQ,aADF,EAAGA,aAEDoD,MAFF,EAAiBA,MAGfM,aAHF,EAAwBA,aAItBH,WAJF,EAAsCA,eAMtC,gBAAGvD,EAAH,EAAGA,aAAcoD,EAAjB,EAAiBA,MAAOM,EAAxB,EAAwBA,aAAxB,iBAAsCH,WAAtC,UCD8C,SAC9CvD,EACAoD,EACAM,EACA+X,EACAuC,GAEA,IAAMpM,EAASlO,EAAa+X,GAExBwC,EAAe,EACfC,GAAU,EAqBd,OAnBAle,EAAa6K,SAAQ,YAAsB,IAAnB9J,EAAkB,EAAlBA,YACdkF,EAAW6S,GAAW/X,EAAaqC,GAAnC6C,OACFkY,EAAmBpd,IAAgB1B,EAAY2B,OAAS4Q,KAAYA,EAAO7Q,QAKlEF,IAAXoF,GAAyBkY,IAC3BF,GAA8B,QAMjBpd,IAAXoF,GAAwB+X,IAC1BE,GAAU,QAIY,IAAjBD,GAAsBC,GD7B7BrC,CACE7b,EACAoD,EACAM,EAJJ,K3GH4B,I2GG5B,SEHW0a,GAA4B,WACvC,IAAMpe,EAAewQ,YAAYqN,IAC3BP,EAAkBH,KAClBha,EAAUqN,YAAY8M,GACtB9Z,EAAYgN,YAAYsN,IACxBjC,EAAkBrL,YAAYuN,IAMpC,OACE,kBAAC,GAAD,CAAOrO,KAAMlM,GACX,kBAAC,GAAD,MACA,kBAAC,GAAD,KACGxD,EAAasK,KAAI,gBAAG9L,EAAH,EAAGA,KAAM0C,EAAT,EAASA,MAAOH,EAAhB,EAAgBA,YAAhB,OAChB,kBAAC,GAAD,CAAU/B,IAAKR,GACb,kBAACyZ,GAAD,CACEpE,SAAU9S,IAAgB1B,EAAY2B,MACtC8G,M3BnB0B,K2BqB1B,kBAACuW,GAAA,EAAD,CAASnd,MAAOA,EAAOod,UAAU,YAAYC,WAAY,KACvD,8BAAO/f,KAGV2E,EAAQmH,KAAI,gBAAO1H,EAAP,EAAGrE,GAAH,OACX,kBAAC,GAAD,CACES,IAAK4D,EACLiR,SAAU/S,EAAQC,GAClB6B,SAAUA,GAEV,kBAAC4Y,GAAD,CACE5Y,SAAUA,EACV7B,YAAaA,EACb8a,gBAAiBA,QAIvB,kBAAC5D,GAAD,CAAiBpE,SAAU/S,EAAQC,UAIzC,kBAAC,GAAD,QCpDAmG,GAAYC,MAAkB,gBAClCC,EADkC,EAClCA,QACyBW,EAFS,EAElCuD,QAAWsE,WAAc7H,MAFS,MAG7B,CACLA,MAAO,CACLgC,QAAS3C,EAAQ,GACjB0I,gBAAiB,cACjBsE,UAAW,OACXoK,OAAO,aAAD,OAAezW,IAEvB0W,KAAM,CACJ7O,WAAY,yBAIH8O,GAAmB,SAAC,GAAkB,IAAhB9V,EAAe,EAAfA,SAAe,EACxB1B,KAAhBa,EADwC,EACxCA,MAAO0W,EADiC,EACjCA,KAEf,OACE,kBAAC9P,GAAA,EAAD,CAAQjG,MAAI,EAACK,QAAS,CAAE0V,OAAM1W,UAC3Ba,ICtBM8D,GAAsBtD,aAAOuD,KAAPvD,CAAsB,CACvDW,QAAS,EACTP,aAAc,EACdK,QAAS,SCFE8U,GAAoBvV,aAAOwF,KAAPxF,EAAoB,oBACnDE,MAAkB0K,EADiC,EAC1C4K,MAAS5K,aADiC,IACjB1I,QADiB,MAEtC,CACbiN,UAAW,SACXhN,MAJmD,EACNsT,KAAQC,KAIrDhP,gBALmD,EACUF,WAAc7H,MAK3EyB,aAAc,EACdkP,qBAAsB1E,EACtB2E,oBAAqB3E,MCTV+K,GAAsB3V,aAAOyF,KAAPzF,CAAsB,CACvDyD,eAAgB,iBCDLmS,GAAsB5V,aAAO,MAAPA,EAAc,kBAElC,CACb6V,KAAM,EACN1G,UAAW,SACX3L,UAAUxF,EALqC,EAC/CkC,MAASlC,SAIS,IAElBqC,WAAY,EACZ,gBAAiB,CACfA,WAAY,OCTHyV,GAAuB9V,aAAO,MAAPA,EAAc,oBAChDE,MACElC,EAF8C,EAE9CA,QACc+X,EAHgC,EAG9CC,WAAcD,GACWpX,EAJqB,EAI9CuD,QAAWsE,WAAc7H,MAJqB,uBAO7CoX,EAP6C,CAQhDpV,QAAS3C,EAAQ,GACjB0I,gBAAiB/H,EACjByB,aAAc,OCVH6V,GAAwBjW,aAAO,MAAPA,EAAc,oBACjDE,MACElC,EAF+C,EAE/CA,QAAuBkY,EAFwB,EAEtCF,WAAcE,GAA+BvX,EAFP,EAElBuD,QAAWsE,WAAc7H,MAFP,uBAK9CuX,EAL8C,CAMjDvV,QAAQ,GAAD,OAAK3C,EAAQ,GAAb,QACP0I,gBAAiB/H,OCFNwX,GAAqB,WAChC,IAAMjC,EAAkBH,KAClBha,EAAUqN,YAAY8M,GACtBM,EAAoBH,KACpBC,EAASlN,YAAYoN,GAE3B,OACE,oCACGza,EAAQmH,KAAI,gBAAG/L,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACX,kBAACwgB,GAAD,CAAqBhgB,IAAKT,GACxB,kBAAC2gB,GAAD,KACG1gB,GAEH,kBAAC6gB,GAAD,KACG3B,EAAOnf,U,qBCdPihB,GAAmB,WAC9B,IAAMvR,EAAWwC,cAGjB,OACE,kBAAC3B,GAAA,EAAD,CACE9F,QAAQ,YACRuC,MAAM,UACNkG,UAAW,kBAAC,KAAD,MACXlF,QAPY,kBAAM0B,EAASD,QAS1BrN,EAAK,mBChBC8e,GAAkBrW,aAAO,MAAPA,EAAc,oBAC3CE,MACW0K,EAFgC,EAEzC4K,MAAS5K,aAAgB5M,EAFgB,EAEhBA,QAAuBsY,EAFP,EAEPN,WAAcM,UAFP,IAGzCpU,QAAyBvD,EAHgB,EAG9B6H,WAAc7H,MAAiB+W,EAHD,EAGPD,KAAQC,KAHD,uBAMxCY,EANwC,CAO3CnU,MAAOuT,EACPvG,UAAW,SACXxO,QAAS3C,EAAQ,EAAG,GACpBuY,uBAAwB3L,EACxB4L,wBAAyB5L,EACzBlE,gBAAiB/H,EACjByB,aAAcpC,EAAQ,QCDXyY,GAAqBrZ,YAChC4F,aACE,kBAAqC,CACnCpM,aADF,EAAGA,aAED0D,aAFF,EAAiBA,gBAIjB,MACA,gBAAG1D,EAAH,EAAGA,aAAc0D,EAAjB,EAAiBA,aAAjB,MAAqC,CAEnCyK,SACErL,OAAOC,KAAK/C,GAAcsF,SAAWxC,OAAOC,KAC1CW,EAAaZ,OAAOC,KAAKW,GAAcZ,OAAOC,KAAKW,GAAc4B,OAAS,KAAO,IACjFA,YAIR4I,GAhBgC1H,ECJL,kBAC3B,kBAAC,GAAD,KACE,kBAACmY,GAAD,KACGhe,EAAK,aAER,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC8e,GAAD,KACG9e,EAAK,iCADR,KAC4CuB,GAE5C,kBAAC6c,GAAD,KACE,kBAAC,GAAD,WCbAe,I/GS2B/Y,GgHLV,WAAO,IAAD,EACrBgZ,ECXmCxP,cACzC,qBAAGvS,aACH,SAACA,GAAD,OAAeA,KDUTA,EAAYwS,YAAYuP,GAE9B,OACE,kBAAC,GAAD,MACG,mBACEliB,EAAWI,SACV,oCACE,kBAAC+Z,GAAD,KACE,kBAAC3G,GAAD,OAEF,kBAAC,GAAD,QANL,cASExT,EAAWyT,kBACV,kBAAC,GAAD,OAVH,cAYEzT,EAAWyQ,QACV,oCACE,kBAACuR,GAAD,MACA,kBAACvK,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QAjBL,GAoBCtX,KhHrB2C,WAAO,IAAD,EAC7BuQ,mBAASxP,EAAQ,SAAS,IAAU,QADP,oBAChDuK,EADgD,KACzC0W,EADyC,KAW1B/T,EAAqBsL,OAA1CjM,QAAWS,OAAUE,MAEvBgU,EAAUC,KAAe,CAC7B5U,QAAS,CACPnN,KAAMmL,GAER6W,UAAW,CACTC,UAAW,CACTC,aAAc,CACZvQ,gBAA2B,SAAVxG,EAxBI,OAwBiC2C,OAM9D,OACE,kBAACjF,GAAasZ,SAAd,CAAuBlc,MAAO,CAAEkF,QAAOiG,YAxBrB,WAClB,IAAMgR,EAAwC,UAAVjX,EAAoB,OAAS,QACjE0W,EAASO,GACTpc,GAAQ,QAASoc,GAEjBC,SAASC,KAAK/R,MAAMkB,WAAgC,SAAnB2Q,EAA4B,UAAY,UAoBvE,kBAACG,GAAA,EAAD,CAAepX,MAAO2W,GACpB,kBAAClZ,GAAD,U+GpCR4Z,iBACE,kBAAC,IAAD,CAAUja,MAAOA,IACf,kBAACoZ,GAAD,OAEFU,SAASI,eAAe,SvIyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.849bc019.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\nexport enum GamePhases {\n  PRE_GAME = 'preGame',\n  PLAYERS_SELECTION = 'playersSelection',\n  IN_PLAY = 'inPlay',\n}\n\nexport interface GamePhaseState {\n  gamePhase: GamePhases\n}\n\nexport const gamePhaseDefaultState: GamePhaseState = {\n  gamePhase: GamePhases.PRE_GAME,\n}\n\nenum Constants {\n  CHANGE_GAME_PHASE = 'CHANGE_GAME_PHASE',\n}\n\ninterface Entry {\n  gamePhase: GamePhases\n}\n\ntype GamePhaseActionReturn = ActionWithEntry<Constants, Entry>\n\nexport type ChangeGamePhase = (gamePhase: Entry['gamePhase']) => GamePhaseActionReturn\n\nexport const changeGamePhase: ChangeGamePhase = (gamePhase) => ({\n  type: Constants.CHANGE_GAME_PHASE,\n  entry: {\n    gamePhase,\n  },\n})\n\nexport const gamePhase: Reducer<GamePhases, GamePhaseActionReturn> = (state = gamePhaseDefaultState.gamePhase, { type, entry }) => {\n  switch (type) {\n    case Constants.CHANGE_GAME_PHASE: {\n      return entry.gamePhase\n    }\n    default:\n      return state\n  }\n}\n","import { makeId } from '../../helpers/makeId'\nimport { ActionWithEntry } from '../../helpers/types'\nimport { Action, Reducer } from 'redux'\nimport update from 'immutability-helper'\n\nexport interface Player {\n  id: string\n  name?: string\n}\n\nexport interface PlayersState {\n  players: Player[]\n}\n\nexport type PlayersTotals = {\n  [playerId: string]: number\n}\n\nexport const playersDefaultState: Player[] = [\n  {\n    id: '1d777e55-8009-45e7-81b6-2651ad80399c',\n    name: 'Давид',\n  },\n  {\n    id: '7e4f7e04-6611-43b0-b847-60256f527519',\n    name: 'Варечка',\n  },\n]\n\nenum Constants {\n  ADD_PLAYER = 'ADD_PLAYER',\n  REMOVE_PLAYER = 'REMOVE_PLAYER',\n  RESET_PLAYERS = 'RESET_PLAYERS',\n}\n\ntype PlayersActionReturn = ActionWithEntry<Constants, Player>\n\nexport type AddPlayer = (name: Player['name']) => PlayersActionReturn\n\nexport const addPlayer: AddPlayer = (name) => ({\n  type: Constants.ADD_PLAYER,\n  entry: {\n    id: makeId(),\n    name,\n  },\n})\n\nexport type RemovePlayer = (id: Player['id']) => PlayersActionReturn\n\nexport const removePlayer: RemovePlayer = (id) => ({\n  type: Constants.REMOVE_PLAYER,\n  entry: {\n    id,\n  },\n})\n\nexport const resetPlayers = (): Action => ({\n  type: Constants.RESET_PLAYERS,\n})\n\nexport const players: Reducer<Player[], PlayersActionReturn> = (state = playersDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.ADD_PLAYER: {\n      return update(state, {\n        $push: [entry],\n      })\n    }\n    case Constants.REMOVE_PLAYER:\n      return update(state, {\n        $splice: [[state.findIndex(({ id }) => id === entry.id), 1]],\n      })\n    case Constants.RESET_PLAYERS:\n      return playersDefaultState\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\nexport type Dices = number[]\n\nexport interface DicesState {\n  dices: Dices\n}\n\nexport const DICES_COUNT = 5\n\nenum Constants {\n  GENERATE_RANDOM_DICES = 'GENERATE_RANDOM_DICES',\n  UPDATE_DICES = 'UPDATE_DICES',\n  RESET_DICES = 'RESET_DICES',\n}\n\ntype DicesActionReturn = ActionWithEntry<Constants, Dices>\n\nexport const dicesDefaultState: Dices = [-1, -1, -1, -1, -1]\n\ntype GenerateRandomDices = (dices: Dices) => DicesActionReturn\n\nexport const generateRandomDices: GenerateRandomDices = (dices) => ({\n  type: Constants.GENERATE_RANDOM_DICES,\n  entry: dices,\n})\n\ntype ResetDices = () => DicesActionReturn\n\nexport const resetDices: ResetDices = () => ({\n  type: Constants.RESET_DICES,\n  entry: [],\n})\n\nexport const dices: Reducer<Dices, DicesActionReturn> = (state = dicesDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.GENERATE_RANDOM_DICES:\n    case Constants.UPDATE_DICES:\n      // TODO: find out WTF ?? why just \"return entry\" is not working\n      return [...entry]\n    case Constants.RESET_DICES:\n      return [...dicesDefaultState]\n    default:\n      return state\n  }\n}\n","import { Dices } from './dices'\nimport { ActionWithEntry } from '../../helpers/types'\nimport { Action, Reducer } from 'redux'\nimport update from 'immutability-helper'\n\nexport interface DicesSelectedState {\n  dicesSelected: Dices\n}\n\nenum Constants {\n  SELECT_DICE = 'SELECT_DICE',\n  UNSELECT_ALL_DICES = 'UNSELECT_ALL_DICES',\n}\n\ntype DicesSelectedActionReturn = ActionWithEntry<Constants, Dices>\n\nexport const dicesSelectedDefaultState: Dices = []\n\nexport type SelectDice = (diceIndex: number) => DicesSelectedActionReturn\n\nexport const selectDice: SelectDice = (diceIndex) => ({\n  type: Constants.SELECT_DICE,\n  entry: [diceIndex],\n})\n\nexport type UnselectAllDices = () => Action\n\nexport const unselectAllDices: UnselectAllDices = () => ({\n  type: Constants.UNSELECT_ALL_DICES,\n})\n\nexport const dicesSelected: Reducer<Dices, DicesSelectedActionReturn> = (state = dicesSelectedDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.SELECT_DICE: {\n      const diceIndex = entry[0]\n      const index = state.indexOf(diceIndex)\n      if (index !== -1) {\n        return update(state, { $splice: [[index, 1]] })\n      }\n      return state.length === 4 ? state : update(state, { $push: [diceIndex] })\n    }\n    case Constants.UNSELECT_ALL_DICES:\n      return [...dicesSelectedDefaultState]\n    default:\n      return state\n  }\n}\n","import { ActionWithEntry } from '../../helpers/types'\nimport { Reducer } from 'redux'\n\ntype Loading = boolean\n\nexport interface LoadingState {\n  loading: Loading\n}\n\nenum Constants {\n  SET_LOADING = 'SET_LOADING',\n}\n\ntype LoadingActionReturn = ActionWithEntry<Constants, Loading>\n\nexport const loadingDefaultState: Loading = false\n\nexport type SetLoading = (flag: Loading) => LoadingActionReturn\n\nexport const setLoading: SetLoading = (flag) => ({\n  type: Constants.SET_LOADING,\n  entry: flag\n})\n\nexport const loading: Reducer<Loading, LoadingActionReturn> = (state = loadingDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.SET_LOADING: {\n      return entry\n    }\n    default:\n      return state\n  }\n}\n","import { State } from '../redux/defaultState'\n\n/**\n * Get item from localStorage\n */\nexport const getItem = (key: keyof State | 'theme', parse = true) => {\n  const item = localStorage.getItem(key)\n\n  return parse ? JSON.parse(item!) : item\n}\n","import { ActionWithEntry, ThunkAction } from '../../helpers/types'\nimport { Reducer } from 'redux'\n\nexport type DiceSize = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n\nconst increaseDecreaseStep = 1\nexport const minDiceSize: DiceSize = 1\nexport const maxDiceSize: DiceSize = 9\n\nexport interface DiceSizeState {\n  diceSize: DiceSize\n}\n\nenum Constants {\n  INCREASE_DICE_SIZE = 'INCREASE_DICE_SIZE',\n  DECREASE_DICE_SIZE = 'DECREASE_DICE_SIZE'\n}\n\ntype DiceSizeReturn = ActionWithEntry<Constants, DiceSize>\n\nexport const diceSizeDefaultState: DiceSize = 5\n\nexport type DiceSizeThunk = ThunkAction\n\nexport const increaseDiceSize: DiceSizeThunk = () => (dispatch, getState) => {\n  const { diceSize } = getState()\n  if (diceSize < maxDiceSize) {\n    dispatch<DiceSizeReturn>({\n      type: Constants.INCREASE_DICE_SIZE,\n      entry: (diceSize + increaseDecreaseStep as DiceSize),\n    })\n  }\n}\n\nexport const decreaseDiceSize: DiceSizeThunk = () => (dispatch, getState) => {\n  const { diceSize } = getState()\n  if (diceSize > minDiceSize) {\n    dispatch<DiceSizeReturn>({\n      type: Constants.DECREASE_DICE_SIZE,\n      entry: (diceSize - increaseDecreaseStep as DiceSize),\n    })\n  }\n}\n\nexport const diceSize: Reducer<DiceSize, DiceSizeReturn> = (state = diceSizeDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.INCREASE_DICE_SIZE:\n    case Constants.DECREASE_DICE_SIZE:\n      return entry\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\nexport type Language = 'rus' | 'eng'\n\nexport interface LanguageState {\n  language: Language\n}\n\nenum Constants {\n  CHANGE_LANGUAGE = 'CHANGE_LANGUAGE'\n}\n\ntype LanguageActionReturn = ActionWithEntry<Constants, Language>\n\nexport const languageDefaultState: Language = 'rus'\n\ntype ChangeLanguage = (lang: Language) => LanguageActionReturn\n\nexport const changeLanguage: ChangeLanguage = (lang) => ({\n  type: Constants.CHANGE_LANGUAGE,\n  entry: lang,\n})\n\nexport const language: Reducer<Language, LanguageActionReturn> = (state = languageDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.CHANGE_LANGUAGE: {\n      return entry\n    }\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\nimport { DICES_COUNT } from './dices'\nimport { i18n } from '../../helpers/i18n/i18n'\n\nexport enum Combination {\n  ONE = 1,\n  TWO,\n  THREE,\n  FOUR,\n  FIVE,\n  SIX,\n  BONUS = 'bonus',\n  SMALL_STRAIGHT = 'smallStraight',\n  BIG_STRAIGHT = 'bigStraight',\n  TWO_PAIR = 'twoPair',\n  FULL_HOUSE = 'fullHouse',\n  THE_YACHT = 'theYacht',\n  CHANCE = 'chance',\n  EQUAL_3 = 'equal_3',\n  EQUAL_4 = 'equal_4',\n}\n\nexport type EMPTY_CELL = '—'\n\nexport const EMPTY_CELL: EMPTY_CELL = '—'\n\nexport const BONUS_CONDITION = 63\n\nexport const BONUS_POINTS = 35\n\nexport const isBonus = (combination: Combination) => combination === Combination.BONUS\n\nexport interface CombinationInfo {\n  name: string\n  title: string\n  combination: Combination\n  max: number\n}\n\nexport interface CombinationsState {\n  combinations: CombinationInfo[]\n}\n\ntype CombinationsReturn = ActionWithEntry<{}, CombinationInfo[]>\n\nexport const combinationsDefaultState: CombinationInfo[] = [\n  {\n    name: i18n('combination.ones'),\n    title: i18n('combination.ones.title'),\n    combination: Combination.ONE,\n    max: Combination.ONE * DICES_COUNT,\n  },\n  {\n    name: i18n('combination.twos'),\n    title: i18n('combination.twos.title'),\n    combination: Combination.TWO,\n    max: Combination.TWO * DICES_COUNT,\n  },\n  {\n    name: i18n('combination.threes'),\n    title: i18n('combination.threes.title'),\n    combination: Combination.THREE,\n    max: Combination.THREE * DICES_COUNT,\n  },\n  {\n    name: i18n('combination.fours'),\n    title: i18n('combination.fours.title'),\n    combination: Combination.FOUR,\n    max: Combination.FOUR * DICES_COUNT,\n  },\n  {\n    name: i18n('combination.fives'),\n    title: i18n('combination.fives.title'),\n    combination: Combination.FIVE,\n    max: Combination.FIVE * DICES_COUNT,\n  },\n  {\n    name: i18n('combination.sixes'),\n    title: i18n('combination.sixes.title'),\n    combination: Combination.SIX,\n    max: Combination.SIX * DICES_COUNT,\n  },\n  {\n    name: i18n('combination.bonus'),\n    title: i18n('combination.bonus.title'),\n    combination: Combination.BONUS,\n    max: BONUS_POINTS,\n  },\n  {\n    name: i18n('combination.threeOfAKind'),\n    title: i18n('combination.threeOfAKind.title'),\n    combination: Combination.EQUAL_3,\n    max: Combination.SIX * 3,\n  },\n  {\n    name: i18n('combination.fourOfAKind'),\n    title: i18n('combination.fourOfAKind.title'),\n    combination: Combination.EQUAL_4,\n    max: Combination.SIX * 4,\n  },\n  {\n    name: i18n('combination.smallStraight'),\n    title: i18n('combination.smallStraight.title'),\n    combination: Combination.SMALL_STRAIGHT,\n    max: 25,\n  },\n  {\n    name: i18n('combination.bigStraight'),\n    title: i18n('combination.bigStraight.title'),\n    combination: Combination.BIG_STRAIGHT,\n    max: 30,\n  },\n  {\n    name: i18n('combination.twoPair'),\n    title: i18n('combination.twoPair.title'),\n    combination: Combination.TWO_PAIR,\n    max: 25,\n  },\n  {\n    name: i18n('combination.fullHouse'),\n    title: i18n('combination.fullHouse.title'),\n    combination: Combination.FULL_HOUSE,\n    max: 30,\n  },\n  {\n    name: i18n('combination.yacht'),\n    title: i18n('combination.yacht.title'),\n    combination: Combination.THE_YACHT,\n    max: 50,\n  },\n  {\n    name: i18n('combination.chance'),\n    title: i18n('combination.chance.title'),\n    combination: Combination.CHANCE,\n    max: Combination.SIX * 5,\n  },\n]\n\nexport const MAX_POSSIBLE_POINTS = combinationsDefaultState.reduce(\n  (prev, curr) => prev + curr.max,\n  0,\n)\n\nexport const combinations: Reducer<CombinationInfo[], CombinationsReturn> = (\n  state = combinationsDefaultState,\n) => state\n","import { getItem } from '../getItem'\nimport { Language, languageDefaultState } from '../../redux/reducers/language'\nimport { i18nKeys } from './i18nKeys'\nimport { rus } from './rus'\nimport { eng } from './eng'\n\ntype I18n = (key: i18nKeys | string) => string\n\nconst lang: Language = getItem('language') || languageDefaultState\n\nexport type LanguageMap = {\n  [key in i18nKeys]: string\n}\n\ntype LanguagesMap = {\n  [lang in Language]: LanguageMap}\n\nconst languagesMap: LanguagesMap = {\n  rus,\n  eng,\n}\n\nexport const i18n: I18n = (key) => {\n  const res = languagesMap[lang][key as i18nKeys]\n\n  if (res === undefined) {\n    return `~${key}~`\n  }\n\n  return res\n}\n","import { LanguageMap } from './i18n'\n\nexport const rus: LanguageMap = {\n  yacht: 'Яхта',\n  darkTheme: 'Темная тема',\n  language: 'Язык',\n  compactTable: 'Компактная таблица',\n  diceSize: 'Размер костей',\n  playerNo: 'Игрок №',\n  currentGameWillBeLost: 'Текущая игра будет утеряна.',\n  combinations: 'Комбинации',\n  total: 'Итог',\n  gameOver: 'Игра окончена',\n  maximumPossibleNumberOfPoints: 'Максимально возможное количество очков',\n  ofMax: 'из макс.',\n  more: 'еще',\n  points1: 'очков',\n  points2: 'очко',\n  points3: 'очка',\n  points4: 'очков',\n\n  'button.startGame': 'Начать игру',\n  'button.restartGame': 'Начать заново',\n  'button.startNewGame': 'начать новую игру',\n  'button.cancel': 'Отмена',\n  'button.add': 'Добавить',\n  'button.reset': 'Сброс',\n  'button.reset2': 'Сбросить',\n  'button.dropDices': 'Бросить кости',\n  'button.addPlayer': 'Добавить игрока',\n  'button.writeDownYourPoints': 'Запишите ваши очки',\n  'button.goHome': 'На главную',\n  'button.strikeOut': 'Вычеркнуть',\n\n  'combination.ones': 'Единицы',\n  'combination.ones.title': 'Сумма всех костей, на которых выпали 1',\n  'combination.twos': 'Двойки',\n  'combination.twos.title': 'Сумма всех костей, на которых выпали 2',\n  'combination.threes': 'Тройки',\n  'combination.threes.title': 'Сумма всех костей, на которых выпали 3',\n  'combination.fours': 'Четверки',\n  'combination.fours.title': 'Сумма всех костей, на которых выпали 4',\n  'combination.fives': 'Пятерки',\n  'combination.fives.title': 'Сумма всех костей, на которых выпали 5',\n  'combination.sixes': 'Шестёрки',\n  'combination.sixes.title': 'Сумма всех костей, на которых выпали 6',\n  'combination.bonus': 'Бонус',\n  'combination.bonus.title': 'Если игрок набирает по крайней мере 63 очков (по три кости с каждым числом) в верхней секции, он получает бонус в виде 35 очков',\n\n  'combination.threeOfAKind': 'Сэт',\n  'combination.threeOfAKind.title': 'Три кости, на которых выпали одинаковые значения. В очки записывается сумма этих трёх костей.',\n  'combination.fourOfAKind': 'Карэ',\n  'combination.fourOfAKind.title': 'Четыре кости, на которых выпали одинаковые значения. В очки записывается сумма этих четырёх костей.',\n  'combination.smallStraight': 'Младший стрит',\n  'combination.smallStraight.title': 'Любые четыре последовательных числа (1, 2, 3, 4 или 2, 3, 4, 5 или 3, 4, 5, 6). Записывается 25 очков.',\n  'combination.bigStraight': 'Старший стрит',\n  'combination.bigStraight.title': 'Пять последовательных чисел (1, 2, 3, 4, 5 или 2, 3, 4, 5, 6). Записывается 30 очков.',\n  'combination.twoPair': 'Две пары',\n  'combination.twoPair.title': 'Две пары любых одинаковых костей. Записывается 25 очков',\n  'combination.fullHouse': 'Фул Хаус',\n  'combination.fullHouse.title': 'Пара и тройка любых одинаковых костей. Записывается 30 очков.',\n  'combination.yacht': 'Яхта',\n  'combination.yacht.title': 'Пять костей, на которых выпали одинаковые значения. Записывается 50 очков.',\n  'combination.chance': 'Шанс',\n  'combination.chance.title': 'Записывается сумма всех выпавших костей.',\n\n  'help.intro': 'Яхта — народная игра в кости, напоминающая Покер на костях, предшественник игры Yahtzee.',\n  'help.gameplay.header': 'Ход игры',\n  'help.gameplay.text': 'В яхту можно играть в одиночку или с любым количеством противников. Игроки ходят по очереди, бросая одновременно пять костей. После каждого броска игрок выбирает, какие кости оставить, а какие перебросить. Игрок может перебросить любое количество (включая все пять) костей два раза за ход. В каждом ходе необходимо записать очки за одну из возможных комбинаций, если подходящих не осталось, то нужно написать 0 за любую. Каждую комбинацию можно записать только один раз. Игрок с наибольшим количеством очков в конце игры побеждает.',\n  'help.scoring.header': 'Подсчёт очков',\n  'help.scoring.text': 'Очки записываются за следующие комбинации:',\n  'help.topSection': 'Верхняя секция:',\n  'help.topSection.tip': 'Если игрок набирает по крайней мере 63 очков (по три кости с каждым числом) в верхней секции, он получает бонус в виде 35 очков.',\n  'help.bottomSection': 'Нижняя секция:',\n}\n","import { LanguageMap } from './i18n'\n\nexport const eng: LanguageMap = {\n  yacht: 'Yacht',\n  darkTheme: 'Dark theme',\n  language: 'Language',\n  compactTable: 'Compact table',\n  diceSize: 'Dice size',\n  playerNo: 'Player #',\n  currentGameWillBeLost: 'Current game will be lost.',\n  combinations: 'Combinations',\n  total: 'Total',\n  gameOver: 'Game over',\n  maximumPossibleNumberOfPoints: 'Maximum possible number of points',\n  ofMax: 'of max',\n  more: '',\n  points1: 'points left',\n  points2: 'points left',\n  points3: 'points left',\n  points4: 'points left',\n\n  'button.startGame': 'Start game',\n  'button.restartGame': 'Restart game',\n  'button.startNewGame': 'start new game',\n  'button.cancel': 'Cancel',\n  'button.add': 'Add',\n  'button.reset': 'Reset',\n  'button.reset2': 'Reset',\n  'button.dropDices': 'Drop dices',\n  'button.addPlayer': 'Add player',\n  'button.writeDownYourPoints': 'Write down your points',\n  'button.goHome': 'Go home',\n  'button.strikeOut': 'Strike out',\n\n  'combination.ones': 'Ones',\n  'combination.ones.title': 'The sum of dice with the number 1',\n  'combination.twos': 'Twos',\n  'combination.twos.title': 'The sum of dice with the number 2',\n  'combination.threes': 'Threes',\n  'combination.threes.title': 'The sum of dice with the number 3',\n  'combination.fours': 'Fours',\n  'combination.fours.title': 'The sum of dice with the number 4',\n  'combination.fives': 'Fives',\n  'combination.fives.title': 'The sum of dice with the number 5',\n  'combination.sixes': 'Sixes',\n  'combination.sixes.title': 'The sum of dice with the number 6',\n  'combination.bonus': 'Bonus',\n  'combination.bonus.title': 'If a player scores a total of 63 or more points in these six boxes, a bonus of 35 is added to the upper section score.',\n\n  'combination.threeOfAKind': 'Three of a Kind',\n  'combination.threeOfAKind.title': 'At least three dice showing the same face. Sum of those four dice',\n  'combination.fourOfAKind': 'Four of a kind',\n  'combination.fourOfAKind.title': 'At least four dice showing the same face. Sum of those four dice',\n  'combination.smallStraight': 'Small Straight',\n  'combination.smallStraight.title': 'Four sequential dice (1-2-3-4, 2-3-4-5, or 3-4-5-6). 25 points',\n  'combination.bigStraight': 'Big straight',\n  'combination.bigStraight.title': 'Five sequential dice (1-2-3-4-5 or 2-3-4-5-6). 30 points',\n  'combination.twoPair': 'Two pair',\n  'combination.twoPair.title': 'Two of one number and two of another. 25 points',\n  'combination.fullHouse': 'Full house',\n  'combination.fullHouse.title': 'Three of one number and two of another. 30 points',\n  'combination.yacht': 'Yacht',\n  'combination.yacht.title': 'All five dice showing the same face. 50 points',\n  'combination.chance': 'Chance',\n  'combination.chance.title': 'Any combination. Sum of all dice',\n\n  'help.intro': 'Yacht - is a public domain dice game, similar to the Latin American game Generala, the English game of Poker Dice, the Scandinavian Yatzy, and Cheerio.',\n  'help.gameplay.header': 'Gameplay',\n  'help.gameplay.text': 'The object of the game is to score points by rolling five dice to make certain combinations. The dice can be rolled up to three times in a turn to try to make these combinations. A game consists of twelve rounds. After each round the player chooses which scoring category is to be used for that round. Once a category has been used in the game, it cannot be used again. The scoring categories have varying point values, some of which are fixed values and others where the score depends on the value of the dice. A Yacht is five-of-a-kind and scores 50 points; the highest of any category. The winner is the player who scores the most points.',\n  'help.scoring.header': 'Scoring',\n  'help.scoring.text': 'The following are categories and the points scored in those categories:',\n  'help.topSection': 'Top section',\n  'help.topSection.tip': 'If a player scores a total of 63 or more points in these six boxes, a bonus of 35 is added to the upper section score.',\n  'help.bottomSection': 'Bottom section'\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\nenum Constants {\n  NEXT_TURN = 'NEXT_TURN',\n  INCREASE_SHOT = 'INCREASE_SHOT',\n  RESET_PLAYER_MOVE = 'RESET_PLAYER_MOVE',\n}\n\ntype Move = [string, number]\n\nexport interface PlayerMoveState {\n  playerMove: Move\n}\n\nexport const MAX_SHOT_COUNT = 3\n\ntype PlayerMoveActionReturn = ActionWithEntry<Constants, Move>\n\nexport const playerMoveDefaultState: PlayerMoveState['playerMove'] = ['', 0]\n\ntype NextTurn = (move: Move) => PlayerMoveActionReturn\n\nexport const nextTurn: NextTurn = (move) => ({\n  type: Constants.NEXT_TURN,\n  entry: move,\n})\n\ntype IncreaseShot = () => PlayerMoveActionReturn\n\nexport const increaseShot: IncreaseShot = () => ({\n  type: Constants.INCREASE_SHOT,\n  entry: playerMoveDefaultState,\n})\n\ntype ResetPlayerMove = () => PlayerMoveActionReturn\n\nexport const resetPlayerMove: ResetPlayerMove = () => ({\n  type: Constants.RESET_PLAYER_MOVE,\n  entry: playerMoveDefaultState,\n})\n\nexport const playerMove: Reducer<Move, PlayerMoveActionReturn> = (state = playerMoveDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.INCREASE_SHOT: {\n      const { 0: playerId, 1: shot } = state\n      return [playerId, shot + 1]\n    }\n    case Constants.NEXT_TURN:\n      return entry\n    case Constants.RESET_PLAYER_MOVE:\n      return entry\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry, ThunkAction } from '../../helpers/types'\n\nenum Constants {\n  TOGGLE_TABLE_SIZE = 'TOGGLE_TABLE_SIZE'\n}\n\nexport enum TableSizes {\n  MEDIUM = 'medium',\n  SMALL = 'small',\n}\n\ntype TableSizeReturnType = ActionWithEntry<Constants, TableSizeState['tableSize']>\n\nexport interface TableSizeState {\n  tableSize: TableSizes\n}\n\nexport const tableSizeDefaultState: TableSizeState['tableSize'] = TableSizes.MEDIUM\n\nexport type ToggleSize = ThunkAction\n\nexport const toggleSize: ToggleSize = () => (dispatch, getState) => {\n  const { tableSize } = getState()\n  dispatch<TableSizeReturnType>({\n    type: Constants.TOGGLE_TABLE_SIZE,\n    entry: (tableSize === TableSizes.SMALL) ? TableSizes.MEDIUM : TableSizes.SMALL,\n  })\n}\n\nexport const tableSize: Reducer<TableSizeState['tableSize'], TableSizeReturnType> = (state = tableSizeDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.TOGGLE_TABLE_SIZE: {\n      return entry\n    }\n    default:\n      return state\n  }\n}\n","import { Reducer } from 'redux'\nimport { ActionWithEntry } from '../../helpers/types'\n\ntype DrawerOpened = boolean\n\nexport interface DrawerOpenedState {\n  drawerOpened: DrawerOpened\n}\n\nenum Constants {\n  TOGGLE_DRAWER_OPENED = 'TOGGLE_DRAWER_OPENED',\n}\n\ntype DrawerOpenedActionReturn = ActionWithEntry<Constants, DrawerOpened>\n\nexport const drawerOpenedDefaultState: DrawerOpened = false\n\nexport type ToggleDrawerOpened = (flag: boolean) => DrawerOpenedActionReturn\n\nexport const toggleDrawerOpened: ToggleDrawerOpened = (flag) => ({\n  type: Constants.TOGGLE_DRAWER_OPENED,\n  entry: flag,\n})\n\nexport const drawerOpened: Reducer<DrawerOpened, DrawerOpenedActionReturn> = (state = drawerOpenedDefaultState, { type, entry }) => {\n  switch (type) {\n    case Constants.TOGGLE_DRAWER_OPENED: {\n      return entry\n    }\n    default:\n      return state\n  }\n}\n","import { Action, Reducer } from 'redux'\nimport { Combination } from './combinations'\nimport { ActionWithEntry, Parameters } from '../../helpers/types'\nimport { Player } from './players'\nimport { CheckMatch } from '../../helpers/checkMatch'\nimport update from 'immutability-helper'\nimport { calcBonus } from '../../helpers/calcBonus'\n\nexport type Points = {\n  [key in Combination]?: number\n}\n\nexport interface PlayerPoints {\n  [playerId: string]: Points\n}\n\nexport interface PlayerPointsState {\n  playerPoints: PlayerPoints\n}\n\nenum Constants {\n  SAVE_COMBINATION = 'SAVE_COMBINATION',\n  RESET_PLAYER_POINTS = 'RESET_PLAYER_POINTS',\n}\n\nexport const playerPointsDefaultState: PlayerPoints = {}\n\nexport type SaveCombinationParams = Parameters<SaveCombination>\n\nexport type SaveCombinationReturn = ReturnType<SaveCombination>\n\ntype SaveCombination = (\n  playerId: Player['id'],\n  combination: Combination,\n  points: ReturnType<CheckMatch>['points'],\n) => ActionWithEntry<Constants, {\n  playerId: SaveCombinationParams[0],\n  combination: SaveCombinationParams[1],\n  points: SaveCombinationParams[2],\n}>\n\nexport const saveCombination: SaveCombination = (playerId, combination, points) => ({\n  type: Constants.SAVE_COMBINATION,\n  entry: {\n    points,\n    combination,\n    playerId,\n  },\n})\n\ntype ResetPlayerPoints = () => Action\n\nexport const resetPlayerPoints: ResetPlayerPoints = () => ({\n  type: Constants.RESET_PLAYER_POINTS,\n})\n\nexport const playerPoints: Reducer<PlayerPoints, SaveCombinationReturn> = (\n  state = playerPointsDefaultState,\n  { type, entry },\n) => {\n  switch (type) {\n    case Constants.SAVE_COMBINATION:\n      const { playerId, combination, points } = entry\n\n      state = update(state, state[playerId] ? {\n        [playerId]: {\n          $merge: {\n            [combination]: points,\n          },\n        },\n      } : {\n        $merge: {\n          [playerId]: {\n            [combination]: points,\n          },\n        },\n      })\n\n      return update(state, {\n        [playerId]: {\n          [Combination.BONUS]: {\n            $set: calcBonus(state, playerId),\n          },\n        },\n      })\n    case Constants.RESET_PLAYER_POINTS:\n      return update(playerPointsDefaultState, {})\n    default:\n      return state\n  }\n}\n","import { PlayerPoints } from '../redux/reducers/playerPoints'\nimport { BONUS_CONDITION, BONUS_POINTS } from '../redux/reducers/combinations'\n\nexport const calcBonus = (state: PlayerPoints, playerId: keyof PlayerPoints): number => {\n  const bonus = Object.keys(state[playerId]).reduce((prev, curr) => (\n    // @ts-ignore FIXME typings!!!\n    isNaN(parseInt(curr, 10)) ? prev : prev + state[playerId][curr]\n  ), 0)\n\n  return bonus >= BONUS_CONDITION ? BONUS_POINTS : (BONUS_CONDITION - bonus) * -1\n}\n","import { gamePhaseDefaultState } from './reducers/gamePhase'\nimport { playersDefaultState } from './reducers/players'\nimport { dicesDefaultState } from './reducers/dices'\nimport { dicesSelectedDefaultState } from './reducers/dicesSelected'\nimport { getItem } from '../helpers/getItem'\nimport { loadingDefaultState } from './reducers/loading'\nimport { diceSizeDefaultState } from './reducers/diceSize'\nimport { combinationsDefaultState } from './reducers/combinations'\nimport { playerMoveDefaultState } from './reducers/playerMove'\nimport { tableSizeDefaultState } from './reducers/tableSize'\nimport { drawerOpenedDefaultState } from './reducers/drawerOpened'\nimport { playerPointsDefaultState } from './reducers/playerPoints'\nimport { languageDefaultState } from './reducers/language'\n\nexport let gamePhase = gamePhaseDefaultState.gamePhase\nexport let players = playersDefaultState\nexport let dices = dicesDefaultState\nexport let dicesSelected = dicesSelectedDefaultState\nexport let loading = loadingDefaultState\nexport let diceSize = diceSizeDefaultState\nexport let combinations = combinationsDefaultState\nexport let playerMove = playerMoveDefaultState\nexport let tableSize = tableSizeDefaultState\nexport let drawerOpened = drawerOpenedDefaultState\nexport let playerPoints = playerPointsDefaultState\nexport let language = languageDefaultState\n\ntry {\n  gamePhase = getItem('gamePhase', false) || gamePhase\n  players = getItem('players') || players\n  dices = getItem('dices') || dices\n  dicesSelected = getItem('dicesSelected') || dicesSelected\n  loading = getItem('loading') || loading\n  diceSize = getItem('diceSize') || diceSize\n  combinations = getItem('combinations') || combinations\n  playerMove = getItem('playerMove') || playerMove\n  tableSize = getItem('tableSize') || tableSize\n  drawerOpened = getItem('drawerOpened') || drawerOpened\n  playerPoints = getItem('playerPoints') || playerPoints\n  language = getItem('language') || language\n} catch (e) {\n  console.error(e)\n}\n","import { GamePhaseState } from './reducers/gamePhase'\nimport { PlayersState } from './reducers/players'\nimport { DicesState } from './reducers/dices'\nimport { DicesSelectedState } from './reducers/dicesSelected'\nimport {\n  gamePhase,\n  players,\n  dices,\n  dicesSelected,\n  loading,\n  diceSize,\n  combinations,\n  playerMove,\n  tableSize,\n  drawerOpened,\n  playerPoints,\n  language,\n} from './getStateFromStorage'\nimport { LoadingState } from './reducers/loading'\nimport { DiceSizeState } from './reducers/diceSize'\nimport { CombinationsState } from './reducers/combinations'\nimport { PlayerMoveState } from './reducers/playerMove'\nimport { TableSizeState } from './reducers/tableSize'\nimport { DrawerOpenedState } from './reducers/drawerOpened'\nimport { PlayerPointsState } from './reducers/playerPoints'\nimport { LanguageState } from './reducers/language'\n\nexport interface State\n  extends GamePhaseState, PlayersState, DicesState, DicesSelectedState,\n    LoadingState, DiceSizeState, CombinationsState,\n    PlayerMoveState, TableSizeState, DrawerOpenedState, PlayerPointsState, LanguageState {\n}\n\nexport const defaultState: State = {\n  gamePhase,\n  players,\n  dices,\n  dicesSelected,\n  loading,\n  diceSize,\n  combinations,\n  playerMove,\n  tableSize,\n  drawerOpened,\n  playerPoints,\n  language,\n}\n","export const toString = (obj: any): string => (\n  JSON.stringify(obj.toJSON ? obj.toJSON() : obj)\n)\n","import { State } from '../redux/defaultState'\n\nexport const setItem = (key: keyof State | 'theme', value: string) => (\n  localStorage.setItem(key, value)\n)\n","import thunk from 'redux-thunk'\nimport { applyMiddleware, combineReducers, compose, createStore, Reducer, Store } from 'redux'\nimport { defaultState, State } from './defaultState'\nimport { gamePhase } from './reducers/gamePhase'\nimport { subscriptions } from './subscriptions'\nimport { players } from './reducers/players'\nimport { dices } from './reducers/dices'\nimport { dicesSelected } from './reducers/dicesSelected'\nimport { loading } from './reducers/loading'\nimport { diceSize } from './reducers/diceSize'\nimport { combinations } from './reducers/combinations'\nimport { playerMove } from './reducers/playerMove'\nimport { tableSize } from './reducers/tableSize'\nimport { drawerOpened } from './reducers/drawerOpened'\nimport { playerPoints } from './reducers/playerPoints'\nimport { language } from './reducers/language'\n\nconst middleware = [thunk]\n\nconst reducers: Reducer<State> = combineReducers<State>({\n  players,\n  gamePhase,\n  dices,\n  dicesSelected,\n  loading,\n  diceSize,\n  combinations,\n  playerMove,\n  tableSize,\n  drawerOpened,\n  playerPoints,\n  language,\n})\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middleware),\n)\n\nexport const store: Store<State> = createStore(reducers, defaultState, enhancer)\n\nsubscriptions(store)\n","import { Store, Unsubscribe } from 'redux'\nimport { State } from './defaultState'\nimport { toString } from '../helpers/toString'\nimport { setItem } from '../helpers/setItem'\n\ntype Subscriptions = (store: Store<State>) => Unsubscribe\n\nexport const subscriptions: Subscriptions = ({ subscribe, getState }) => subscribe(() => {\n  const {\n    gamePhase, players, dices, dicesSelected, diceSize, playerMove, tableSize, drawerOpened, playerPoints, language,\n  } = getState()\n\n  setItem('gamePhase', gamePhase)\n  setItem('players', toString(players))\n  setItem('dices', toString(dices))\n  setItem('dicesSelected', toString(dicesSelected))\n  setItem('diceSize', toString(diceSize))\n  setItem('playerMove', toString(playerMove))\n  setItem('tableSize', toString(tableSize))\n  setItem('drawerOpened', toString(drawerOpened))\n  setItem('playerPoints', toString(playerPoints))\n  setItem('language', toString(language))\n})\n","import React, { createContext, FC, useState } from 'react'\nimport { PaletteType, Theme } from '@material-ui/core'\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme'\nimport ThemeProvider from '@material-ui/styles/ThemeProvider'\nimport { getItem } from './getItem'\nimport { setItem } from './setItem'\nimport useTheme from '@material-ui/core/styles/useTheme'\n\nexport interface ThemeProviderHOCProps {\n  toggleTheme?(): void\n\n  theme?: PaletteType\n}\n\n// TODO: get this color from theme\nexport const mainDarkBGColor = '#333'\n\nexport const ThemeContext = createContext<ThemeProviderHOCProps>({})\n\nexport const themeProviderHOC = (Component: FC) => () => {\n  const [theme, setTheme] = useState(getItem('theme', false) || 'dark')\n\n  const toggleTheme = () => {\n    const newPaletteType: PaletteType = theme === 'light' ? 'dark' : 'light'\n    setTheme(newPaletteType)\n    setItem('theme', newPaletteType)\n\n    document.body.style.background = newPaletteType === 'dark' ? '#303030' : '#fff'\n  }\n\n  const { palette: { common: { white } } }: Theme = useTheme()\n\n  const myTheme = createMuiTheme({\n    palette: {\n      type: theme,\n    },\n    overrides: {\n      MuiAppBar: {\n        colorPrimary: {\n          backgroundColor: theme === 'dark' ? mainDarkBGColor : white,\n        },\n      },\n    },\n  })\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <ThemeProvider theme={myTheme}>\n        <Component />\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n","import cx from 'classnames'\nimport React, { FC } from 'react'\nimport Drawer, { DrawerProps } from '@material-ui/core/Drawer'\nimport Divider from '@material-ui/core/Divider'\nimport { Theme } from '@material-ui/core'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport createStyles from '@material-ui/core/styles/createStyles'\nimport List from '@material-ui/core/List'\n\nexport const DRAWER_WIDTH = 32 // * theme.spacing\n\nconst useStyles = makeStyles(({\n  spacing,\n  mixins: { toolbar },\n  transitions: { create, easing, duration },\n}: Theme) => createStyles({\n  drawerHeader: {\n    ...toolbar,\n  },\n  drawer: {\n    width: spacing(DRAWER_WIDTH),\n  },\n  paper: {\n    overflowX: 'hidden',\n  },\n  paperClose: {\n    borderRight: 0,\n  },\n  drawerOpen: {\n    width: spacing(DRAWER_WIDTH),\n    transition: create('width', {\n      easing: easing.sharp,\n      duration: duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    width: 0,\n    overflowX: 'hidden',\n    transition: create('width', {\n      easing: easing.sharp,\n      duration: duration.leavingScreen,\n    }),\n  },\n}))\n\ninterface DrawerStyledProps extends Pick<DrawerProps, 'open' | 'onClose'> {\n}\n\nexport const DrawerStyled: FC<DrawerStyledProps> = ({ open, onClose, children }) => {\n  const { drawer, paper, paperClose, drawerOpen, drawerClose, drawerHeader } = useStyles()\n\n  return (\n    <Drawer\n      className={cx(drawer, {\n        [drawerOpen]: open,\n        [drawerClose]: !open,\n      })}\n      classes={{\n        paper: cx(paper, {\n          [drawerOpen]: open,\n          [drawerClose]: !open,\n          [paperClose]: !open,\n        }),\n      }}\n      variant=\"permanent\"\n      onClose={onClose}\n      open={open}\n    >\n      <div className={drawerHeader} />\n      <Divider />\n      <List>\n        {children}\n      </List>\n    </Drawer>\n  )\n}\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport { replaceKeysInObject } from '../../helpers/replaceKeysInObject'\nimport { DrawerOpenedConnectorProps } from './MainLayoutConnected'\nimport { DRAWER_WIDTH } from '../Drawer/DrawerStyled'\n\nconst footerHeight = 10\n\nexport const Wrapper = styled(\n  ({ drawer, ...props }: DrawerOpenedConnectorProps) => <div {...props} />,\n)(({\n  theme: {\n    spacing,\n    transitions: { create, easing, duration },\n  },\n  drawer,\n}: Themed & DrawerOpenedConnectorProps) => ({\n  minHeight: '100%',\n\n  // Equal to height of footer\n  // But also accounting for potential margin-bottom of last child\n  marginBottom: spacing(footerHeight) * -1,\n\n  marginLeft: drawer ? spacing(DRAWER_WIDTH) : 0,\n  transition: create('margin-left', {\n    easing: easing.sharp,\n    duration: duration.enteringScreen,\n  }),\n}))\n\nexport const Push = styled('div')(({ theme: { spacing } }: Themed) => ({\n  height: spacing(footerHeight),\n}))\n\nexport const Footer = styled(\n  ({ drawer, ...props }: DrawerOpenedConnectorProps) => <footer {...props} />,\n)(({\n  theme: { spacing, transitions: { create, easing, duration } }, drawer,\n}: Themed & DrawerOpenedConnectorProps) => ({\n  display: 'flex',\n  alignItems: 'center',\n  height: spacing(footerHeight),\n  padding: `0 ${spacing(5)}px`,\n  marginLeft: drawer ? spacing(DRAWER_WIDTH) : 0,\n  transition: create('margin-left', {\n    easing: easing.sharp,\n    duration: duration.enteringScreen,\n  }),\n}))\n\nexport const Inner = styled('div')(({ theme: { spacing, mixins: { toolbar } } }: Themed) => ({\n  padding: `${spacing(2)}px ${spacing(5)}px`,\n  ...replaceKeysInObject(\n    toolbar,\n    'minHeight',\n    'paddingTop',\n    (value: number) => spacing(value / 6),\n  ),\n  maxWidth: spacing(130),\n}))\n","// @ts-ignore\nimport { getType } from './getType'\n\ntype ReplaceKeysInObject = (obj: any, what: any, withWhat: any, modifyValue?: any) => any\n\nexport const replaceKeysInObject: ReplaceKeysInObject = (obj, what, withWhat, modifyValue?) => {\n  const resObject = {}\n  Object.keys(obj).map((key) =>\n    // @ts-ignore\n    resObject[key === what ? withWhat : key] = getType(obj[key]) === 'Object'\n      ? replaceKeysInObject(obj[key], what, withWhat, modifyValue)\n      : modifyValue ? modifyValue(obj[key]) : obj[key],\n  )\n\n  return resObject\n}\n","type ReturnedTypes = 'Object' | 'Array' | 'String' | 'Number' | 'Null' | 'Boolean' | 'Undefined' | 'Function'\n\ntype GetType = (obj: any) => ReturnedTypes\n\nexport const getType: GetType = (obj) => (\n  // @ts-ignore FIXME typings!!!\n  ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1] as ReturnedTypes\n)\n","import { CSSProperties } from 'react'\nimport { CreateCSSProperties } from '@material-ui/core/styles/withStyles'\n\n// type Styled2 = <Component extends ElementType>(component: Component) => ComponentCreator<Component>\n// const styled2: Styled2 = (component) => {}\n// styled2('div')\n\n\ntype ConditionalCSS = (\n  params: Array<[boolean | undefined, CSSProperties | undefined | {}]\n    | CSSProperties\n    | {}>,\n) => CreateCSSProperties | {}\n\nexport const conditionalCSS: ConditionalCSS = (params) => {\n  let returnObject: CSSProperties | {} = {}\n\n  params.forEach((param) => {\n    if (Array.isArray(param)) {\n      const [condition, css] = param\n      if (condition) {\n        returnObject = { ...returnObject, ...css }\n      }\n    } else {\n      returnObject = { ...returnObject, ...param }\n    }\n  })\n\n  return returnObject\n}\n","import React, { FC } from 'react'\nimport styled from '@material-ui/styles/styled'\nimport Typography from '@material-ui/core/Typography'\nimport { mainDarkBGColor } from '../../helpers/themeProviderHOC'\nimport { Themed } from '../../helpers/types'\nimport { conditionalCSS } from '../../helpers/conditionalCSS'\n\nconst HeadingFC: FC = (props) => (\n  <Typography variant=\"h4\" component=\"h1\" {...props} />\n)\n\nexport const Heading = styled(HeadingFC)(({\n  theme: { palette: { type } },\n}: Themed) => conditionalCSS([\n  [type === 'light', {\n    color: mainDarkBGColor,\n  }],\n]))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport AppBar from '@material-ui/core/AppBar'\n\nexport const AppBarStyled = styled(AppBar)(({ theme }: Themed) => ({\n  zIndex: theme.zIndex.drawer + 1,\n}))\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const MenuButton = styled(\n  (props) => (\n    <IconButton edge=\"start\" color=\"inherit\" {...props}>\n      <MenuIcon fontSize=\"large\" />\n    </IconButton>\n  ),\n)(({ theme: { spacing, palette: { type, common: { black, white } } } }: Themed) => ({\n  marginRight: spacing(1),\n  color: type === 'dark' ? white : black,\n}))\n","import { connect } from 'react-redux'\n\nimport { MenuButton } from './MenuButton'\nimport { State } from '../../../redux/defaultState'\nimport { DrawerOpenedState, ToggleDrawerOpened, toggleDrawerOpened } from '../../../redux/reducers/drawerOpened'\n\ninterface MapStateToProps extends DrawerOpenedState {\n}\n\ninterface MapDispatchToProps {\n  toggleDrawerOpened: ToggleDrawerOpened\n}\n\nexport interface MenuButtonProps {\n  onClick(): void\n}\n\nexport const MenuButtonConnected = connect(\n  ({ drawerOpened }: State): MapStateToProps => ({\n    drawerOpened,\n  }),\n  { toggleDrawerOpened },\n  (\n    { drawerOpened }: MapStateToProps,\n    { toggleDrawerOpened }: MapDispatchToProps,\n    // stateProps: MapStateToProps,\n    // dispatchProps: MapDispatchToProps,\n    // ownProps: OwnProps,\n  ): MenuButtonProps => ({\n    onClick() {\n      toggleDrawerOpened(!drawerOpened)\n    },\n  }),\n)(MenuButton)\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n/i18n'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { Heading } from './Heading'\nimport { AppBarStyled } from './AppBarStyled'\nimport { MenuButtonConnected } from './MenuButton/MenuButtonConnected'\n\nexport const TopMenu: FC = () => (\n  <AppBarStyled>\n    <Toolbar>\n      <MenuButtonConnected />\n      <Heading>\n        {i18n('yacht')}\n      </Heading>\n    </Toolbar>\n  </AppBarStyled>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nexport const DialogContentStyled = styled(DialogContent)(({ theme }: Themed) => ({\n  minWidth: '30em',\n  padding: '2em 0',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { Themed } from '../../../helpers/types'\nimport yellow from '@material-ui/core/colors/yellow'\n\nexport const WarningIconStyled = styled(WarningIcon)(({ theme: { spacing } }: Themed) => ({\n  marginRight: spacing(1),\n  color: yellow.A700,\n}))\n","import ListItem from '@material-ui/core/ListItem'\nimport styled from '@material-ui/styles/styled'\n\nexport const DrawerListItemStyled = styled(ListItem)({\n  whiteSpace: 'nowrap',\n  justifyContent: 'center',\n})\n","import React, { FC } from 'react'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { DrawerListItemStyled } from './DrawerListItemStyled'\n\ninterface DrawerListItemProps {\n  icon: any\n  button?: boolean\n\n  onClick?(): void\n}\n\nexport const DrawerListItem: FC<DrawerListItemProps> = ({ icon, onClick, children, button = true }) => (\n  // @ts-ignore TS2769 TODO wtf??\n  <DrawerListItemStyled button={button} onClick={onClick}>\n    <ListItemIcon>\n      {icon}\n    </ListItemIcon>\n    {children && (\n      <ListItemText primary={children} />\n    )}\n  </DrawerListItemStyled>\n)\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport { Divider } from '@material-ui/core'\nimport { conditionalCSS } from '../../helpers/conditionalCSS'\n\ninterface DrawerListDividerProps {\n  top?: boolean\n  bottom?: boolean\n}\n\nexport const DrawerListDivider = styled(\n  ({ top, bottom, ...restProps }: DrawerListDividerProps) => (\n    <Divider {...restProps} />\n  ),\n)(({\n  theme: { spacing }, top = true, bottom = true,\n}: Themed & DrawerListDividerProps) => conditionalCSS([\n  [top, {\n    marginTop: spacing(1),\n  }],\n  [bottom, {\n    marginBottom: spacing(1),\n  }],\n]))\n","import { ThunkAction } from '../../helpers/types'\nimport { resetDices } from '../reducers/dices'\nimport { unselectAllDices } from '../reducers/dicesSelected'\nimport { changeGamePhase, GamePhases } from '../reducers/gamePhase'\nimport { resetPlayerMove } from '../reducers/playerMove'\nimport { resetPlayerPoints } from '../reducers/playerPoints'\n\nexport const restartGameThunk: ThunkAction = () => (dispatch) => {\n  dispatch(resetPlayerMove())\n  dispatch(resetPlayerPoints())\n  dispatch(resetDices())\n  dispatch(unselectAllDices())\n  dispatch(changeGamePhase(GamePhases.PRE_GAME))\n}\n","import React, { FC } from 'react'\n\nexport interface VisibilityHOCProps {\n  hidden: boolean\n}\n\nexport const visibilityHOC = (Component: any /*<--TODO*/): FC<VisibilityHOCProps> => ({ hidden, ...restProps }) => {\n\n  if (hidden) {\n    return null\n  }\n\n  return (\n    <Component {...restProps} />\n  )\n}\n","import { connect } from 'react-redux'\nimport { RestartGameButton } from './RestartGameButton'\nimport { restartGameThunk } from '../../../redux/actions/restartGameThunk'\nimport { ThunkAction } from '../../../helpers/types'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport { GamePhases, GamePhaseState } from '../../../redux/reducers/gamePhase'\n\ninterface MapStateToProps extends GamePhaseState {\n}\n\ninterface MapDispatchToProps {\n  restartGameAction: ThunkAction\n}\n\nexport interface RestartGameProps extends MapDispatchToProps {\n}\n\nexport const RestartGameButtonConnected = compose(\n  connect<MapStateToProps, MapDispatchToProps, {}, RestartGameProps & VisibilityHOCProps, State>(\n    ({ gamePhase }) => ({\n      gamePhase,\n    }),\n    { restartGameAction: restartGameThunk },\n    ({ gamePhase }, { restartGameAction }) => ({\n      restartGameAction,\n      hidden: gamePhase !== GamePhases.IN_PLAY,\n    }),\n  ),\n  visibilityHOC,\n)(RestartGameButton)\n","import React, { FC, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { RestartGameProps } from './RestartGameButtonConnected'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport { DialogContentStyled } from './DialogContentStyled'\nimport { WarningIconStyled } from './WarningIconStyled'\nimport { DrawerListItem } from '../DrawerListItem'\nimport { DrawerListDivider } from '../DrawerListDivider'\n\nexport const RestartGameButton: FC<RestartGameProps> = ({ restartGameAction }) => {\n  const [open, setOpen] = useState(false)\n  const openModal = () => setOpen(true)\n  const closeModal = () => setOpen(false)\n  const restartGame = () => {\n    closeModal()\n    restartGameAction()\n  }\n\n  return (\n    <>\n      <DrawerListDivider />\n      <DrawerListItem icon={<ReplayIcon style={{ marginLeft: '.5em' }} />} onClick={openModal}>\n        {i18n('restartGame')}\n      </DrawerListItem>\n      {open && (\n        <Dialog open onClose={closeModal}>\n          <DialogTitle>\n            {i18n('restartGame')}?\n          </DialogTitle>\n          <DialogContentStyled>\n            <WarningIconStyled />\n            {i18n('currentGameWillBeLost')}\n          </DialogContentStyled>\n          <DialogActions>\n            <Button onClick={closeModal}>\n              {i18n('button.cancel')}\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={restartGame}>\n              {i18n('restartGame')}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  )\n}\n","import { connect } from 'react-redux'\nimport { compose } from 'redux'\n\nimport { ChangeTableSizeButton } from './ChangeTableSizeButton'\nimport { State } from '../../../redux/defaultState'\nimport { TableSizeState, toggleSize, ToggleSize } from '../../../redux/reducers/tableSize'\nimport { GamePhases, GamePhaseState } from '../../../redux/reducers/gamePhase'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\n\ninterface MapStateToProps extends TableSizeState, GamePhaseState {\n}\n\ninterface MapDispatchToProps {\n  toggleSize: ToggleSize\n}\n\nexport interface ChangeTableSizeButtonProps extends TableSizeState {\n  onChange: ToggleSize\n}\n\nexport const ChangeTableSizeButtonConnected = compose(\n  connect(\n    ({ tableSize, gamePhase }: State): MapStateToProps => ({\n      tableSize,\n      gamePhase,\n    }),\n    { toggleSize },\n    (\n      { tableSize, gamePhase }: MapStateToProps,\n      { toggleSize: onChange }: MapDispatchToProps,\n    ): ChangeTableSizeButtonProps & VisibilityHOCProps => ({\n      tableSize,\n      onChange,\n\n      hidden: gamePhase !== GamePhases.IN_PLAY,\n    }),\n  ),\n  visibilityHOC,\n)(ChangeTableSizeButton)\n","import React, { FC } from 'react'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { ChangeTableSizeButtonProps } from './ChangeTableSizeButtonConnected'\nimport { Checkbox } from '@material-ui/core'\nimport { DrawerListItem } from '../DrawerListItem'\nimport { DrawerListDivider } from '../DrawerListDivider'\n\nexport const ChangeTableSizeButton: FC<ChangeTableSizeButtonProps> = ({ tableSize, onChange }) => (\n  <>\n    <DrawerListDivider />\n    <DrawerListItem\n      onClick={onChange}\n      icon={\n        <Checkbox\n          color=\"default\"\n          checked={tableSize === 'small'}\n        />\n      }\n    >\n      {i18n('compactTable')}\n    </DrawerListItem>\n  </>\n)\n","import React, { FC } from 'react'\nimport { ThemeContext } from '../../helpers/themeProviderHOC'\nimport Switch from '@material-ui/core/Switch'\nimport { i18n } from '../../helpers/i18n/i18n'\nimport { DrawerListItem } from './DrawerListItem'\n\nexport const ThemeToggler: FC = () => (\n  <ThemeContext.Consumer>\n    {({ theme, toggleTheme }) => (\n      <DrawerListItem\n        onClick={toggleTheme}\n        icon={\n          <Switch\n            checked={theme === 'dark'}\n            color=\"default\"\n          />\n        }\n      >\n        {i18n('darkTheme')}\n      </DrawerListItem>\n    )}\n  </ThemeContext.Consumer>\n)\n","import styled from '@material-ui/styles/styled'\nimport MaterialButtonGroup, { ButtonGroupProps as MaterialButtonGroupProps } from '@material-ui/core/ButtonGroup'\nimport React from 'react'\nimport { Themed } from '../../../helpers/types'\n\ninterface ButtonGroupProps extends Pick<MaterialButtonGroupProps, 'size'> {\n}\n\nexport const ButtonGroup = styled(\n  ({ size = 'small', ...props }: ButtonGroupProps) => (\n    <MaterialButtonGroup variant=\"text\" size={size} {...props} />\n  ),\n)(({ theme: { spacing, palette: { background: { default: def } } } }: Themed) => ({\n  marginRight: spacing(2),\n  '& .Mui-disabled': {\n    backgroundColor: def,\n  },\n}))\n","import { connect } from 'react-redux'\n\nimport { DiceSizeChanger } from './DiceSizeChanger'\nimport { decreaseDiceSize, DiceSizeState, DiceSizeThunk, increaseDiceSize } from '../../../redux/reducers/diceSize'\nimport { State } from '../../../redux/defaultState'\nimport { GamePhases, GamePhaseState } from '../../../redux/reducers/gamePhase'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\n\ninterface MapStateToProps extends DiceSizeState, GamePhaseState {\n}\n\ninterface MapDispatchToProps {\n  increaseDiceSize: DiceSizeThunk\n  decreaseDiceSize: DiceSizeThunk\n}\n\nexport interface DiceSizeChangerConnectedProps extends Pick<MapStateToProps, 'diceSize'>, MapDispatchToProps {\n}\n\nexport const DiceSizeChangerConnected = compose(\n  connect(\n    ({ diceSize, gamePhase }: State): MapStateToProps => ({\n      diceSize,\n      gamePhase,\n    }),\n    { increaseDiceSize, decreaseDiceSize },\n    (\n      { diceSize, gamePhase }: MapStateToProps,\n      { increaseDiceSize, decreaseDiceSize }: MapDispatchToProps,\n    ): DiceSizeChangerConnectedProps & VisibilityHOCProps => ({\n      diceSize,\n      increaseDiceSize,\n      decreaseDiceSize,\n      hidden: gamePhase !== GamePhases.IN_PLAY,\n    }),\n  ),\n  visibilityHOC,\n)(DiceSizeChanger)\n","import React, { FC } from 'react'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { DrawerListItem } from '../DrawerListItem'\nimport { DrawerListDivider } from '../DrawerListDivider'\nimport { ButtonGroup } from './ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport { maxDiceSize, minDiceSize } from '../../../redux/reducers/diceSize'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { DiceSizeChangerConnectedProps } from './DiceSizeChangerConnected'\n\nexport const DiceSizeChanger: FC<DiceSizeChangerConnectedProps> = ({ diceSize, increaseDiceSize, decreaseDiceSize }) => (\n  <>\n    <DrawerListDivider />\n    <DrawerListItem\n      button={false}\n      icon={\n        <ButtonGroup>\n          <Button onClick={increaseDiceSize} disabled={diceSize === maxDiceSize}>\n            <AddIcon />\n          </Button>\n          <Button onClick={decreaseDiceSize} disabled={diceSize === minDiceSize}>\n            <RemoveIcon />\n          </Button>\n        </ButtonGroup>\n      }\n    >\n      {i18n('diceSize')}\n    </DrawerListItem>\n  </>\n)\n","import { ThunkAction } from '../../helpers/types'\nimport { changeLanguage } from '../reducers/language'\n\nexport const changeLanguageThunk: ThunkAction = () => (dispatch, getState) => {\n  const { language } = getState()\n  dispatch(changeLanguage(language === 'rus' ? 'eng' : 'rus'))\n  // eslint-disable-next-line no-self-assign\n  window.location = window.location\n}\n","import React, { FC } from 'react'\nimport { DrawerListDivider } from '../DrawerListDivider'\nimport { DrawerListItem } from '../DrawerListItem'\nimport { ButtonGroup } from '../DiceSizeChanger/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeLanguageSelector } from '../../../redux/selectors/makeLanguageSelector'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { changeLanguageThunk } from '../../../redux/actions/changeLanguageThunk'\n\nexport const LangChangeButtons: FC = () => {\n  const languageSelector = makeLanguageSelector()\n  const language = useSelector(languageSelector)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(changeLanguageThunk())\n\n  return (\n    <>\n      <DrawerListDivider />\n      <DrawerListItem\n        button={false}\n        icon={\n          <ButtonGroup>\n            <Button disabled={language === 'rus'} onClick={onClick}>\n              рус\n            </Button>\n            <Button disabled={language === 'eng'} onClick={onClick}>\n              eng\n            </Button>\n          </ButtonGroup>\n        }\n      >\n        {i18n('language')}\n      </DrawerListItem>\n    </>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { Language } from '../reducers/language'\n\nexport const makeLanguageSelector = () => createSelector<State, Language, Language>(\n  ({ language }) => language,\n  (language) => language,\n)\n","import { connect } from 'react-redux'\n\nimport { Drawer } from './Drawer'\nimport { State } from '../../redux/defaultState'\nimport { DrawerOpenedState } from '../../redux/reducers/drawerOpened'\n\ninterface MapStateToProps extends DrawerOpenedState {\n}\n\nexport interface DrawerProps extends MapStateToProps {\n}\n\nexport const DrawerConnected = connect(\n  ({ drawerOpened }: State): MapStateToProps => ({\n    drawerOpened,\n  }),\n  null,\n  (\n    { drawerOpened }: MapStateToProps,\n  ): DrawerProps => ({\n    drawerOpened,\n  }),\n)(Drawer)\n","import React, { FC } from 'react'\nimport { DrawerStyled } from './DrawerStyled'\nimport { RestartGameButtonConnected } from './RestartGameButton/RestartGameButtonConnected'\nimport { ChangeTableSizeButtonConnected } from './ChangeTableSizeButton/ChangeTableSizeButtonConnected'\nimport { ThemeToggler } from './ThemeToggler'\nimport { DiceSizeChangerConnected } from './DiceSizeChanger/DiceSizeChangerConnected'\nimport { DrawerProps } from './DrawerConnected'\nimport { LangChangeButtons } from './LangChangeButtons/LangChangeButtons'\n\nexport const Drawer: FC<DrawerProps> = ({ drawerOpened }) => (\n  <DrawerStyled open={drawerOpened}>\n    <ThemeToggler />\n    <LangChangeButtons />\n    <DiceSizeChangerConnected />\n    <ChangeTableSizeButtonConnected />\n    <RestartGameButtonConnected />\n  </DrawerStyled>\n)\n","import { connect } from 'react-redux'\n\nimport { Wrapper as LayoutWrapper, Footer as LayoutFooter } from './MainLayoutParts'\nimport { State } from '../../redux/defaultState'\nimport { DrawerOpenedState } from '../../redux/reducers/drawerOpened'\nimport { ComponentType, ReactNode } from 'react'\n\nexport interface DrawerOpenedConnectorProps {\n  drawer?: boolean\n}\n\ninterface MapStateToProps extends DrawerOpenedState {\n}\n\ninterface MapDispatchToProps {\n  children: ReactNode\n}\n\ninterface MainLayoutWrapperConnectedProps extends MapDispatchToProps, DrawerOpenedConnectorProps {\n}\n\nexport const drawerOpenedConnector = (Component: ComponentType) => connect(\n  ({ drawerOpened }: State): MapStateToProps => ({\n    drawerOpened,\n  }),\n  {},\n  (\n    { drawerOpened }: MapStateToProps,\n    _,\n    { children }: MapDispatchToProps,\n  ): MainLayoutWrapperConnectedProps => ({\n    drawer: drawerOpened,\n    children,\n  }),\n)(Component)\n\nexport const Wrapper = drawerOpenedConnector(LayoutWrapper)\n\nexport const Footer = drawerOpenedConnector(LayoutFooter)\n","import makeStyles from '@material-ui/core/styles/makeStyles'\n\nexport const useGlobalStyles = makeStyles(({ palette: { grey, type, background: { paper } } }) => {\n  const backgroundColor = type === 'dark' ? paper : grey['300']\n\n  return {\n    '@global': {\n      'html, body': {\n        padding: 0,\n        margin: 0,\n        boxSizing: 'border-box',\n      },\n      'html, body, #root': {\n        height: '100%',\n      },\n\n      '@keyframes backgroundAnimation': {\n        '0%, 100%': {\n          backgroundColor,\n        },\n        '50%': {\n          backgroundColor: 'transparent',\n        },\n        // '100%': {\n        //   backgroundColor,\n        // },\n      },\n    },\n  }\n})\n","import React, { FC } from 'react'\nimport { Inner, Push } from './MainLayoutParts'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { TopMenu } from '../TopMenu/TopMenu'\nimport { DrawerConnected } from '../Drawer/DrawerConnected'\nimport { Wrapper, Footer } from './MainLayoutConnected'\nimport { useGlobalStyles } from './useGlobalStyles'\n\nexport const MainLayout: FC = ({ children }) => {\n  useGlobalStyles()\n\n  return (\n    <>\n      <CssBaseline />\n      <TopMenu />\n      <DrawerConnected />\n      <Wrapper>\n        <Inner>\n          {children}\n        </Inner>\n        <Push />\n      </Wrapper>\n      <Footer>bonez &copy; 2019</Footer>\n    </>\n  )\n}\n","import { connect } from 'react-redux'\n\nimport { changeGamePhase, GamePhases } from '../../redux/reducers/gamePhase'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { i18n } from '../../helpers/i18n/i18n'\n\ninterface StartNewGameProps extends Pick<ButtonProps, 'variant' | 'size' | 'color' | 'onClick' | 'children'> {\n}\n\nexport const StartGameButtonConnected = connect(\n  null,\n  { changeGamePhase },\n  (\n    _,\n    { changeGamePhase },\n  ): StartNewGameProps => ({\n    variant: 'contained',\n    size: 'large',\n    color: 'primary',\n    onClick() {\n      changeGamePhase(GamePhases.PLAYERS_SELECTION)\n    },\n    children: i18n('button.startNewGame'),\n  }),\n)(Button)\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const ButtonsWrapper = styled('div')(({ theme: { spacing } }: Themed) => ({\n  '& button': {\n    marginRight: spacing(2),\n    marginBottom: spacing(2),\n  },\n}))\n","import { connect } from 'react-redux'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { changeGamePhase, GamePhases } from '../../../redux/reducers/gamePhase'\nimport CloseIcon from '@material-ui/icons/Close'\nimport React from 'react'\n\nexport interface CancelStartGameButtonProps\n  extends Pick<ButtonProps, 'size' | 'variant' | 'color' | 'children' | 'onClick' | 'startIcon'> {\n}\n\nexport const CancelStartGameButtonConnected = connect(\n  null,\n  { changeGamePhase },\n  (_, { changeGamePhase }): CancelStartGameButtonProps => ({\n    variant: 'contained',\n    color: 'secondary',\n    children: i18n('button.cancel'),\n    size: 'small',\n    onClick() {\n      changeGamePhase(GamePhases.PRE_GAME)\n    },\n    startIcon: <CloseIcon />\n  }),\n)(Button)\n","import { ThunkAction } from '../../helpers/types'\nimport { nextTurn } from '../reducers/playerMove'\n\nexport const nextTurnThunk: ThunkAction = () => (dispatch, getState) => {\n  const state = getState()\n  let { playerMove: { 0: playerId } } = state\n  const { players } = state\n\n  if (!playerId) {\n    playerId = players[0].id\n  } else {\n    const index = players.findIndex(({ id }) => id === playerId)\n    const player = players[index + 1]\n    playerId = player ? player.id : state.players[0].id\n  }\n\n  dispatch(nextTurn([playerId, 0]))\n}\n","import { connect } from 'react-redux'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { ChangeGamePhase, changeGamePhase, GamePhases } from '../../../redux/reducers/gamePhase'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport { PlayersState } from '../../../redux/reducers/players'\nimport { ThunkAction } from '../../../helpers/types'\nimport { nextTurnThunk } from '../../../redux/actions/nextTurnThunk'\n\ninterface MapStateToProps extends PlayersState {\n}\n\ninterface MapDispatchToProps {\n  changeGamePhase: ChangeGamePhase\n  nextTurnThunk: ThunkAction\n}\n\nexport interface StartGameButtonProps extends Pick<ButtonProps, 'size' | 'variant' | 'color' | 'onClick' | 'children'> {\n}\n\nexport const StartGameButtonConnected = compose(\n  connect<MapStateToProps, MapDispatchToProps, {}, StartGameButtonProps & VisibilityHOCProps, State>(\n    ({ players }) => ({\n      players,\n    }),\n    { changeGamePhase, nextTurnThunk },\n    ({ players }, { changeGamePhase, nextTurnThunk }): StartGameButtonProps & VisibilityHOCProps => ({\n      variant: 'contained',\n      color: 'primary',\n      size: 'large',\n      children: i18n('button.startGame'),\n      onClick() {\n        // TODO: refactor this to Thunk Action\n        changeGamePhase(GamePhases.IN_PLAY)\n        nextTurnThunk()\n      },\n\n      hidden: players.length === 0,\n    }),\n  ),\n  visibilityHOC,\n)(Button)\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport Paper from '@material-ui/core/Paper'\n\nexport const PlayersListPaper = styled(Paper)(({ theme: { spacing } }: Themed) => ({\n  marginBottom: spacing(2),\n  maxWidth: spacing(75),\n}))\n","import { connect } from 'react-redux'\n\nimport { PlayersList } from './PlayersList'\nimport { State } from '../../../redux/defaultState'\nimport {\n  PlayersState,\n  RemovePlayer,\n  removePlayer,\n} from '../../../redux/reducers/players'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\n\ninterface MapStateToProps extends PlayersState {\n}\n\ninterface MapDispatchToProps {\n  removePlayer: RemovePlayer\n}\n\nexport interface PlayersListProps extends MapStateToProps, MapDispatchToProps {\n}\n\nexport const PlayersListConnected = compose(\n  connect<MapStateToProps, MapDispatchToProps, {}, PlayersListProps & VisibilityHOCProps, State>(\n    ({ players }) => ({\n      players,\n    }),\n    { removePlayer },\n    (\n      { players },\n      { removePlayer },\n    ): PlayersListProps & VisibilityHOCProps => ({\n      players,\n      removePlayer,\n\n      hidden: players.length === 0,\n    }),\n  ),\n  visibilityHOC,\n)(PlayersList)\n","import React, { FC, Fragment } from 'react'\nimport { PlayersListProps } from './PlayersListConnected'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport PersonIcon from '@material-ui/icons/Person'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Divider from '@material-ui/core/Divider'\nimport { PlayersListPaper } from './PlayersListPaper'\n\nexport const PlayersList: FC<PlayersListProps> = ({ players, removePlayer }) => (\n  <PlayersListPaper>\n    <List>\n      {players.map(({ id, name }, index) => (\n        <Fragment key={id}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText>\n              <span>{i18n('playerNo')}{index + 1}:&nbsp;</span>\n              <span>{name}</span>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => removePlayer(id)}>\n                <ClearIcon fontSize=\"inherit\" />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n          {((index + 1) < players.length) && (\n            <Divider variant=\"inset\" component=\"li\" />\n          )}\n        </Fragment>\n      ))}\n    </List>\n  </PlayersListPaper>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nexport const DialogContentStyled = styled(DialogContent)({\n  paddingTop: '2em',\n  paddingBottom: '2em',\n  minWidth: '20em',\n})\n","import { connect } from 'react-redux'\n\nimport { AddPlayer } from './AddPlayer'\nimport { addPlayer, AddPlayer as AddPlayerType } from '../../../redux/reducers/players'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\n\ninterface MapDispatchToProps {\n  addPlayer: AddPlayerType\n}\n\nexport interface AddPlayerProps extends MapDispatchToProps {\n}\n\nexport const AddPlayerConnected = compose(\n  connect(\n    ({ players }: State) => ({\n      players,\n    }),\n    { addPlayer },\n    ({ players }, { addPlayer }): AddPlayerProps & VisibilityHOCProps => ({\n      addPlayer,\n\n      hidden: players.length > 4,\n    }),\n  ),\n  visibilityHOC,\n)(AddPlayer)\n","export const makeId = (): string => (\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0\n    // eslint-disable-next-line\n    const v = c == 'x' ? r : (r&0x3|0x8)\n    return v.toString(16)\n  })\n)\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Input from '@material-ui/core/Input'\nimport { AddPlayerProps } from './AddPlayerConnected'\nimport { DialogContentStyled } from './DialogContentStyled'\n\nexport const AddPlayer: FC<AddPlayerProps> = ({ addPlayer }) => {\n  const [open, setOpen] = useState(false)\n  const openModal = () => setOpen(true)\n  const closeModal = () => setOpen(false)\n\n  const [disabled, setDisabled] = useState(true)\n\n  const [inputValue, setInputValue] = useState('')\n  const onInputChange = ({ currentTarget }: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(currentTarget.value)\n    setDisabled(currentTarget.value.trim() === '')\n  }\n  const onSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    addPlayer(inputValue.trim())\n    closeModal()\n    setInputValue('')\n    setDisabled(true)\n  }\n\n  return (\n    <>\n      <Button variant=\"contained\" startIcon={<PersonAddIcon />} size=\"small\" onClick={openModal}>\n        {i18n('button.addPlayer')}\n      </Button>\n      {open && (\n        <Dialog open onClose={closeModal}>\n          <form onSubmit={onSubmit}>\n            <DialogTitle>\n              {i18n('button.addPlayer')}\n            </DialogTitle>\n            <DialogContentStyled>\n              <Input fullWidth autoFocus value={inputValue} onChange={onInputChange} />\n            </DialogContentStyled>\n            <DialogActions>\n              <Button onClick={closeModal}>\n                {i18n('button.cancel')}\n              </Button>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={disabled}>\n                {i18n('button.add')}\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { playersDefaultState, PlayersState, resetPlayers } from '../../../redux/reducers/players'\nimport { Action, compose } from 'redux'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport equal from 'fast-deep-equal'\n\ninterface MapStateToProps extends PlayersState {\n}\n\ninterface MapDispatchToProps {\n  onClick(): Action\n}\n\nexport interface ResetToDefaultPlayersButtonProps\n  extends MapDispatchToProps, Pick<ButtonProps, 'startIcon'>, VisibilityHOCProps {\n  children: string\n}\n\nexport const ResetToDefaultPlayersButtonConnected = compose(\n  connect(\n    ({ players }: State): MapStateToProps => ({\n      players,\n    }),\n    { resetPlayers },\n    ({ players }, { resetPlayers }): ResetToDefaultPlayersButtonProps => ({\n      onClick: resetPlayers,\n      children: i18n('button.reset2'),\n      startIcon: <RotateLeftIcon />,\n\n      hidden: equal(players, playersDefaultState),\n    }),\n  ),\n  visibilityHOC,\n)(Button)\n","import React, { FC } from 'react'\nimport { ButtonsWrapper } from './Buttons/ButtonsWrapper'\nimport { CancelStartGameButtonConnected } from './Buttons/CancelStartGameButtonConnected'\nimport { StartGameButtonConnected } from './Buttons/StartGameButtonConnected'\nimport { PlayersListConnected } from './PlayersList/PlayersListConnected'\nimport { AddPlayerConnected } from './AddPlayer/AddPlayerConnected'\nimport { ResetToDefaultPlayersButtonConnected } from './Buttons/ResetToDefaultPlayersButtonConnected'\n\nexport const PlayersSelection: FC = () => (\n  <>\n    <PlayersListConnected />\n    <ButtonsWrapper>\n      <StartGameButtonConnected />\n      <AddPlayerConnected />\n      <CancelStartGameButtonConnected />\n      <ResetToDefaultPlayersButtonConnected />\n    </ButtonsWrapper>\n  </>\n)\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const $wrapWidth = 1.8\nexport const $delay = 300\n\ninterface DiceInnerProps {\n  roll?: boolean\n  selected?: boolean\n}\n\nexport const DiceInner = styled(\n  ({ roll, selected, ...rest }: DiceInnerProps) => <div {...rest} />,\n)(({ roll, selected, theme: { palette: { type, common: { white, black } } } }: Themed & DiceInnerProps) => ({\n\n  display: 'flex',\n  flexWrap: 'wrap',\n  background: type === 'dark' ? black : white,\n  borderRadius: '.2em',\n\n  width: `${$wrapWidth}em`,\n  minWidth: `${$wrapWidth}em`,\n  maxWidth: `${$wrapWidth}em`,\n  height: `${$wrapWidth}em`,\n\n  transitionDuration: `${$delay / 1000}s`,\n\n  transform: roll ? 'rotate(359deg)' : 'none',\n\n  marginTop: roll || selected ? '-.1em' : 0,\n\n  boxShadow: selected ? '0 .3em 1em rgba(0, 0, 0, .6)' : '0 0 .1em rgba(0, 0, 0, .4)',\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { $delay, $wrapWidth } from './DiceInner'\nimport { Themed } from '../../../helpers/types'\n\ninterface DotProps {\n  roll?: boolean\n  filled?: boolean\n}\n\nexport const DiceDot = styled(\n  ({ filled, roll, ...rest }: DotProps) => (\n    <div {...rest}>\n      <div />\n    </div>\n  ),\n)(({ filled, roll, theme: { palette: { type, grey, common: { black } } } }: Themed & DotProps) => ({\n\n  minWidth: `${$wrapWidth / 3}em`,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  '& div': {\n    width: '80%',\n    height: '80%',\n    borderRadius: '50%',\n\n    transitionProperty: 'background',\n    transitionDuration: `${$delay / 1000}s`,\n\n    boxShadow: filled && type === 'dark'\n      ? 'inset 0 0 .1em rgba(0, 0, 0, .8)'\n      : 'none',\n\n    background: filled\n      ? roll\n        ? 'transparent'\n        : type === 'dark' ? grey['300'] : black\n      : 'transparent',\n  },\n}))\n","import styled from '@material-ui/styles/styled'\n\nconst $width = 2\n\nexport const DiceWrapper = styled('div')({\n  width: `${$width}em`,\n  minWidth: `${$width}em`,\n  maxWidth: `${$width}em`,\n  height: `${$width}em`,\n  margin: `${$width / 6}em`,\n  flexWrap: 'wrap',\n  flexGrow: 1,\n})\n","import React, { FC } from 'react'\nimport { DiceDot } from './DiceDot'\nimport { DiceWrapper } from './DiceWrapper'\nimport { DiceInner } from './DiceInner'\n\nconst dots: { [key: number]: number[] } = {\n  1: [5],\n  2: [1, 9],\n  3: [1, 5, 9],\n  4: [1, 3, 7, 9],\n  5: [1, 3, 5, 7, 9],\n  6: [1, 3, 4, 6, 7, 9],\n}\n\ninterface DiceProps {\n  value: number\n  roll?: boolean\n  selected?: boolean\n\n  onClick?(): void\n}\n\nconst array9 = [...window.Array(9).keys()]\n\nexport const Dice: FC<DiceProps> = ({ value, roll, selected, onClick }) => (\n  <DiceWrapper onClick={onClick}>\n    <DiceInner roll={roll} selected={selected}>\n      {array9.map((i) => (\n        <DiceDot\n          key={i}\n          roll={roll}\n          filled={dots[value] && dots[value].indexOf(i + 1) !== -1}\n        />\n      ))}\n    </DiceInner>\n  </DiceWrapper>\n)\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport { diceSizeDefaultState, DiceSizeState } from '../../../redux/reducers/diceSize'\n\ninterface DicesWrapper extends Partial<DiceSizeState> {\n}\n\nexport const DicesWrapper = styled(\n  ({ diceSize, ...props }: DicesWrapper) => (\n    <div {...props} />\n  ),\n)(({ diceSize, theme: { spacing } }: Themed & DicesWrapper) => {\n  const size = diceSize ? diceSize : diceSizeDefaultState\n\n  return {\n    display: 'flex',\n    flexWrap: 'wrap',\n    fontSize: spacing(size),\n    paddingBottom: spacing(size / 2),\n  }\n})\n","import { connect } from 'react-redux'\n\nimport { Dices } from './Dices'\nimport { State } from '../../redux/defaultState'\nimport { DicesState } from '../../redux/reducers/dices'\nimport { DicesSelectedState, SelectDice, selectDice } from '../../redux/reducers/dicesSelected'\nimport { LoadingState } from '../../redux/reducers/loading'\nimport { DiceSizeState } from '../../redux/reducers/diceSize'\n\ninterface MapStateToProps extends DicesState, DicesSelectedState, LoadingState, DiceSizeState {\n}\n\ninterface MapDispatchToProps {\n  selectDice: SelectDice\n}\n\nexport interface DicesProps extends MapStateToProps, MapDispatchToProps {\n}\n\nexport const DicesConnected = connect(\n  ({ dices, dicesSelected, loading, diceSize }: State): MapStateToProps => ({\n    dices,\n    dicesSelected,\n    loading,\n    diceSize,\n  }),\n  { selectDice },\n  ({ dices, dicesSelected, loading, diceSize }, { selectDice }): DicesProps => ({\n    dices,\n    dicesSelected,\n    loading,\n    selectDice,\n    diceSize,\n  }),\n)(Dices)\n","import React, { FC } from 'react'\nimport { DicesProps } from './DicesConnected'\nimport { Dice } from './Dice/Dice'\nimport { DicesWrapper } from './DicesWrapper/DicesWrapper'\n\nexport const Dices: FC<DicesProps> = ({ dices, dicesSelected, loading, selectDice, diceSize }) => (\n  <DicesWrapper diceSize={diceSize}>\n    {dices.map((dice, index) => {\n      const selected = dicesSelected.indexOf(index) !== -1\n      const onClick = () => {\n        if (dice !== -1) {\n          selectDice(index)\n        }\n      }\n\n      return (\n        <Dice\n          key={index}\n          value={dice}\n          selected={selected}\n          roll={!selected && loading}\n          onClick={onClick}\n        />\n      )\n    })}\n  </DicesWrapper>\n)\n","import Fab from '@material-ui/core/Fab'\nimport { Themed } from '../../../helpers/types'\nimport React from 'react'\nimport styled from '@material-ui/styles/styled'\n\nexport const RollDiceButtonStyled = styled(\n  (props) => (\n    <Fab\n      variant=\"extended\"\n      color=\"primary\"\n      {...props}\n    />\n  ),\n)(({ theme: { spacing } }: Themed) => ({\n  marginRight: spacing(2),\n  marginBottom: spacing(2),\n  minWidth: spacing(40),\n}))\n","import CasinoIcon from '@material-ui/icons/Casino'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const CasinoIconStyled = styled(CasinoIcon)(({ theme: { spacing } }: Themed) => ({\n  marginRight: spacing(1),\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport red from '@material-ui/core/colors/red'\n\nexport const RollDiceButtonTip = styled('span')(({\n  theme: { spacing, palette: { grey } },\n}: Themed) => ({\n  marginLeft: spacing(1),\n  textTransform: 'none',\n  color: red.A100,\n\n  '& span': {\n    color: grey['600'],\n    fontWeight: 'bold',\n  },\n}))\n","import React, { FC } from 'react'\nimport { RollDiceButtonStyled } from './RollDiceButtonStyled'\nimport { CasinoIconStyled } from './CasinoIconStyled'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { RollDiceButtonTip } from './RollDiceButtonTip'\nimport { RollDiceButtonProps } from './RollDiceButtonConnected'\nimport { MAX_SHOT_COUNT } from '../../../redux/reducers/playerMove'\n\nconst defaultDelay = 300\nlet delay = 0\n\nlet timer: number | null = null\n\nexport const RollDiceButton: FC<RollDiceButtonProps> = ({ loading, shot, generateRandomDices, setLoading }) => {\n\n  const shuffle = () => {\n    delay = Date.now()\n    setLoading(true)\n    if (timer !== null) {\n      window.clearTimeout(timer)\n    }\n  }\n\n  const shuffleUp = () => {\n    if (loading) {\n      const d = Date.now() - delay\n      timer = window.setTimeout(() => {\n        generateRandomDices()\n        setLoading(false)\n      }, d < defaultDelay ? defaultDelay - d : 0)\n    }\n  }\n\n  const disabled = shot >= MAX_SHOT_COUNT\n\n  return (\n    <RollDiceButtonStyled\n      onMouseUp={shuffleUp}\n      onMouseDown={shuffle}\n      onMouseLeave={shuffleUp}\n      disabled={disabled}\n    >\n      {disabled ? i18n('button.writeDownYourPoints') : (\n        <>\n          <CasinoIconStyled fontSize=\"large\" />\n          {i18n('button.dropDices')}\n          <RollDiceButtonTip>\n            {shot}\n            <span> / {MAX_SHOT_COUNT}</span>\n          </RollDiceButtonTip>\n        </>\n      )}\n    </RollDiceButtonStyled>\n  )\n}\n","export const getRandomInt = (min: number, max: number): number => (\n  Math.floor(Math.random() * (max - min + 1)) + min\n)\n\nexport const rand = () => getRandomInt(1, 6)\n","import { connect } from 'react-redux'\nimport { RollDiceButton } from './RollDiceButton'\nimport { generateRandomDicesThunk } from '../../../redux/actions/generateRandomDicesThunk'\nimport { LoadingState, SetLoading, setLoading } from '../../../redux/reducers/loading'\nimport { State } from '../../../redux/defaultState'\nimport { ThunkAction } from '../../../helpers/types'\nimport { PlayerMoveState } from '../../../redux/reducers/playerMove'\n\ninterface MapStateToProps extends LoadingState {\n  shot: PlayerMoveState['playerMove'][1]\n}\n\ninterface MapDispatchToProps {\n  generateRandomDices: ThunkAction\n  setLoading: SetLoading\n}\n\nexport interface RollDiceButtonProps extends MapStateToProps, MapDispatchToProps {\n}\n\nexport const RollDiceButtonConnected = connect<MapStateToProps, MapDispatchToProps, {}, RollDiceButtonProps, State>(\n  ({ loading, playerMove: { 1: shot } }) => ({\n    loading,\n    shot,\n  }),\n  { generateRandomDices: generateRandomDicesThunk, setLoading },\n  (\n    { loading, shot },\n    { generateRandomDices, setLoading },\n  ): RollDiceButtonProps => ({\n    loading,\n    shot,\n    setLoading,\n    generateRandomDices,\n  }),\n)(RollDiceButton)\n","import { rand } from '../../helpers/random'\nimport { generateRandomDices } from '../reducers/dices'\nimport { ThunkAction } from '../../helpers/types'\nimport { increaseShot } from '../reducers/playerMove'\n\nexport const generateRandomDicesThunk: ThunkAction = () => (dispatch, getState) => {\n  const { dices, dicesSelected } = getState()\n  let randDices = dices\n\n  dices.forEach((item, index) => {\n    if (dicesSelected.indexOf(index) === -1) {\n      randDices[index] = rand()\n    }\n  })\n\n  // TODO 2\n  // dispatch({\n  //   type: ConditionalCSS.HISTORY_PUSH,\n  //   entry: {\n  //     dices: List(randDices),\n  //     playerId: state.getIn(['playerMove', 'playerId']),\n  //     shot: state.getIn(['playerMove', 'shot']),\n  //   }\n  // })\n\n  dispatch(increaseShot())\n  dispatch(generateRandomDices(randDices))\n}\n","import { connect } from 'react-redux'\nimport { ResetDicesButton } from './ResetDicesButton'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../../helpers/visibilityHOC'\nimport { State } from '../../../redux/defaultState'\nimport { DicesSelectedState, unselectAllDices, UnselectAllDices } from '../../../redux/reducers/dicesSelected'\n\ninterface MapStateToProps extends DicesSelectedState {\n}\n\ninterface MapDispatchToProps {\n  unselectAllDices: UnselectAllDices\n}\n\nexport interface ResetDicesButtonProps extends MapDispatchToProps, VisibilityHOCProps {\n}\n\nexport const ResetDicesButtonConnected = compose(\n  connect(\n    ({ dicesSelected }: State): MapStateToProps => ({\n      dicesSelected,\n    }),\n    { unselectAllDices },\n    ({ dicesSelected }, { unselectAllDices }): ResetDicesButtonProps => ({\n      unselectAllDices,\n\n      hidden: dicesSelected.length === 0,\n    }),\n  ),\n  visibilityHOC,\n)(ResetDicesButton)\n","import React, { FC } from 'react'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport Fab from '@material-ui/core/Fab'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft'\nimport { ResetDicesButtonProps } from './ResetDicesButtonConnected'\n\nexport const ResetDicesButton: FC<ResetDicesButtonProps> = ({ unselectAllDices }) => (\n  <Fab color=\"secondary\" variant=\"extended\" onClick={unselectAllDices} style={{ marginBottom: '16px' }}>\n    <RotateLeftIcon fontSize=\"large\" />\n    {i18n('button.reset')}\n  </Fab>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\n\nexport const DicesActionsWrapper = styled('div')(({ theme: { spacing } }: Themed) => ({\n  // margin: spacing(2),\n  // height: '20em',\n  marginBottom: spacing(3),\n}))\n","import React, { FC } from 'react'\nimport { RollDiceButtonConnected } from './RollDiceButton/RollDiceButtonConnected'\nimport { ResetDicesButtonConnected } from './ResetDicesButton/ResetDicesButtonConnected'\nimport { DicesActionsWrapper } from './DicesActionsWrapper'\n\nexport const DicesActions: FC = () => (\n  <DicesActionsWrapper>\n    <RollDiceButtonConnected />\n    <ResetDicesButtonConnected />\n  </DicesActionsWrapper>\n)\n","import React, { FC } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport useTheme from '@material-ui/core/styles/useTheme'\n\nexport const Heading: FC = ({ children }) => {\n  const { spacing } = useTheme()\n\n  return (\n    <Typography variant=\"h5\" component=\"h3\" style={{ marginBottom: spacing(3) }}>\n      {children}\n    </Typography>\n  )\n}\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\nimport Typography from '@material-ui/core/Typography'\n\nexport const Paragraph = styled(\n  (props) => (\n    <Typography paragraph {...props} />\n  ),\n)(({ theme: { spacing } }: Themed) => ({\n  margin: `${spacing(1)} 0`,\n}))\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport TableCell from '@material-ui/core/TableCell'\n\nexport const TableCellNoWrap = styled(TableCell)({\n  whiteSpace: 'nowrap',\n})\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n/i18n'\nimport { Heading } from './Heading'\nimport { Paragraph } from './Paragraph'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport { TableCellNoWrap } from './TableCellNoWrap'\nimport Typography from '@material-ui/core/Typography'\n\nexport const Rules: FC = () => (\n  <>\n    <Typography paragraph>\n      {i18n('help.intro')}\n    </Typography>\n    <Heading>\n      {i18n('help.gameplay.header')}\n    </Heading>\n    <Typography paragraph>\n      {i18n('help.gameplay.text')}\n    </Typography>\n    <Heading>\n      {i18n('help.scoring.header')}\n    </Heading>\n    <Typography paragraph>{i18n('help.scoring.text')}</Typography>\n    <Typography paragraph>{i18n('help.topSection')}</Typography>\n    <Table size=\"small\">\n      <TableBody>\n        <TableRow>\n          <TableCell>{i18n('combination.ones')}</TableCell>\n          <TableCell>{i18n('combination.ones.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('combination.twos')}</TableCell>\n          <TableCell>{i18n('combination.twos.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('combination.threes')}</TableCell>\n          <TableCell>{i18n('combination.threes.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('combination.fours')}</TableCell>\n          <TableCell>{i18n('combination.fours.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('combination.fives')}</TableCell>\n          <TableCell>{i18n('combination.fives.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>{i18n('combination.sixes')}</TableCell>\n          <TableCell>{i18n('combination.sixes.title')}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n\n    <br/>\n\n    <Paragraph>\n      {i18n('help.topSection.tip')}\n    </Paragraph>\n\n    <br/>\n\n    <Paragraph>\n      {i18n('help.bottomSection')}\n    </Paragraph>\n    <Table size=\"small\">\n      <TableBody>\n        <TableRow>\n          <TableCellNoWrap>{i18n('combination.threeOfAKind')}</TableCellNoWrap>\n          <TableCell>{i18n('combination.threeOfAKind.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('combination.fourOfAKind')}</TableCellNoWrap>\n          <TableCell>{i18n('combination.fourOfAKind.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('combination.smallStraight')}</TableCellNoWrap>\n          <TableCell>{i18n('combination.smallStraight.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('combination.bigStraight')}</TableCellNoWrap>\n          <TableCell>{i18n('combination.bigStraight.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('combination.fullHouse')}</TableCellNoWrap>\n          <TableCell>{i18n('combination.fullHouse.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('combination.yacht')}</TableCellNoWrap>\n          <TableCell>{i18n('combination.yacht.title')}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCellNoWrap>{i18n('combination.chance')}</TableCellNoWrap>\n          <TableCell>{i18n('combination.chance.title')}</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  </>\n)\n","/*tslint:disable:no-magic-numbers*/\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../helpers/types'\n\nexport const StartGameButtonWrapper = styled('div')(({ theme: { spacing } }: Themed) => ({\n  paddingTop: spacing(2),\n  paddingBottom: spacing(4),\n}))\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\nimport { conditionalCSS } from '../../../helpers/conditionalCSS'\nimport TableCell from '@material-ui/core/TableCell'\n\nexport interface TableCellStyledProps {\n  heading?: boolean\n  selected?: boolean\n  noPadding?: boolean\n  centered?: boolean\n  width?: number\n  active?: boolean\n}\n\nexport const TABLE_FIRST_COLUMN_WIDTH = 150\nexport const TABLE_COLUMN_WIDTH = 170\n\nexport const TableCellStyled = styled(\n  ({\n    heading,\n    selected,\n    noPadding,\n    centered,\n    width,\n    active,\n    ...props\n  }: TableCellStyledProps) => (\n    <TableCell component=\"div\" {...props} />\n  ),\n)(({\n  theme: { spacing, palette: { type, grey, background: { paper } } },\n  centered, heading, selected, noPadding, width, active,\n}: Themed & TableCellStyledProps) => {\n  const activeColor = type === 'dark' ? paper : grey['300']\n\n  return conditionalCSS([\n    [centered, {\n      textAlign: 'center',\n    }],\n    [heading, {\n      color: '#f99',\n    }],\n    [selected, {\n      backgroundColor: activeColor,\n    }],\n    [noPadding, {\n      padding: 0,\n      position: 'relative',\n    }],\n    [width, {\n      width,\n      minWidth: width,\n    }],\n    [active && !heading, {\n      borderLeft: `1px solid ${activeColor}`,\n      borderRight: `1px solid ${activeColor}`,\n    }],\n    [heading && active, {\n      backgroundColor: activeColor,\n      borderTopRightRadius: spacing(1),\n      borderTopLeftRadius: spacing(1),\n    }],\n  ])\n})\n\n","import { Dices } from '../redux/reducers/dices'\nimport { Combination } from '../redux/reducers/combinations'\nimport { uniq } from './uniq'\n\nexport type Return<T> = {\n  points?: T\n  maxPoints?: T\n}\n\ntype MaxPoints = 25 | 30 | 50\n\ntype ResultsMap = {\n  [Combination.SMALL_STRAIGHT]: Return<MaxPoints>\n  [Combination.BIG_STRAIGHT]: Return<MaxPoints>\n  [Combination.THE_YACHT]: Return<MaxPoints>\n  [Combination.TWO_PAIR]: Return<MaxPoints>\n  [Combination.FULL_HOUSE]: Return<MaxPoints>\n}\n\nexport const resultsMap: ResultsMap = {\n  [Combination.SMALL_STRAIGHT]: { points: 25, maxPoints: 25 },\n  [Combination.BIG_STRAIGHT]: { points: 30, maxPoints: 30 },\n  [Combination.THE_YACHT]: { points: 50, maxPoints: 50 },\n  [Combination.TWO_PAIR]: { points: 25, maxPoints: 25 },\n  [Combination.FULL_HOUSE]: { points: 30, maxPoints: 30 },\n}\n\nexport type CheckMatch = (combinationType: Combination, dices: Dices) => Return<number>\n\nexport const checkMatch: CheckMatch = (combinationType, dices) => {\n  const values = Object.values(dices)\n  const sequence = values.sort()\n  const seq = uniq(sequence)\n  const seqString = seq.toString()\n\n  switch (combinationType) {\n    case Combination.ONE:\n    case Combination.TWO:\n    case Combination.THREE:\n    case Combination.FOUR:\n    case Combination.FIVE:\n    case Combination.SIX: {\n      const matches = sequence.filter(item => item === combinationType)\n      if (matches.length >= 3) {\n        return {\n          points: matches.length * combinationType,\n          maxPoints: 5 * combinationType,\n        }\n      }\n      break\n    }\n    case Combination.EQUAL_3:\n    case Combination.EQUAL_4: {\n      const count = parseInt(combinationType.split('_')[1], 10)\n\n      const counts: { [k: string]: number } = {}\n\n      sequence.forEach(x => {\n        counts[x] = (counts[x] || 0) + 1\n      })\n\n      const number = parseInt(Object.keys(counts).filter(key => counts[key] >= count)[0], 10)\n\n      if (!isNaN(number)) {\n        return {\n          points: number * count,\n          maxPoints: 6 * count,\n        }\n      }\n\n      break\n    }\n    case Combination.SMALL_STRAIGHT: {\n      const successResult = resultsMap[Combination.SMALL_STRAIGHT]\n\n      if (seq.length === 5) {\n        if (['1,2,3,4,5', '2,3,4,5,6'].indexOf(seqString) !== -1) {\n          return successResult\n        }\n        for (let i = 1; i <= seq.length; i++) {\n          if (seq[i - 1] !== i) {\n            let seqCopy = [...seq]\n            seqCopy.shift()\n            if (seqCopy.length === 4 && seqCopy.toString() === '3,4,5,6') {\n              return successResult\n            }\n            seqCopy = [...seq]\n            seqCopy.pop()\n            if (seqCopy.length === 4 && seqCopy.toString() === '1,2,3,4') {\n              return successResult\n            }\n          }\n        }\n      }\n\n      if (seq.length === 4 && ['1,2,3,4', '2,3,4,5', '3,4,5,6'].indexOf(seqString) !== -1) {\n        return successResult\n      }\n      break\n    }\n    case Combination.BIG_STRAIGHT: {\n      if (seq.length === 5 && ['1,2,3,4,5', '2,3,4,5,6'].indexOf(seqString) !== -1) {\n        return resultsMap[Combination.BIG_STRAIGHT]\n      }\n      break\n    }\n    case Combination.THE_YACHT: {\n      if (seq.length === 1 && seq[0] !== -1) {\n        return resultsMap[Combination.THE_YACHT]\n      }\n      break\n    }\n    case Combination.CHANCE: {\n      return {\n        points: sequence.reduce((a, b) => a + b, 0),\n        maxPoints: 30,\n      }\n    }\n    case Combination.FULL_HOUSE: {\n      if (seq.length === 2) {\n        const sorted = [...sequence].sort()\n        if (\n          (\n            sorted[0] === sorted[1] &&\n            sorted[1] === sorted[2] &&\n            sorted[3] === sorted[4] &&\n            sorted[0] !== sorted[3]\n          ) || (\n            sorted[0] === sorted[1] &&\n            sorted[2] === sorted[3] &&\n            sorted[3] === sorted[4] &&\n            sorted[0] !== sorted[2]\n          )\n        ) {\n          return resultsMap[Combination.FULL_HOUSE]\n        }\n      }\n      break\n    }\n    case Combination.TWO_PAIR: {\n      const sorted = sequence.sort()\n      if (\n        (\n          sorted[0] === sorted[1] &&\n          sorted[2] === sorted[3] &&\n          sorted[0] !== sorted[2]\n        ) || (\n          sorted[1] === sorted[2] &&\n          sorted[3] === sorted[4] &&\n          sorted[1] !== sorted[3]\n        ) || (\n          sorted[0] === sorted[1] &&\n          sorted[3] === sorted[4] &&\n          sorted[0] !== sorted[3]\n        )\n      ) {\n        return resultsMap[Combination.TWO_PAIR]\n      }\n      break\n    }\n    default:\n      return {}\n  }\n\n  return {}\n}\n","export const uniq = (a: number[]): number[] => [...new Set(a)]\n","import { CSSProperties } from 'react'\nimport { AlignItemsProperty, JustifyContentProperty } from 'csstype'\n\ntype Stretch4 = (top?: number, right?: number, bottom?: number, left?: number) => CSSProperties\n\nconst iU = (value: number | undefined): boolean => value === undefined\n\nexport const stretch: Stretch4 = (\n  top = 0,\n  right,\n  bottom,\n  left,\n) => {\n\n  if (iU(right) && iU(bottom) && iU(left)) {\n    left = right = bottom = top\n  }\n\n  if (!iU(top) && !iU(right) && iU(bottom) && iU(left)) {\n    left = right\n    bottom = top\n  }\n\n  if (!iU(top) && !iU(right) && !iU(bottom) && iU(left)) {\n    left = right\n  }\n\n  return {\n    position: 'absolute',\n    top,\n    right,\n    bottom,\n    left,\n  }\n}\n\ntype Align = (vertical?: AlignItemsProperty, horizontal?: JustifyContentProperty) => CSSProperties\n\nexport const align: Align = (\n  vertical = 'center',\n  horizontal = 'center',\n) => ({\n  display: 'flex',\n  alignItems: vertical,\n  justifyContent: horizontal,\n})\n","import styled from '@material-ui/styles/styled'\nimport { align, stretch } from '../../../../helpers/css'\nimport { EMPTY_CELL } from '../../../../redux/reducers/combinations'\nimport { Themed } from '../../../../helpers/types'\n\nexport const Empty = styled('div')(({\n  theme: { palette: { type, grey, background: { paper } } },\n}: Themed) => ({\n  '&, &::before': {\n    ...stretch(),\n  },\n  '&::before': {\n    content: `'${EMPTY_CELL}'`,\n    ...align(),\n    color: type === 'dark' ? paper : grey[300],\n  },\n}))\n","import styled from '@material-ui/styles/styled'\nimport MaterialButton, { ButtonProps } from '@material-ui/core/Button'\nimport { TableSizes } from '../../../../redux/reducers/tableSize'\nimport React from 'react'\nimport { stretch } from '../../../../helpers/css'\n\ninterface ButtonStyledProps extends Pick<ButtonProps, 'size' | 'color' | 'onClick'> {\n}\n\nexport const Button = styled(\n  ({ size, color, ...props }: ButtonStyledProps) => (\n    <MaterialButton\n      {...props}\n      fullWidth\n      color={color}\n      variant=\"contained\"\n      size={size === TableSizes.MEDIUM ? 'large' : size}\n    />\n  ),\n)({\n  ...stretch(),\n  textTransform: 'lowercase',\n  borderRadius: 0,\n  padding: 0,\n})\n","import styled from '@material-ui/styles/styled'\nimport { align, stretch } from '../../../../helpers/css'\n\nexport const Matched = styled('div')({\n  ...stretch(),\n  ...align(),\n})\n","import React from 'react'\nimport styled from '@material-ui/styles/styled'\nimport grey from '@material-ui/core/colors/grey'\nimport { Themed } from '../../../../helpers/types'\nimport { conditionalCSS } from '../../../../helpers/conditionalCSS'\n\ninterface BonusProps {\n  alt?: boolean\n}\n\nexport const Bonus = styled(\n  ({ alt, ...props }: BonusProps) => <div {...props} />,\n)(({ theme: { palette: { type } }, alt }: Themed & BonusProps) => conditionalCSS([\n  [alt, {\n    fontStyle: 'italic',\n    color: type === 'dark' ? grey[700] : grey[400],\n  }],\n]))\n","import { i18n } from './i18n/i18n'\nimport React from 'react'\nimport { CheckMatch } from './checkMatch'\nimport styled from '@material-ui/styles/styled'\nimport { Themed } from './types'\n\ntype RenderPoints = (\n  points: ReturnType<CheckMatch>['points'],\n  maxPoints: ReturnType<CheckMatch>['maxPoints'],\n) => string | JSX.Element\n\nexport const Tip = styled('span')(({ theme: { spacing, palette: { grey } } }: Themed) => ({\n  marginLeft: spacing(.5),\n  fontSize: '.85em',\n  fontStyle: 'italic',\n  color: grey[500],\n}))\n\nexport const renderPoints: RenderPoints = (points, maxPoints) =>\n  (points !== undefined) && (maxPoints !== undefined) && (points < maxPoints)\n    ? (\n      <>\n        {points}\n        <Tip>{`${i18n('ofMax')} ${maxPoints}`}</Tip>\n      </>\n    ) : (\n      <span>{points}</span>\n    )\n\n","type Value = string | number\n\ntype InArray = (arr: Array<Value>, value: Value) => boolean\n\nexport const inArray: InArray = (arr, value) => (\n  arr.indexOf(value) !== -1\n)\n","import { inArray } from './inArray'\nimport { i18n } from './i18n/i18n'\n\nconst calc = (n: number) => (...sequence: number[]): boolean => inArray(sequence, n % 10)\n\nexport const defineWorkEnding = (n: number): string | undefined => {\n  const calculated = calc(n)\n\n  if (inArray([11, 12, 13, 14], n)) {\n    return i18n('points1')\n  }\n\n  if (calculated(1)) {\n    return i18n('points2')\n  }\n\n  if (calculated(2, 3, 4)) {\n    return i18n('points3')\n  }\n\n  if (calculated(0, 5, 6, 7, 8, 9)) {\n    return i18n('points4')\n  }\n}\n","import { connect } from 'react-redux'\nimport cx from 'classnames'\n\nimport { State } from '../../../redux/defaultState'\nimport { CombinationInfo, EMPTY_CELL, isBonus as _isBonus } from '../../../redux/reducers/combinations'\nimport { Player } from '../../../redux/reducers/players'\nimport { DicesState } from '../../../redux/reducers/dices'\nimport { PlayerMoveState } from '../../../redux/reducers/playerMove'\nimport { CheckMatch, checkMatch } from '../../../helpers/checkMatch'\nimport { saveCombinationThunk, SaveCombinationThunk } from '../../../redux/actions/saveCombinationThunk'\nimport { Combination } from './Combination'\n\ntype Combination = Pick<CombinationInfo, 'combination'>;\n\ninterface MapStateToProps extends DicesState, Combination {\n  activePlayerId: PlayerMoveState['playerMove'][0]\n  existingCombination: number | EMPTY_CELL\n}\n\ninterface MapDispatchToProps {\n  saveCombinationThunk: SaveCombinationThunk\n}\n\ninterface OwnProps extends Combination {\n  playerId: Player['id']\n  isMoveAvailable: boolean\n}\n\nexport interface CombinationProps extends Pick<MapStateToProps, 'existingCombination'>, ReturnType<CheckMatch> {\n  type: string | 'matching' | 'bonus' | 'matched' | 'strike'\n\n  save(): void\n\n  strikeOut(): void\n}\n\nexport const CombinationConnected = connect<MapStateToProps, MapDispatchToProps, OwnProps, CombinationProps, State>(\n  (\n    { playerPoints, dices, playerMove: { 0: activePlayerId } },\n    { playerId, combination },\n  ) => {\n    const existingCombination = (playerPoints[playerId] || [])[combination]\n\n    return {\n      dices,\n      activePlayerId,\n      combination,\n      existingCombination: existingCombination === undefined ? EMPTY_CELL : existingCombination,\n    }\n  },\n  { saveCombinationThunk },\n  (\n    { dices, combination, activePlayerId, existingCombination },\n    { saveCombinationThunk },\n    { playerId, isMoveAvailable },\n  ): CombinationProps => {\n    const { points, maxPoints } = checkMatch(combination, dices)\n    const active = activePlayerId === playerId\n    const isBonus = _isBonus(combination)\n    const matched = existingCombination !== EMPTY_CELL && !isBonus\n\n    return {\n      type: cx({\n        matched,\n        matching: active && !matched && points !== undefined && points > 0,\n        bonus: isBonus && existingCombination !== EMPTY_CELL,\n        strike: active && !matched && !isBonus && !isMoveAvailable,\n      }),\n\n      existingCombination,\n\n      points,\n      maxPoints,\n      save() {\n        saveCombinationThunk(playerId, combination, points)\n      },\n      strikeOut() {\n        saveCombinationThunk(playerId, combination, 0)\n      },\n    }\n  },\n)(Combination)\n","import { ThunkAction } from '../../helpers/types'\nimport { nextTurnThunk } from './nextTurnThunk'\nimport { SaveCombinationParams as P, saveCombination } from '../reducers/playerPoints'\nimport { resetDices } from '../reducers/dices'\nimport { unselectAllDices } from '../reducers/dicesSelected'\n\nexport type SaveCombinationThunk = (playerId: P[0], combination: P[1], points: P[2]) => ReturnType<ThunkAction>\n\nexport const saveCombinationThunk: SaveCombinationThunk = (playerId, combination, points) => (dispatch) => {\n  dispatch(nextTurnThunk())\n  dispatch(resetDices())\n  dispatch(unselectAllDices())\n  dispatch(saveCombination(playerId, combination, points))\n}\n","import React, { FC } from 'react'\nimport { Empty } from './CellContent/Empty'\nimport { Button } from './CellContent/Button'\nimport { Matched } from './CellContent/Matched'\nimport { Bonus } from './CellContent/Bonus'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { CombinationProps } from './CombinationConnected'\nimport { renderPoints } from '../../../helpers/renderPoints'\nimport { renderBonus } from '../../../helpers/renderBonus'\n\nexport const Combination: FC<CombinationProps> = ({\n  type,\n  save,\n  strikeOut,\n  points,\n  maxPoints,\n  existingCombination,\n}) => {\n\n  switch (type) {\n    case 'matching':\n      return (\n        <Button color=\"primary\" onClick={save}>\n          {renderPoints(points, maxPoints)}\n        </Button>\n      )\n    case 'matched': {\n      return (\n        <Matched>\n          {existingCombination}\n        </Matched>\n      )\n    }\n    case 'bonus': {\n      const { bonus, isNegative } = renderBonus(existingCombination as number)\n\n      return (\n        <Bonus alt={isNegative}>\n          {bonus}\n        </Bonus>\n      )\n    }\n    case 'strike': {\n      return (\n        <Button color=\"secondary\" onClick={strikeOut}>\n          {i18n('button.strikeOut')}\n        </Button>\n      )\n    }\n    default:\n      return (\n        <Empty />\n      )\n  }\n}\n","import { i18n } from './i18n/i18n'\nimport { defineWorkEnding } from './defineWorkEnding'\n\nexport type RenderBonus = (existingCombination: number) => {\n  isNegative: boolean\n  bonus: string | number\n}\n\nexport const renderBonus: RenderBonus = (existingCombination) => {\n  const isNegative = Math.sign(existingCombination) === -1\n\n  return {\n    isNegative,\n    bonus: isNegative\n      ? `${i18n('more')} ${existingCombination * -1} ${defineWorkEnding(existingCombination * -1)}`\n      : existingCombination,\n  }\n}\n\n","import React, { ComponentType } from 'react'\nimport styled from '@material-ui/styles/styled'\nimport MaterialTable from '@material-ui/core/Table'\nimport MaterialTableBody from '@material-ui/core/TableBody'\nimport MaterialTableRow from '@material-ui/core/TableRow'\nimport MaterialTableHead from '@material-ui/core/TableHead'\nimport MaterialTableFooter from '@material-ui/core/TableFooter'\nimport { Themed } from '../../../helpers/types'\n\nconst AsDiv = (Component: ComponentType) => styled((props) => (\n  <Component component=\"div\" {...props} />\n))({\n  display: 'block',\n})\n\nexport const Table = AsDiv(MaterialTable)\n\nexport const TableHead = AsDiv(MaterialTableHead)\n\nexport const TableBody = styled(AsDiv(MaterialTableBody))({})\n\nexport const TableFooter = styled(AsDiv(MaterialTableFooter))(({\n  theme: { palette: { type, grey, background: { paper } } },\n}: Themed) => ({\n  '& > div > div': {\n    borderTop: `2px solid ${type === 'dark' ? paper : grey['300']}`,\n    borderBottom: 0,\n    lineHeight: 'inherit',\n    fontSize: 'inherit',\n    fontWeight: 'bold',\n  },\n}))\n\nexport const TableRow = AsDiv(MaterialTableRow)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { Player } from '../reducers/players'\n\nexport const makePlayersSelector = () => createSelector<State, Player[], Player[]>(\n  ({ players }) => players,\n  (players) => players,\n)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { PlayerMoveState } from '../reducers/playerMove'\n\ntype R1 = PlayerMoveState['playerMove']\n\n/**\n * TODO: test how this 'make' works\n */\nexport const makePlayerMoveSelector = () => createSelector<State, R1, R1>(\n  ({ playerMove }) => playerMove,\n  (playerMove) => playerMove,\n)\n\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n/i18n'\nimport { TABLE_FIRST_COLUMN_WIDTH, TableCellStyled, TABLE_COLUMN_WIDTH } from './TablePartsStyled/TableCellStyled'\nimport { TableRow, TableHead } from './TablePartsStyled/Table'\nimport { useSelector } from 'react-redux'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { makePlayerMoveSelector } from '../../redux/selectors/makePlayerMoveSelector'\n\nexport const TableHeader: FC = () => {\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const playerMoveSelector = makePlayerMoveSelector()\n  const [activePlayerId] = useSelector(playerMoveSelector)\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCellStyled heading width={TABLE_FIRST_COLUMN_WIDTH}>\n          {i18n('combinations')}\n        </TableCellStyled>\n        {players.map(({ name, id }) => (\n          <TableCellStyled\n            key={id}\n            width={TABLE_COLUMN_WIDTH}\n            heading\n            centered\n            active={activePlayerId === id}\n          >\n            {name}\n          </TableCellStyled>\n        ))}\n        <TableCellStyled />\n      </TableRow>\n    </TableHead>\n  )\n}\n","import React, { FC } from 'react'\nimport { TABLE_COLUMN_WIDTH, TableCellStyled, TableCellStyledProps } from '../TablePartsStyled/TableCellStyled'\nimport { useSelector } from 'react-redux'\nimport { Player } from '../../../redux/reducers/players'\nimport { makePlayerMoveSelector } from '../../../redux/selectors/makePlayerMoveSelector'\n\ninterface CombinationWrapperProps extends Pick<TableCellStyledProps, 'selected'> {\n  playerId: Player['id']\n}\n\nexport const CombinationWrapper: FC<CombinationWrapperProps> = ({\n  children,\n  selected,\n  playerId,\n}) => {\n  const playerMoveSelector = makePlayerMoveSelector()\n  const [activePlayerId] = useSelector(playerMoveSelector)\n\n  return (\n    <TableCellStyled\n      selected={selected}\n      width={TABLE_COLUMN_WIDTH}\n      active={activePlayerId === playerId}\n      noPadding\n      centered\n    >\n      {children}\n    </TableCellStyled>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { PlayersState, PlayersTotals } from '../reducers/players'\nimport { PlayerPointsState } from '../reducers/playerPoints'\nimport { calcTotals } from '../../helpers/calcTotals'\n\ntype R1 = PlayersState & PlayerPointsState\n\nexport const makeGetTotalsSelector = () => createSelector<State, R1, PlayersTotals>(\n  ({ players, playerPoints }) => ({\n    players,\n    playerPoints,\n  }),\n  ({ players, playerPoints }) => calcTotals(players, playerPoints),\n)\n","import { Player, PlayersTotals } from '../redux/reducers/players'\nimport { PlayerPoints } from '../redux/reducers/playerPoints'\nimport { Combination } from '../redux/reducers/combinations'\n\ntype CalcTotals = (players: Player[], playerPoints: PlayerPoints) => PlayersTotals\n\nexport const calcTotals: CalcTotals = (players, playerPoints) => {\n  let totals: PlayersTotals = {}\n\n  players.forEach(({ id: playerId }) => {\n    const points = playerPoints[playerId] || {}\n\n    totals[playerId] = Object.keys(points).reduce((prev, key) => {\n      const curr = points[key as Combination]! // this points should exists!\n\n      if (key === Combination.BONUS && Math.sign(curr) === -1) {\n        return prev\n      }\n\n      return prev + curr\n    }, 0)\n  })\n\n  return totals\n}\n","import React, { FC } from 'react'\nimport { TABLE_COLUMN_WIDTH, TABLE_FIRST_COLUMN_WIDTH, TableCellStyled } from './TablePartsStyled/TableCellStyled'\nimport { i18n } from '../../helpers/i18n/i18n'\nimport { TableRow, TableFooter as TableFoot } from './TablePartsStyled/Table'\nimport { useSelector } from 'react-redux'\nimport { makeGetTotalsSelector } from '../../redux/selectors/makeGetTotalsSelector'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { makePlayerMoveSelector } from '../../redux/selectors/makePlayerMoveSelector'\n\nexport const TableFooter: FC = () => {\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const getTotalsSelector = makeGetTotalsSelector()\n  const totals = useSelector(getTotalsSelector)\n  const playerMoveSelector = makePlayerMoveSelector()\n  const [activePlayerId] = useSelector(playerMoveSelector)\n\n  return (\n    <TableFoot>\n      <TableRow>\n        <TableCellStyled width={TABLE_FIRST_COLUMN_WIDTH}>\n          {i18n('total')}\n        </TableCellStyled>\n        {players.map(({ id: playerId }) => (\n          <TableCellStyled\n            key={playerId}\n            width={TABLE_COLUMN_WIDTH}\n            centered\n            active={activePlayerId === playerId}\n            noPadding\n          >\n            {totals[playerId]}\n          </TableCellStyled>\n        ))}\n        <TableCellStyled />\n      </TableRow>\n    </TableFoot>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { CombinationInfo } from '../reducers/combinations'\n\nexport const combinationsSelector = createSelector<State, CombinationInfo[], CombinationInfo[]>(\n  ({ combinations }) => combinations,\n  (combinations) => combinations,\n)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { TableSizes } from '../reducers/tableSize'\n\nexport const tableSizeSelector = createSelector<State, TableSizes, TableSizes>(\n  ({ tableSize }) => tableSize,\n  (tableSize) => tableSize,\n)\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { isMoveAvailable } from '../../helpers/isMoveAvailable'\nimport { CombinationsState } from '../reducers/combinations'\nimport { DicesState } from '../reducers/dices'\nimport { PlayerPointsState } from '../reducers/playerPoints'\nimport { MAX_SHOT_COUNT, PlayerMoveState } from '../reducers/playerMove'\n\nexport interface R1 extends CombinationsState, DicesState, PlayerPointsState, PlayerMoveState {\n}\n\nexport const isMoveAvailableSelector = createSelector<State, R1, boolean>(\n  ({ combinations, dices, playerPoints, playerMove }) => ({\n    combinations,\n    dices,\n    playerPoints,\n    playerMove,\n  }),\n  ({ combinations, dices, playerPoints, playerMove: [activePlayerId, shot] }) =>\n    isMoveAvailable(\n      combinations,\n      dices,\n      playerPoints,\n      activePlayerId,\n      shot === MAX_SHOT_COUNT,\n    ),\n)\n","// import { checkMatch, prepareCombination as pc } from './index'\nimport { Combination, CombinationInfo } from '../redux/reducers/combinations'\nimport { checkMatch } from './checkMatch'\nimport { Dices } from '../redux/reducers/dices'\nimport { PlayerPoints } from '../redux/reducers/playerPoints'\n\ntype IsMoveAvailable = (\n  combinations: CombinationInfo[],\n  dices: Dices,\n  playerPoints: PlayerPoints,\n  activePlayerId: string,\n  noMoreShots: boolean,\n) => boolean\n\n/**\n * Return true if player have available moves\n */\nexport const isMoveAvailable: IsMoveAvailable = (\n  combinations,\n  dices,\n  playerPoints,\n  activePlayerId,\n  noMoreShots,\n) => {\n  const player = playerPoints[activePlayerId]\n\n  let matchesCount = 0\n  let noMoves = false\n\n  combinations.forEach(({ combination }) => {\n    const { points } = checkMatch(combination, dices)\n    const isInPlayerPoints = combination !== Combination.BONUS && player && !!player[combination]\n\n    /**\n     * Combination matched AND player hasn't this combination\n     */\n    if (points !== undefined && !isInPlayerPoints) {\n      matchesCount = matchesCount + 1\n    }\n\n    /**\n     * If no matches, no more shots and player already have this combination\n     */\n    if (points === undefined && noMoreShots) {\n      noMoves = true\n    }\n  })\n\n  return !(matchesCount === 0 && noMoves)\n}\n","import React, { FC } from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { TABLE_FIRST_COLUMN_WIDTH, TableCellStyled } from './TablePartsStyled/TableCellStyled'\nimport { CombinationConnected } from './Combination/CombinationConnected'\nimport { Combination, isBonus } from '../../redux/reducers/combinations'\nimport { Table, TableBody, TableRow } from './TablePartsStyled/Table'\nimport { TableHeader } from './TableHeader'\nimport { CombinationWrapper } from './Combination/CombinationWrapper'\nimport { TableFooter } from './TableFooter'\nimport { useSelector } from 'react-redux'\nimport { combinationsSelector } from '../../redux/selectors/combinationsSelector'\nimport { tableSizeSelector } from '../../redux/selectors/tableSizeSelector'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { isMoveAvailableSelector } from '../../redux/selectors/noMovesSelector'\n\nexport const CombinationsContainer: FC = () => {\n  const combinations = useSelector(combinationsSelector)\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const tableSize = useSelector(tableSizeSelector)\n  const isMoveAvailable = useSelector(isMoveAvailableSelector)\n\n  // console.log({\n  //   isMoveAvailable,\n  // })\n\n  return (\n    <Table size={tableSize}>\n      <TableHeader />\n      <TableBody>\n        {combinations.map(({ name, title, combination }) => (\n          <TableRow key={name}>\n            <TableCellStyled\n              selected={combination === Combination.BONUS}\n              width={TABLE_FIRST_COLUMN_WIDTH}\n            >\n              <Tooltip title={title} placement=\"top-start\" enterDelay={300}>\n                <span>{name}</span>\n              </Tooltip>\n            </TableCellStyled>\n            {players.map(({ id: playerId }) => (\n              <CombinationWrapper\n                key={playerId}\n                selected={isBonus(combination)}\n                playerId={playerId}\n              >\n                <CombinationConnected\n                  playerId={playerId}\n                  combination={combination}\n                  isMoveAvailable={isMoveAvailable}\n                />\n              </CombinationWrapper>\n            ))}\n            <TableCellStyled selected={isBonus(combination)} />\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter />\n    </Table>\n  )\n}\n","import React, { FC } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles<Theme>(({\n  spacing,\n  palette: { background: { paper } },\n}) => ({\n  paper: {\n    padding: spacing(2),\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n    border: `1px solid ${paper}`,\n  },\n  root: {\n    background: 'rgba(0, 0, 0, .7)',\n  },\n}))\n\nexport const DialogStyled: FC = ({ children }) => {\n  const { paper, root } = useStyles()\n\n  return (\n    <Dialog open classes={{ root, paper }}>\n      {children}\n    </Dialog>\n  )\n}\n","import styled from '@material-ui/styles/styled'\nimport DialogContent from '@material-ui/core/DialogContent'\n\nexport const DialogContentStyled = styled(DialogContent)({\n  padding: 0,\n  marginBottom: 1,\n  display: 'flex',\n})\n","import styled from '@material-ui/styles/styled'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogTitleStyled = styled(DialogTitle)(({\n  theme: { shape: { borderRadius }, palette: { text: { hint }, background: { paper } } },\n}: Themed) => ({\n  textAlign: 'center',\n  color: hint,\n  backgroundColor: paper,\n  marginBottom: 1,\n  borderTopRightRadius: borderRadius,\n  borderTopLeftRadius: borderRadius,\n}))\n","import styled from '@material-ui/styles/styled'\nimport DialogActions from '@material-ui/core/DialogActions'\n\nexport const DialogActionsStyled = styled(DialogActions)({\n  justifyContent: 'space-around',\n})\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogContentColumn = styled('div')(({\n  theme: { spacing },\n}: Themed) => ({\n  flex: 1,\n  textAlign: 'center',\n  minWidth: spacing(20),\n\n  marginLeft: 1,\n  '&:first-child': {\n    marginLeft: 0,\n  },\n}))\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogContentNameRow = styled('div')(({\n  theme: {\n    spacing,\n    typography: { h6 },\n    palette: { background: { paper } },\n  },\n}: Themed) => ({\n  ...h6,\n  padding: spacing(2),\n  backgroundColor: paper,\n  marginBottom: 1,\n}))\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogContentTotalRow = styled('div')(({\n  theme: {\n    spacing, typography: { h2 }, palette: { background: { paper } },\n  },\n}: Themed) => ({\n  ...h2,\n  padding: `${spacing(2)}px 0`,\n  backgroundColor: paper,\n}))\n","import React, { FC } from 'react'\nimport { DialogContentColumn } from './parts/DialogContentColumn'\nimport { DialogContentNameRow } from './parts/DialogContentNameRow'\nimport { DialogContentTotalRow } from './parts/DialogContentTotalRow'\nimport { makePlayersSelector } from '../../redux/selectors/makePlayersSelector'\nimport { useSelector } from 'react-redux'\nimport { makeGetTotalsSelector } from '../../redux/selectors/makeGetTotalsSelector'\n\nexport const EndOfGameStats: FC = () => {\n  const playersSelector = makePlayersSelector()\n  const players = useSelector(playersSelector)\n  const getTotalsSelector = makeGetTotalsSelector()\n  const totals = useSelector(getTotalsSelector)\n\n  return (\n    <>\n      {players.map(({ id, name }) => (\n        <DialogContentColumn key={id}>\n          <DialogContentNameRow>\n            {name}\n          </DialogContentNameRow>\n          <DialogContentTotalRow>\n            {totals[id]}\n          </DialogContentTotalRow>\n        </DialogContentColumn>\n      ))}\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { i18n } from '../../../helpers/i18n/i18n'\nimport { useDispatch } from 'react-redux'\nimport { ThunkAction2 } from '../../../helpers/types'\nimport { restartGameThunk } from '../../../redux/actions/restartGameThunk'\nimport HomeIcon from '@material-ui/icons/Home'\n\nexport const GoHomeButton: FC = () => {\n  const dispatch = useDispatch<ThunkAction2>()\n  const onClick = () => dispatch(restartGameThunk())\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      startIcon={<HomeIcon />}\n      onClick={onClick}\n    >\n      {i18n('button.goHome')}\n    </Button>\n  )\n}\n","import styled from '@material-ui/styles/styled'\nimport { Themed } from '../../../helpers/types'\n\nexport const DialogTipStyled = styled('div')(({\n  theme: {\n    shape: { borderRadius }, spacing, typography: { subtitle2 },\n    palette: { background: { paper }, text: { hint } },\n  },\n}: Themed) => ({\n  ...subtitle2,\n  color: hint,\n  textAlign: 'center',\n  padding: spacing(1, 5),\n  borderBottomLeftRadius: borderRadius,\n  borderBottomRightRadius: borderRadius,\n  backgroundColor: paper,\n  marginBottom: spacing(2),\n}))\n","import { connect } from 'react-redux'\n\nimport { EndOfGame } from './EndOfGame'\nimport { State } from '../../redux/defaultState'\nimport { compose } from 'redux'\nimport { visibilityHOC, VisibilityHOCProps } from '../../helpers/visibilityHOC'\nimport { CombinationsState } from '../../redux/reducers/combinations'\nimport { PlayerPointsState } from '../../redux/reducers/playerPoints'\n\ninterface MapStateToProps extends CombinationsState, PlayerPointsState {\n}\n\nexport interface EndOfGameProps {\n}\n\nexport const EndOfGameConnected = compose(\n  connect<MapStateToProps, {}, {}, EndOfGameProps & VisibilityHOCProps, State>(\n    ({ combinations, playerPoints }) => ({\n      combinations,\n      playerPoints,\n    }),\n    null,\n    ({ combinations, playerPoints }) => ({\n      // OH fcuk, this is cool\n      hidden: !(\n        Object.keys(combinations).length === Object.keys(\n          playerPoints[Object.keys(playerPoints)[Object.keys(playerPoints).length - 1]] || {},\n        ).length\n      ),\n    }),\n  ),\n  visibilityHOC,\n)(EndOfGame)\n","import React, { FC } from 'react'\nimport { i18n } from '../../helpers/i18n/i18n'\nimport { DialogStyled } from './parts/DialogStyled'\nimport { DialogContentStyled } from './parts/DialogContentStyled'\nimport { DialogTitleStyled } from './parts/DialogTitleStyled'\nimport { DialogActionsStyled } from './parts/DialogActionsStyled'\nimport { EndOfGameStats } from './EndOfGameStats'\nimport { GoHomeButton } from './parts/GoHomeButton'\nimport { MAX_POSSIBLE_POINTS } from '../../redux/reducers/combinations'\nimport { DialogTipStyled } from './parts/DialogTipStyled'\n\nexport const EndOfGame: FC = () => (\n  <DialogStyled>\n    <DialogTitleStyled>\n      {i18n('gameOver')}\n    </DialogTitleStyled>\n    <DialogContentStyled>\n      <EndOfGameStats />\n    </DialogContentStyled>\n    <DialogTipStyled>\n      {i18n('maximumPossibleNumberOfPoints')}: {MAX_POSSIBLE_POINTS}\n    </DialogTipStyled>\n    <DialogActionsStyled>\n      <GoHomeButton />\n    </DialogActionsStyled>\n  </DialogStyled>\n)\n","import 'typeface-roboto'\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { store } from './redux/createStore'\nimport { themeProviderHOC } from './helpers/themeProviderHOC'\nimport { App } from './components/App/App'\n\nconst AppWithProvider = themeProviderHOC(App)\n\nrender(\n  <Provider store={store}>\n    <AppWithProvider />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React, { FC } from 'react'\nimport { MainLayout } from '../MainLayout/MainLayout'\nimport { GamePhases } from '../../redux/reducers/gamePhase'\nimport { StartGameButtonConnected } from '../StartGameButton/StartGameButtonConnected'\nimport { PlayersSelection } from '../PlayersSelection/PlayersSelection'\nimport { DicesConnected } from '../Dices/DicesConnected'\nimport { DicesActions } from '../DicesActions/DicesActions'\nimport { Rules } from '../Rules/Rules'\nimport { StartGameButtonWrapper } from '../StartGameButton/StartGameButtonWrapper'\nimport { CombinationsContainer } from '../CombinationsContainer/CombinationsContainer'\nimport { EndOfGameConnected } from '../EndOfGame/EndOfGameConnected'\nimport { makeGamePhaseSelector } from '../../redux/selectors/makeGamePhaseSelector'\nimport { useSelector } from 'react-redux'\n\nexport const App: FC = () => {\n  const gamePhaseSelector = makeGamePhaseSelector()\n  const gamePhase = useSelector(gamePhaseSelector)\n\n  return (\n    <MainLayout>\n      {{\n        [GamePhases.PRE_GAME]: (\n          <>\n            <StartGameButtonWrapper>\n              <StartGameButtonConnected />\n            </StartGameButtonWrapper>\n            <Rules />\n          </>\n        ),\n        [GamePhases.PLAYERS_SELECTION]: (\n          <PlayersSelection />\n        ),\n        [GamePhases.IN_PLAY]: (\n          <>\n            <EndOfGameConnected />\n            <DicesConnected />\n            <DicesActions />\n            <CombinationsContainer />\n          </>\n        ),\n      }[gamePhase]}\n    </MainLayout>\n  )\n}\n","import { createSelector } from 'reselect'\nimport { State } from '../defaultState'\nimport { GamePhases } from '../reducers/gamePhase'\n\nexport const makeGamePhaseSelector = () => createSelector<State, GamePhases, GamePhases>(\n  ({ gamePhase }) => gamePhase,\n  (gamePhase) => gamePhase,\n)\n"],"sourceRoot":""}